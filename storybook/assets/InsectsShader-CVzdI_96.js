import{j as G}from"./jsx-runtime-z8MfsBtr.js";import{r as _e,g as p_}from"./index-BofL8h0e.js";import{B as NS}from"./BrandHeader-CtOgCNMO.js";import{B as FS}from"./BrandLanding-Bato0X7i.js";/* empty css              */import{r as OS}from"./index-C9rmetsa.js";const BS=()=>{const r=_e.useRef(null),[e,t]=_e.useState(!1);return _e.useEffect(()=>{console.log("BrandSection useEffect");const n=()=>{var s;t(!0),r.current&&((s=document.querySelector("#root"))==null||s.classList.add("branding-clicked"))},i=r.current;return i&&(i.addEventListener("click",n),i.addEventListener("touchstart",n),i.addEventListener("touchmove",n),i.addEventListener("mousewheel",n)),()=>{i&&(i.removeEventListener("click",n),i.removeEventListener("touchstart",n),i.removeEventListener("touchmove",n),i.removeEventListener("mousewheel",n))}},[]),G.jsxs("div",{className:`${e?"no-pointer-events":""} main-container`,ref:r,children:[G.jsx(FS,{brandHasBeenClicked:e}),G.jsx(NS,{brandHasBeenClicked:e})]})};BS.__docgenInfo={description:"",methods:[],displayName:"BrandSection"};/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ll="172",As={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Cs={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},m_=0,cp=1,g_=2,zS=3,v_=0,uh=1,Ua=2,Di=3,xr=0,Gn=1,Vt=2,Ji=0,Os=1,up=2,hp=3,fp=4,__=5,Wr=100,x_=101,y_=102,S_=103,M_=104,w_=200,E_=201,T_=202,b_=203,Su=204,Mu=205,A_=206,C_=207,R_=208,P_=209,I_=210,L_=211,D_=212,U_=213,N_=214,wu=0,Eu=1,Tu=2,Vs=3,bu=4,Au=5,Cu=6,Ru=7,cl=0,F_=1,O_=2,bi=0,B_=1,z_=2,k_=3,Cp=4,V_=5,H_=6,G_=7,dp="attached",W_="detached",hh=300,yr=301,Yr=302,Wa=303,Xa=304,jo=306,ja=1e3,Ti=1001,qa=1002,on=1003,Rp=1004,kS=1004,Fo=1005,VS=1005,Kt=1006,Na=1007,HS=1007,Zi=1008,GS=1008,Fi=1009,Pp=1010,Ip=1011,Hs=1012,fh=1013,Sr=1014,ni=1015,Jr=1016,dh=1017,ph=1018,Gs=1020,Lp=35902,Dp=1021,Up=1022,Un=1023,Np=1024,Fp=1025,jr=1026,Ws=1027,mh=1028,ul=1029,Op=1030,gh=1031,WS=1032,vh=1033,Fa=33776,Oa=33777,Ba=33778,za=33779,Pu=35840,Iu=35841,Lu=35842,Du=35843,Uu=36196,Nu=37492,Fu=37496,Ou=37808,Bu=37809,zu=37810,ku=37811,Vu=37812,Hu=37813,Gu=37814,Wu=37815,Xu=37816,ju=37817,qu=37818,Yu=37819,Zu=37820,Ju=37821,ka=36492,Ku=36494,Qu=36495,Bp=36283,$u=36284,eh=36285,th=36286,X_=2200,j_=2201,q_=2202,Ya=2300,nh=2301,vu=2302,Ls=2400,Ds=2401,Za=2402,_h=2500,zp=2501,XS=0,jS=1,qS=2,Y_=3200,Z_=3201,YS=3202,ZS=3203,Kr=0,J_=1,mr="",ei="srgb",Xs="srgb-linear",Ja="linear",Gt="srgb",JS=0,Rs=7680,KS=7681,QS=7682,$S=7683,eM=34055,tM=34056,nM=5386,iM=512,rM=513,sM=514,oM=515,aM=516,lM=517,cM=518,pp=519,K_=512,Q_=513,$_=514,kp=515,ex=516,tx=517,nx=518,ix=519,Ka=35044,uM=35048,hM=35040,fM=35045,dM=35049,pM=35041,mM=35046,gM=35050,vM=35042,_M="100",mp="300 es",Ni=2e3,Qa=2001;let $i=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,a=i.length;s<a;s++)i[s].call(this,e);e.target=null}}};const Pn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let jg=1234567;const Bs=Math.PI/180,Ho=180/Math.PI;function fi(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Pn[r&255]+Pn[r>>8&255]+Pn[r>>16&255]+Pn[r>>24&255]+"-"+Pn[e&255]+Pn[e>>8&255]+"-"+Pn[e>>16&15|64]+Pn[e>>24&255]+"-"+Pn[t&63|128]+Pn[t>>8&255]+"-"+Pn[t>>16&255]+Pn[t>>24&255]+Pn[n&255]+Pn[n>>8&255]+Pn[n>>16&255]+Pn[n>>24&255]).toLowerCase()}function mt(r,e,t){return Math.max(e,Math.min(t,r))}function Vp(r,e){return(r%e+e)%e}function xM(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function yM(r,e,t){return r!==e?(t-r)/(e-r):0}function Va(r,e,t){return(1-t)*r+t*e}function SM(r,e,t,n){return Va(r,e,1-Math.exp(-t*n))}function MM(r,e=1){return e-Math.abs(Vp(r,e*2)-e)}function wM(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function EM(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function TM(r,e){return r+Math.floor(Math.random()*(e-r+1))}function bM(r,e){return r+Math.random()*(e-r)}function AM(r){return r*(.5-Math.random())}function CM(r){r!==void 0&&(jg=r);let e=jg+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function RM(r){return r*Bs}function PM(r){return r*Ho}function IM(r){return(r&r-1)===0&&r!==0}function LM(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function DM(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function UM(r,e,t,n,i){const s=Math.cos,a=Math.sin,c=s(t/2),u=a(t/2),h=s((e+n)/2),f=a((e+n)/2),p=s((e-n)/2),m=a((e-n)/2),g=s((n-e)/2),x=a((n-e)/2);switch(i){case"XYX":r.set(c*f,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*f,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*f,c*h);break;case"XZX":r.set(c*f,u*x,u*g,c*h);break;case"YXY":r.set(u*g,c*f,u*x,c*h);break;case"ZYZ":r.set(u*x,u*g,c*f,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Hn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function xt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const NM={DEG2RAD:Bs,RAD2DEG:Ho,generateUUID:fi,clamp:mt,euclideanModulo:Vp,mapLinear:xM,inverseLerp:yM,lerp:Va,damp:SM,pingpong:MM,smoothstep:wM,smootherstep:EM,randInt:TM,randFloat:bM,randFloatSpread:AM,seededRandom:CM,degToRad:RM,radToDeg:PM,isPowerOfTwo:IM,ceilPowerOfTwo:LM,floorPowerOfTwo:DM,setQuaternionFromProperEuler:UM,normalize:xt,denormalize:Hn};class ue{constructor(e=0,t=0){ue.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=mt(this.x,e.x,t.x),this.y=mt(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=mt(this.x,e,t),this.y=mt(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(mt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(mt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*n-a*i+e.x,this.y=s*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class _t{constructor(e,t,n,i,s,a,c,u,h){_t.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,a,c,u,h)}set(e,t,n,i,s,a,c,u,h){const f=this.elements;return f[0]=e,f[1]=i,f[2]=c,f[3]=t,f[4]=s,f[5]=u,f[6]=n,f[7]=a,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],c=n[3],u=n[6],h=n[1],f=n[4],p=n[7],m=n[2],g=n[5],x=n[8],M=i[0],y=i[3],_=i[6],E=i[1],w=i[4],T=i[7],L=i[2],R=i[5],U=i[8];return s[0]=a*M+c*E+u*L,s[3]=a*y+c*w+u*R,s[6]=a*_+c*T+u*U,s[1]=h*M+f*E+p*L,s[4]=h*y+f*w+p*R,s[7]=h*_+f*T+p*U,s[2]=m*M+g*E+x*L,s[5]=m*y+g*w+x*R,s[8]=m*_+g*T+x*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],f=e[8];return t*a*f-t*c*h-n*s*f+n*c*u+i*s*h-i*a*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=f*a-c*h,m=c*u-f*s,g=h*s-a*u,x=t*p+n*m+i*g;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/x;return e[0]=p*M,e[1]=(i*h-f*n)*M,e[2]=(c*n-i*a)*M,e[3]=m*M,e[4]=(f*t-i*u)*M,e[5]=(i*s-c*t)*M,e[6]=g*M,e[7]=(n*u-h*t)*M,e[8]=(a*t-n*s)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,a,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*a+h*c)+a+e,-i*h,i*u,-i*(-h*a+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(ed.makeScale(e,t)),this}rotate(e){return this.premultiply(ed.makeRotation(-e)),this}translate(e,t){return this.premultiply(ed.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const ed=new _t;function rx(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const FM={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Oo(r,e){return new FM[r](e)}function $a(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function sx(){const r=$a("canvas");return r.style.display="block",r}const qg={};function Do(r){r in qg||(qg[r]=!0,console.warn(r))}function OM(r,e,t){return new Promise(function(n,i){function s(){switch(r.clientWaitSync(e,r.SYNC_FLUSH_COMMANDS_BIT,0)){case r.WAIT_FAILED:i();break;case r.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:n()}}setTimeout(s,t)})}function BM(r){const e=r.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function zM(r){const e=r.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const Yg=new _t().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Zg=new _t().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function kM(){const r={enabled:!0,workingColorSpace:Xs,spaces:{},convert:function(i,s,a){return this.enabled===!1||s===a||!s||!a||(this.spaces[s].transfer===Gt&&(i.r=_r(i.r),i.g=_r(i.g),i.b=_r(i.b)),this.spaces[s].primaries!==this.spaces[a].primaries&&(i.applyMatrix3(this.spaces[s].toXYZ),i.applyMatrix3(this.spaces[a].fromXYZ)),this.spaces[a].transfer===Gt&&(i.r=Vo(i.r),i.g=Vo(i.g),i.b=Vo(i.b))),i},fromWorkingColorSpace:function(i,s){return this.convert(i,this.workingColorSpace,s)},toWorkingColorSpace:function(i,s){return this.convert(i,s,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===mr?Ja:this.spaces[i].transfer},getLuminanceCoefficients:function(i,s=this.workingColorSpace){return i.fromArray(this.spaces[s].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,s,a){return i.copy(this.spaces[s].toXYZ).multiply(this.spaces[a].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return r.define({[Xs]:{primaries:e,whitePoint:n,transfer:Ja,toXYZ:Yg,fromXYZ:Zg,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:ei},outputColorSpaceConfig:{drawingBufferColorSpace:ei}},[ei]:{primaries:e,whitePoint:n,transfer:Gt,toXYZ:Yg,fromXYZ:Zg,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:ei}}}),r}const Nt=kM();function _r(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Vo(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let ho;class ox{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{ho===void 0&&(ho=$a("canvas")),ho.width=e.width,ho.height=e.height;const n=ho.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=ho}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=$a("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let a=0;a<s.length;a++)s[a]=_r(s[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(_r(t[n]/255)*255):t[n]=_r(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let VM=0;class Us{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:VM++}),this.uuid=fi(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let a=0,c=i.length;a<c;a++)i[a].isDataTexture?s.push(td(i[a].image)):s.push(td(i[a]))}else s=td(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function td(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?ox.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let HM=0;class tn extends $i{constructor(e=tn.DEFAULT_IMAGE,t=tn.DEFAULT_MAPPING,n=Ti,i=Ti,s=Kt,a=Zi,c=Un,u=Fi,h=tn.DEFAULT_ANISOTROPY,f=mr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:HM++}),this.uuid=fi(),this.name="",this.source=new Us(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=a,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new ue(0,0),this.repeat=new ue(1,1),this.center=new ue(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new _t,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=f,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==hh)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ja:e.x=e.x-Math.floor(e.x);break;case Ti:e.x=e.x<0?0:1;break;case qa:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ja:e.y=e.y-Math.floor(e.y);break;case Ti:e.y=e.y<0?0:1;break;case qa:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}tn.DEFAULT_IMAGE=null;tn.DEFAULT_MAPPING=hh;tn.DEFAULT_ANISOTROPY=1;class Dt{constructor(e=0,t=0,n=0,i=1){Dt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*s,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*s,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*s,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],f=u[4],p=u[8],m=u[1],g=u[5],x=u[9],M=u[2],y=u[6],_=u[10];if(Math.abs(f-m)<.01&&Math.abs(p-M)<.01&&Math.abs(x-y)<.01){if(Math.abs(f+m)<.1&&Math.abs(p+M)<.1&&Math.abs(x+y)<.1&&Math.abs(h+g+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const w=(h+1)/2,T=(g+1)/2,L=(_+1)/2,R=(f+m)/4,U=(p+M)/4,N=(x+y)/4;return w>T&&w>L?w<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(w),i=R/n,s=U/n):T>L?T<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(T),n=R/i,s=N/i):L<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(L),n=U/s,i=N/s),this.set(n,i,s,t),this}let E=Math.sqrt((y-x)*(y-x)+(p-M)*(p-M)+(m-f)*(m-f));return Math.abs(E)<.001&&(E=1),this.x=(y-x)/E,this.y=(p-M)/E,this.z=(m-f)/E,this.w=Math.acos((h+g+_-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=mt(this.x,e.x,t.x),this.y=mt(this.y,e.y,t.y),this.z=mt(this.z,e.z,t.z),this.w=mt(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=mt(this.x,e,t),this.y=mt(this.y,e,t),this.z=mt(this.z,e,t),this.w=mt(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(mt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class xh extends $i{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Dt(0,0,e,t),this.scissorTest=!1,this.viewport=new Dt(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Kt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const s=new tn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const a=n.count;for(let c=0;c<a;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0,this.textures[n].renderTarget=this;const t=Object.assign({},e.texture.image);return this.texture.source=new Us(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class di extends xh{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class hl extends tn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=on,this.minFilter=on,this.wrapR=Ti,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class GM extends di{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new hl(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class yh extends tn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=on,this.minFilter=on,this.wrapR=Ti,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class WM extends di{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new yh(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class pn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,a,c){let u=n[i+0],h=n[i+1],f=n[i+2],p=n[i+3];const m=s[a+0],g=s[a+1],x=s[a+2],M=s[a+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=g,e[t+2]=x,e[t+3]=M;return}if(p!==M||u!==m||h!==g||f!==x){let y=1-c;const _=u*m+h*g+f*x+p*M,E=_>=0?1:-1,w=1-_*_;if(w>Number.EPSILON){const L=Math.sqrt(w),R=Math.atan2(L,_*E);y=Math.sin(y*R)/L,c=Math.sin(c*R)/L}const T=c*E;if(u=u*y+m*T,h=h*y+g*T,f=f*y+x*T,p=p*y+M*T,y===1-c){const L=1/Math.sqrt(u*u+h*h+f*f+p*p);u*=L,h*=L,f*=L,p*=L}}e[t]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,a){const c=n[i],u=n[i+1],h=n[i+2],f=n[i+3],p=s[a],m=s[a+1],g=s[a+2],x=s[a+3];return e[t]=c*x+f*p+u*g-h*m,e[t+1]=u*x+f*m+h*p-c*g,e[t+2]=h*x+f*g+c*m-u*p,e[t+3]=f*x-c*p-u*m-h*g,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,a=e._order,c=Math.cos,u=Math.sin,h=c(n/2),f=c(i/2),p=c(s/2),m=u(n/2),g=u(i/2),x=u(s/2);switch(a){case"XYZ":this._x=m*f*p+h*g*x,this._y=h*g*p-m*f*x,this._z=h*f*x+m*g*p,this._w=h*f*p-m*g*x;break;case"YXZ":this._x=m*f*p+h*g*x,this._y=h*g*p-m*f*x,this._z=h*f*x-m*g*p,this._w=h*f*p+m*g*x;break;case"ZXY":this._x=m*f*p-h*g*x,this._y=h*g*p+m*f*x,this._z=h*f*x+m*g*p,this._w=h*f*p-m*g*x;break;case"ZYX":this._x=m*f*p-h*g*x,this._y=h*g*p+m*f*x,this._z=h*f*x-m*g*p,this._w=h*f*p+m*g*x;break;case"YZX":this._x=m*f*p+h*g*x,this._y=h*g*p+m*f*x,this._z=h*f*x-m*g*p,this._w=h*f*p-m*g*x;break;case"XZY":this._x=m*f*p-h*g*x,this._y=h*g*p-m*f*x,this._z=h*f*x+m*g*p,this._w=h*f*p+m*g*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],a=t[1],c=t[5],u=t[9],h=t[2],f=t[6],p=t[10],m=n+c+p;if(m>0){const g=.5/Math.sqrt(m+1);this._w=.25/g,this._x=(f-u)*g,this._y=(s-h)*g,this._z=(a-i)*g}else if(n>c&&n>p){const g=2*Math.sqrt(1+n-c-p);this._w=(f-u)/g,this._x=.25*g,this._y=(i+a)/g,this._z=(s+h)/g}else if(c>p){const g=2*Math.sqrt(1+c-n-p);this._w=(s-h)/g,this._x=(i+a)/g,this._y=.25*g,this._z=(u+f)/g}else{const g=2*Math.sqrt(1+p-n-c);this._w=(a-i)/g,this._x=(s+h)/g,this._y=(u+f)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(mt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,a=e._w,c=t._x,u=t._y,h=t._z,f=t._w;return this._x=n*f+a*c+i*h-s*u,this._y=i*f+a*u+s*c-n*h,this._z=s*f+a*h+n*u-i*c,this._w=a*f-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,a=this._w;let c=a*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=a,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const g=1-t;return this._w=g*a+t*this._w,this._x=g*n+t*this._x,this._y=g*i+t*this._y,this._z=g*s+t*this._z,this.normalize(),this}const h=Math.sqrt(u),f=Math.atan2(h,c),p=Math.sin((1-t)*f)/h,m=Math.sin(t*f)/h;return this._w=a*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class I{constructor(e=0,t=0,n=0){I.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Jg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Jg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,a=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*a,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*a,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,a=e.y,c=e.z,u=e.w,h=2*(a*i-c*n),f=2*(c*t-s*i),p=2*(s*n-a*t);return this.x=t+u*h+a*p-c*f,this.y=n+u*f+c*h-s*p,this.z=i+u*p+s*f-a*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=mt(this.x,e.x,t.x),this.y=mt(this.y,e.y,t.y),this.z=mt(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=mt(this.x,e,t),this.y=mt(this.y,e,t),this.z=mt(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(mt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,a=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*a-n*u,this.z=n*c-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return nd.copy(this).projectOnVector(e),this.sub(nd)}reflect(e){return this.sub(nd.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(mt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const nd=new I,Jg=new pn;class Wn{constructor(e=new I(1/0,1/0,1/0),t=new I(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Ri.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Ri.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ri.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let a=0,c=s.count;a<c;a++)e.isMesh===!0?e.getVertexPosition(a,Ri):Ri.fromBufferAttribute(s,a),Ri.applyMatrix4(e.matrixWorld),this.expandByPoint(Ri);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),xc.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),xc.copy(n.boundingBox)),xc.applyMatrix4(e.matrixWorld),this.union(xc)}const i=e.children;for(let s=0,a=i.length;s<a;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Ri),Ri.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ma),yc.subVectors(this.max,ma),fo.subVectors(e.a,ma),po.subVectors(e.b,ma),mo.subVectors(e.c,ma),Ur.subVectors(po,fo),Nr.subVectors(mo,po),ps.subVectors(fo,mo);let t=[0,-Ur.z,Ur.y,0,-Nr.z,Nr.y,0,-ps.z,ps.y,Ur.z,0,-Ur.x,Nr.z,0,-Nr.x,ps.z,0,-ps.x,-Ur.y,Ur.x,0,-Nr.y,Nr.x,0,-ps.y,ps.x,0];return!id(t,fo,po,mo,yc)||(t=[1,0,0,0,1,0,0,0,1],!id(t,fo,po,mo,yc))?!1:(Sc.crossVectors(Ur,Nr),t=[Sc.x,Sc.y,Sc.z],id(t,fo,po,mo,yc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ri).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Ri).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(cr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),cr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),cr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),cr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),cr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),cr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),cr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),cr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(cr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const cr=[new I,new I,new I,new I,new I,new I,new I,new I],Ri=new I,xc=new Wn,fo=new I,po=new I,mo=new I,Ur=new I,Nr=new I,ps=new I,ma=new I,yc=new I,Sc=new I,ms=new I;function id(r,e,t,n,i){for(let s=0,a=r.length-3;s<=a;s+=3){ms.fromArray(r,s);const c=i.x*Math.abs(ms.x)+i.y*Math.abs(ms.y)+i.z*Math.abs(ms.z),u=e.dot(ms),h=t.dot(ms),f=n.dot(ms);if(Math.max(-Math.max(u,h,f),Math.min(u,h,f))>c)return!1}return!0}const XM=new Wn,ga=new I,rd=new I;class Nn{constructor(e=new I,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):XM.setFromPoints(e).getCenter(n);let i=0;for(let s=0,a=e.length;s<a;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ga.subVectors(e,this.center);const t=ga.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ga,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(rd.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ga.copy(e.center).add(rd)),this.expandByPoint(ga.copy(e.center).sub(rd))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const ur=new I,sd=new I,Mc=new I,Fr=new I,od=new I,wc=new I,ad=new I;class Ys{constructor(e=new I,t=new I(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ur)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=ur.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ur.copy(this.origin).addScaledVector(this.direction,t),ur.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){sd.copy(e).add(t).multiplyScalar(.5),Mc.copy(t).sub(e).normalize(),Fr.copy(this.origin).sub(sd);const s=e.distanceTo(t)*.5,a=-this.direction.dot(Mc),c=Fr.dot(this.direction),u=-Fr.dot(Mc),h=Fr.lengthSq(),f=Math.abs(1-a*a);let p,m,g,x;if(f>0)if(p=a*u-c,m=a*c-u,x=s*f,p>=0)if(m>=-x)if(m<=x){const M=1/f;p*=M,m*=M,g=p*(p+a*m+2*c)+m*(a*p+m+2*u)+h}else m=s,p=Math.max(0,-(a*m+c)),g=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(a*m+c)),g=-p*p+m*(m+2*u)+h;else m<=-x?(p=Math.max(0,-(-a*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),g=-p*p+m*(m+2*u)+h):m<=x?(p=0,m=Math.min(Math.max(-s,-u),s),g=m*(m+2*u)+h):(p=Math.max(0,-(a*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),g=-p*p+m*(m+2*u)+h);else m=a>0?-s:s,p=Math.max(0,-(a*m+c)),g=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(sd).addScaledVector(Mc,m),g}intersectSphere(e,t){ur.subVectors(e.center,this.origin);const n=ur.dot(this.direction),i=ur.dot(ur)-n*n,s=e.radius*e.radius;if(i>s)return null;const a=Math.sqrt(s-i),c=n-a,u=n+a;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,a,c,u;const h=1/this.direction.x,f=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),f>=0?(s=(e.min.y-m.y)*f,a=(e.max.y-m.y)*f):(s=(e.max.y-m.y)*f,a=(e.min.y-m.y)*f),n>a||s>i||((s>n||isNaN(n))&&(n=s),(a<i||isNaN(i))&&(i=a),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,ur)!==null}intersectTriangle(e,t,n,i,s){od.subVectors(t,e),wc.subVectors(n,e),ad.crossVectors(od,wc);let a=this.direction.dot(ad),c;if(a>0){if(i)return null;c=1}else if(a<0)c=-1,a=-a;else return null;Fr.subVectors(this.origin,e);const u=c*this.direction.dot(wc.crossVectors(Fr,wc));if(u<0)return null;const h=c*this.direction.dot(od.cross(Fr));if(h<0||u+h>a)return null;const f=-c*Fr.dot(ad);return f<0?null:this.at(f/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ft{constructor(e,t,n,i,s,a,c,u,h,f,p,m,g,x,M,y){ft.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,a,c,u,h,f,p,m,g,x,M,y)}set(e,t,n,i,s,a,c,u,h,f,p,m,g,x,M,y){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=s,_[5]=a,_[9]=c,_[13]=u,_[2]=h,_[6]=f,_[10]=p,_[14]=m,_[3]=g,_[7]=x,_[11]=M,_[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ft().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/go.setFromMatrixColumn(e,0).length(),s=1/go.setFromMatrixColumn(e,1).length(),a=1/go.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,a=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),f=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=a*f,g=a*p,x=c*f,M=c*p;t[0]=u*f,t[4]=-u*p,t[8]=h,t[1]=g+x*h,t[5]=m-M*h,t[9]=-c*u,t[2]=M-m*h,t[6]=x+g*h,t[10]=a*u}else if(e.order==="YXZ"){const m=u*f,g=u*p,x=h*f,M=h*p;t[0]=m+M*c,t[4]=x*c-g,t[8]=a*h,t[1]=a*p,t[5]=a*f,t[9]=-c,t[2]=g*c-x,t[6]=M+m*c,t[10]=a*u}else if(e.order==="ZXY"){const m=u*f,g=u*p,x=h*f,M=h*p;t[0]=m-M*c,t[4]=-a*p,t[8]=x+g*c,t[1]=g+x*c,t[5]=a*f,t[9]=M-m*c,t[2]=-a*h,t[6]=c,t[10]=a*u}else if(e.order==="ZYX"){const m=a*f,g=a*p,x=c*f,M=c*p;t[0]=u*f,t[4]=x*h-g,t[8]=m*h+M,t[1]=u*p,t[5]=M*h+m,t[9]=g*h-x,t[2]=-h,t[6]=c*u,t[10]=a*u}else if(e.order==="YZX"){const m=a*u,g=a*h,x=c*u,M=c*h;t[0]=u*f,t[4]=M-m*p,t[8]=x*p+g,t[1]=p,t[5]=a*f,t[9]=-c*f,t[2]=-h*f,t[6]=g*p+x,t[10]=m-M*p}else if(e.order==="XZY"){const m=a*u,g=a*h,x=c*u,M=c*h;t[0]=u*f,t[4]=-p,t[8]=h*f,t[1]=m*p+M,t[5]=a*f,t[9]=g*p-x,t[2]=x*p-g,t[6]=c*f,t[10]=M*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(jM,e,qM)}lookAt(e,t,n){const i=this.elements;return ui.subVectors(e,t),ui.lengthSq()===0&&(ui.z=1),ui.normalize(),Or.crossVectors(n,ui),Or.lengthSq()===0&&(Math.abs(n.z)===1?ui.x+=1e-4:ui.z+=1e-4,ui.normalize(),Or.crossVectors(n,ui)),Or.normalize(),Ec.crossVectors(ui,Or),i[0]=Or.x,i[4]=Ec.x,i[8]=ui.x,i[1]=Or.y,i[5]=Ec.y,i[9]=ui.y,i[2]=Or.z,i[6]=Ec.z,i[10]=ui.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],c=n[4],u=n[8],h=n[12],f=n[1],p=n[5],m=n[9],g=n[13],x=n[2],M=n[6],y=n[10],_=n[14],E=n[3],w=n[7],T=n[11],L=n[15],R=i[0],U=i[4],N=i[8],C=i[12],A=i[1],F=i[5],q=i[9],W=i[13],$=i[2],oe=i[6],ee=i[10],ge=i[14],O=i[3],Y=i[7],X=i[11],Z=i[15];return s[0]=a*R+c*A+u*$+h*O,s[4]=a*U+c*F+u*oe+h*Y,s[8]=a*N+c*q+u*ee+h*X,s[12]=a*C+c*W+u*ge+h*Z,s[1]=f*R+p*A+m*$+g*O,s[5]=f*U+p*F+m*oe+g*Y,s[9]=f*N+p*q+m*ee+g*X,s[13]=f*C+p*W+m*ge+g*Z,s[2]=x*R+M*A+y*$+_*O,s[6]=x*U+M*F+y*oe+_*Y,s[10]=x*N+M*q+y*ee+_*X,s[14]=x*C+M*W+y*ge+_*Z,s[3]=E*R+w*A+T*$+L*O,s[7]=E*U+w*F+T*oe+L*Y,s[11]=E*N+w*q+T*ee+L*X,s[15]=E*C+w*W+T*ge+L*Z,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],a=e[1],c=e[5],u=e[9],h=e[13],f=e[2],p=e[6],m=e[10],g=e[14],x=e[3],M=e[7],y=e[11],_=e[15];return x*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*g-n*u*g)+M*(+t*u*g-t*h*m+s*a*m-i*a*g+i*h*f-s*u*f)+y*(+t*h*p-t*c*g-s*a*p+n*a*g+s*c*f-n*h*f)+_*(-i*c*f-t*u*p+t*c*m+i*a*p-n*a*m+n*u*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=e[9],m=e[10],g=e[11],x=e[12],M=e[13],y=e[14],_=e[15],E=p*y*h-M*m*h+M*u*g-c*y*g-p*u*_+c*m*_,w=x*m*h-f*y*h-x*u*g+a*y*g+f*u*_-a*m*_,T=f*M*h-x*p*h+x*c*g-a*M*g-f*c*_+a*p*_,L=x*p*u-f*M*u-x*c*m+a*M*m+f*c*y-a*p*y,R=t*E+n*w+i*T+s*L;if(R===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const U=1/R;return e[0]=E*U,e[1]=(M*m*s-p*y*s-M*i*g+n*y*g+p*i*_-n*m*_)*U,e[2]=(c*y*s-M*u*s+M*i*h-n*y*h-c*i*_+n*u*_)*U,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*g-n*u*g)*U,e[4]=w*U,e[5]=(f*y*s-x*m*s+x*i*g-t*y*g-f*i*_+t*m*_)*U,e[6]=(x*u*s-a*y*s-x*i*h+t*y*h+a*i*_-t*u*_)*U,e[7]=(a*m*s-f*u*s+f*i*h-t*m*h-a*i*g+t*u*g)*U,e[8]=T*U,e[9]=(x*p*s-f*M*s-x*n*g+t*M*g+f*n*_-t*p*_)*U,e[10]=(a*M*s-x*c*s+x*n*h-t*M*h-a*n*_+t*c*_)*U,e[11]=(f*c*s-a*p*s-f*n*h+t*p*h+a*n*g-t*c*g)*U,e[12]=L*U,e[13]=(f*M*i-x*p*i+x*n*m-t*M*m-f*n*y+t*p*y)*U,e[14]=(x*c*i-a*M*i-x*n*u+t*M*u+a*n*y-t*c*y)*U,e[15]=(a*p*i-f*c*i+f*n*u-t*p*u-a*n*m+t*c*m)*U,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,a=e.x,c=e.y,u=e.z,h=s*a,f=s*c;return this.set(h*a+n,h*c-i*u,h*u+i*c,0,h*c+i*u,f*c+n,f*u-i*a,0,h*u-i*c,f*u+i*a,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,a){return this.set(1,n,s,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,a=t._y,c=t._z,u=t._w,h=s+s,f=a+a,p=c+c,m=s*h,g=s*f,x=s*p,M=a*f,y=a*p,_=c*p,E=u*h,w=u*f,T=u*p,L=n.x,R=n.y,U=n.z;return i[0]=(1-(M+_))*L,i[1]=(g+T)*L,i[2]=(x-w)*L,i[3]=0,i[4]=(g-T)*R,i[5]=(1-(m+_))*R,i[6]=(y+E)*R,i[7]=0,i[8]=(x+w)*U,i[9]=(y-E)*U,i[10]=(1-(m+M))*U,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=go.set(i[0],i[1],i[2]).length();const a=go.set(i[4],i[5],i[6]).length(),c=go.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],Pi.copy(this);const h=1/s,f=1/a,p=1/c;return Pi.elements[0]*=h,Pi.elements[1]*=h,Pi.elements[2]*=h,Pi.elements[4]*=f,Pi.elements[5]*=f,Pi.elements[6]*=f,Pi.elements[8]*=p,Pi.elements[9]*=p,Pi.elements[10]*=p,t.setFromRotationMatrix(Pi),n.x=s,n.y=a,n.z=c,this}makePerspective(e,t,n,i,s,a,c=Ni){const u=this.elements,h=2*s/(t-e),f=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let g,x;if(c===Ni)g=-(a+s)/(a-s),x=-2*a*s/(a-s);else if(c===Qa)g=-a/(a-s),x=-a*s/(a-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=f,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=g,u[14]=x,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,a,c=Ni){const u=this.elements,h=1/(t-e),f=1/(n-i),p=1/(a-s),m=(t+e)*h,g=(n+i)*f;let x,M;if(c===Ni)x=(a+s)*p,M=-2*p;else if(c===Qa)x=s*p,M=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*f,u[9]=0,u[13]=-g,u[2]=0,u[6]=0,u[10]=M,u[14]=-x,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const go=new I,Pi=new ft,jM=new I(0,0,0),qM=new I(1,1,1),Or=new I,Ec=new I,ui=new I,Kg=new ft,Qg=new pn;class Yt{constructor(e=0,t=0,n=0,i=Yt.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],a=i[4],c=i[8],u=i[1],h=i[5],f=i[9],p=i[2],m=i[6],g=i[10];switch(t){case"XYZ":this._y=Math.asin(mt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,g),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-mt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(c,g),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(mt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,g),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-mt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,g),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(mt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,g));break;case"XZY":this._z=Math.asin(-mt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-f,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Kg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Kg,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Qg.setFromEuler(this),this.setFromQuaternion(Qg,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Yt.DEFAULT_ORDER="XYZ";class zs{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let YM=0;const $g=new I,vo=new pn,hr=new ft,Tc=new I,va=new I,ZM=new I,JM=new pn,e0=new I(1,0,0),t0=new I(0,1,0),n0=new I(0,0,1),i0={type:"added"},KM={type:"removed"},_o={type:"childadded",child:null},ld={type:"childremoved",child:null};class Pt extends $i{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:YM++}),this.uuid=fi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Pt.DEFAULT_UP.clone();const e=new I,t=new Yt,n=new pn,i=new I(1,1,1);function s(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ft},normalMatrix:{value:new _t}}),this.matrix=new ft,this.matrixWorld=new ft,this.matrixAutoUpdate=Pt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Pt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new zs,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return vo.setFromAxisAngle(e,t),this.quaternion.multiply(vo),this}rotateOnWorldAxis(e,t){return vo.setFromAxisAngle(e,t),this.quaternion.premultiply(vo),this}rotateX(e){return this.rotateOnAxis(e0,e)}rotateY(e){return this.rotateOnAxis(t0,e)}rotateZ(e){return this.rotateOnAxis(n0,e)}translateOnAxis(e,t){return $g.copy(e).applyQuaternion(this.quaternion),this.position.add($g.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(e0,e)}translateY(e){return this.translateOnAxis(t0,e)}translateZ(e){return this.translateOnAxis(n0,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(hr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Tc.copy(e):Tc.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),va.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?hr.lookAt(va,Tc,this.up):hr.lookAt(Tc,va,this.up),this.quaternion.setFromRotationMatrix(hr),i&&(hr.extractRotation(i.matrixWorld),vo.setFromRotationMatrix(hr),this.quaternion.premultiply(vo.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(i0),_o.child=e,this.dispatchEvent(_o),_o.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(KM),ld.child=e,this.dispatchEvent(ld),ld.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),hr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),hr.multiply(e.parent.matrixWorld)),e.applyMatrix4(hr),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(i0),_o.child=e,this.dispatchEvent(_o),_o.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,a=i.length;s<a;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(va,e,ZM),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(va,JM,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let s=0,a=i.length;s<a;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,f=u.length;h<f;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=a(e.geometries),u=a(e.materials),h=a(e.textures),f=a(e.images),p=a(e.shapes),m=a(e.skeletons),g=a(e.animations),x=a(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),f.length>0&&(n.images=f),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),g.length>0&&(n.animations=g),x.length>0&&(n.nodes=x)}return n.object=i,n;function a(c){const u=[];for(const h in c){const f=c[h];delete f.metadata,u.push(f)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Pt.DEFAULT_UP=new I(0,1,0);Pt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Pt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Ii=new I,fr=new I,cd=new I,dr=new I,xo=new I,yo=new I,r0=new I,ud=new I,hd=new I,fd=new I,dd=new Dt,pd=new Dt,md=new Dt;class ti{constructor(e=new I,t=new I,n=new I){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Ii.subVectors(e,t),i.cross(Ii);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){Ii.subVectors(i,t),fr.subVectors(n,t),cd.subVectors(e,t);const a=Ii.dot(Ii),c=Ii.dot(fr),u=Ii.dot(cd),h=fr.dot(fr),f=fr.dot(cd),p=a*h-c*c;if(p===0)return s.set(0,0,0),null;const m=1/p,g=(h*u-c*f)*m,x=(a*f-c*u)*m;return s.set(1-g-x,x,g)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,dr)===null?!1:dr.x>=0&&dr.y>=0&&dr.x+dr.y<=1}static getInterpolation(e,t,n,i,s,a,c,u){return this.getBarycoord(e,t,n,i,dr)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,dr.x),u.addScaledVector(a,dr.y),u.addScaledVector(c,dr.z),u)}static getInterpolatedAttribute(e,t,n,i,s,a){return dd.setScalar(0),pd.setScalar(0),md.setScalar(0),dd.fromBufferAttribute(e,t),pd.fromBufferAttribute(e,n),md.fromBufferAttribute(e,i),a.setScalar(0),a.addScaledVector(dd,s.x),a.addScaledVector(pd,s.y),a.addScaledVector(md,s.z),a}static isFrontFacing(e,t,n,i){return Ii.subVectors(n,t),fr.subVectors(e,t),Ii.cross(fr).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Ii.subVectors(this.c,this.b),fr.subVectors(this.a,this.b),Ii.cross(fr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ti.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ti.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return ti.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return ti.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ti.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let a,c;xo.subVectors(i,n),yo.subVectors(s,n),ud.subVectors(e,n);const u=xo.dot(ud),h=yo.dot(ud);if(u<=0&&h<=0)return t.copy(n);hd.subVectors(e,i);const f=xo.dot(hd),p=yo.dot(hd);if(f>=0&&p<=f)return t.copy(i);const m=u*p-f*h;if(m<=0&&u>=0&&f<=0)return a=u/(u-f),t.copy(n).addScaledVector(xo,a);fd.subVectors(e,s);const g=xo.dot(fd),x=yo.dot(fd);if(x>=0&&g<=x)return t.copy(s);const M=g*h-u*x;if(M<=0&&h>=0&&x<=0)return c=h/(h-x),t.copy(n).addScaledVector(yo,c);const y=f*x-g*p;if(y<=0&&p-f>=0&&g-x>=0)return r0.subVectors(s,i),c=(p-f)/(p-f+(g-x)),t.copy(i).addScaledVector(r0,c);const _=1/(y+M+m);return a=M*_,c=m*_,t.copy(n).addScaledVector(xo,a).addScaledVector(yo,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const ax={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Br={h:0,s:0,l:0},bc={h:0,s:0,l:0};function gd(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Ie{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=ei){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Nt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Nt.workingColorSpace){return this.r=e,this.g=t,this.b=n,Nt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Nt.workingColorSpace){if(e=Vp(e,1),t=mt(t,0,1),n=mt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,a=2*n-s;this.r=gd(a,s,e+1/3),this.g=gd(a,s,e),this.b=gd(a,s,e-1/3)}return Nt.toWorkingColorSpace(this,i),this}setStyle(e,t=ei){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const a=i[1],c=i[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],a=s.length;if(a===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=ei){const n=ax[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=_r(e.r),this.g=_r(e.g),this.b=_r(e.b),this}copyLinearToSRGB(e){return this.r=Vo(e.r),this.g=Vo(e.g),this.b=Vo(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=ei){return Nt.fromWorkingColorSpace(In.copy(this),e),Math.round(mt(In.r*255,0,255))*65536+Math.round(mt(In.g*255,0,255))*256+Math.round(mt(In.b*255,0,255))}getHexString(e=ei){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Nt.workingColorSpace){Nt.fromWorkingColorSpace(In.copy(this),t);const n=In.r,i=In.g,s=In.b,a=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const f=(c+a)/2;if(c===a)u=0,h=0;else{const p=a-c;switch(h=f<=.5?p/(a+c):p/(2-a-c),a){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=f,e}getRGB(e,t=Nt.workingColorSpace){return Nt.fromWorkingColorSpace(In.copy(this),t),e.r=In.r,e.g=In.g,e.b=In.b,e}getStyle(e=ei){Nt.fromWorkingColorSpace(In.copy(this),e);const t=In.r,n=In.g,i=In.b;return e!==ei?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Br),this.setHSL(Br.h+e,Br.s+t,Br.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Br),e.getHSL(bc);const n=Va(Br.h,bc.h,t),i=Va(Br.s,bc.s,t),s=Va(Br.l,bc.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const In=new Ie;Ie.NAMES=ax;let QM=0;class On extends $i{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:QM++}),this.uuid=fi(),this.name="",this.type="Material",this.blending=Os,this.side=xr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Su,this.blendDst=Mu,this.blendEquation=Wr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ie(0,0,0),this.blendAlpha=0,this.depthFunc=Vs,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=pp,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Rs,this.stencilZFail=Rs,this.stencilZPass=Rs,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Os&&(n.blending=this.blending),this.side!==xr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Su&&(n.blendSrc=this.blendSrc),this.blendDst!==Mu&&(n.blendDst=this.blendDst),this.blendEquation!==Wr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Vs&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==pp&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Rs&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Rs&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Rs&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const a=[];for(const c in s){const u=s[c];delete u.metadata,a.push(u)}return a}if(t){const s=i(e.textures),a=i(e.images);s.length>0&&(n.textures=s),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class er extends On{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ie(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Yt,this.combine=cl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const gr=$M();function $M(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,f=0;for(;!(h&8388608);)h<<=1,f-=8388608;h&=-8388609,f+=947912704,s[u]=h|f}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)a[u]=u<<23;a[31]=1199570944,a[32]=2147483648;for(let u=33;u<63;++u)a[u]=2147483648+(u-32<<23);a[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:a,offsetTable:c}}function $n(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=mt(r,-65504,65504),gr.floatView[0]=r;const e=gr.uint32View[0],t=e>>23&511;return gr.baseTable[t]+((e&8388607)>>gr.shiftTable[t])}function Ia(r){const e=r>>10;return gr.uint32View[0]=gr.mantissaTable[gr.offsetTable[e]+(r&1023)]+gr.exponentTable[e],gr.floatView[0]}const e1={toHalfFloat:$n,fromHalfFloat:Ia},un=new I,Ac=new ue;class Ht{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Ka,this.updateRanges=[],this.gpuType=ni,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Ac.fromBufferAttribute(this,t),Ac.applyMatrix3(e),this.setXY(t,Ac.x,Ac.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.applyMatrix3(e),this.setXYZ(t,un.x,un.y,un.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.applyMatrix4(e),this.setXYZ(t,un.x,un.y,un.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.applyNormalMatrix(e),this.setXYZ(t,un.x,un.y,un.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.transformDirection(e),this.setXYZ(t,un.x,un.y,un.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Hn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=xt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Hn(t,this.array)),t}setX(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Hn(t,this.array)),t}setY(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Hn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Hn(t,this.array)),t}setW(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array),i=xt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array),i=xt(i,this.array),s=xt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ka&&(e.usage=this.usage),e}}class t1 extends Ht{constructor(e,t,n){super(new Int8Array(e),t,n)}}class n1 extends Ht{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class i1 extends Ht{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class r1 extends Ht{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Hp extends Ht{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class s1 extends Ht{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Gp extends Ht{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class o1 extends Ht{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Ia(this.array[e*this.itemSize]);return this.normalized&&(t=Hn(t,this.array)),t}setX(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize]=$n(t),this}getY(e){let t=Ia(this.array[e*this.itemSize+1]);return this.normalized&&(t=Hn(t,this.array)),t}setY(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+1]=$n(t),this}getZ(e){let t=Ia(this.array[e*this.itemSize+2]);return this.normalized&&(t=Hn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+2]=$n(t),this}getW(e){let t=Ia(this.array[e*this.itemSize+3]);return this.normalized&&(t=Hn(t,this.array)),t}setW(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+3]=$n(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array)),this.array[e+0]=$n(t),this.array[e+1]=$n(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array),i=xt(i,this.array)),this.array[e+0]=$n(t),this.array[e+1]=$n(n),this.array[e+2]=$n(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array),i=xt(i,this.array),s=xt(s,this.array)),this.array[e+0]=$n(t),this.array[e+1]=$n(n),this.array[e+2]=$n(i),this.array[e+3]=$n(s),this}}class Ke extends Ht{constructor(e,t,n){super(new Float32Array(e),t,n)}}let a1=0;const Mi=new ft,vd=new Pt,So=new I,hi=new Wn,_a=new Wn,Sn=new I;class yt extends $i{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:a1++}),this.uuid=fi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(rx(e)?Gp:Hp)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new _t().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Mi.makeRotationFromQuaternion(e),this.applyMatrix4(Mi),this}rotateX(e){return Mi.makeRotationX(e),this.applyMatrix4(Mi),this}rotateY(e){return Mi.makeRotationY(e),this.applyMatrix4(Mi),this}rotateZ(e){return Mi.makeRotationZ(e),this.applyMatrix4(Mi),this}translate(e,t,n){return Mi.makeTranslation(e,t,n),this.applyMatrix4(Mi),this}scale(e,t,n){return Mi.makeScale(e,t,n),this.applyMatrix4(Mi),this}lookAt(e){return vd.lookAt(e),vd.updateMatrix(),this.applyMatrix4(vd.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(So).negate(),this.translate(So.x,So.y,So.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,s=e.length;i<s;i++){const a=e[i];n.push(a.x,a.y,a.z||0)}this.setAttribute("position",new Ke(n,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const s=e[i];t.setXYZ(i,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Wn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new I(-1/0,-1/0,-1/0),new I(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];hi.setFromBufferAttribute(s),this.morphTargetsRelative?(Sn.addVectors(this.boundingBox.min,hi.min),this.boundingBox.expandByPoint(Sn),Sn.addVectors(this.boundingBox.max,hi.max),this.boundingBox.expandByPoint(Sn)):(this.boundingBox.expandByPoint(hi.min),this.boundingBox.expandByPoint(hi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Nn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new I,1/0);return}if(e){const n=this.boundingSphere.center;if(hi.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const c=t[s];_a.setFromBufferAttribute(c),this.morphTargetsRelative?(Sn.addVectors(hi.min,_a.min),hi.expandByPoint(Sn),Sn.addVectors(hi.max,_a.max),hi.expandByPoint(Sn)):(hi.expandByPoint(_a.min),hi.expandByPoint(_a.max))}hi.getCenter(n);let i=0;for(let s=0,a=e.count;s<a;s++)Sn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(Sn));if(t)for(let s=0,a=t.length;s<a;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,f=c.count;h<f;h++)Sn.fromBufferAttribute(c,h),u&&(So.fromBufferAttribute(e,h),Sn.add(So)),i=Math.max(i,n.distanceToSquared(Sn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ht(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),c=[],u=[];for(let N=0;N<n.count;N++)c[N]=new I,u[N]=new I;const h=new I,f=new I,p=new I,m=new ue,g=new ue,x=new ue,M=new I,y=new I;function _(N,C,A){h.fromBufferAttribute(n,N),f.fromBufferAttribute(n,C),p.fromBufferAttribute(n,A),m.fromBufferAttribute(s,N),g.fromBufferAttribute(s,C),x.fromBufferAttribute(s,A),f.sub(h),p.sub(h),g.sub(m),x.sub(m);const F=1/(g.x*x.y-x.x*g.y);isFinite(F)&&(M.copy(f).multiplyScalar(x.y).addScaledVector(p,-g.y).multiplyScalar(F),y.copy(p).multiplyScalar(g.x).addScaledVector(f,-x.x).multiplyScalar(F),c[N].add(M),c[C].add(M),c[A].add(M),u[N].add(y),u[C].add(y),u[A].add(y))}let E=this.groups;E.length===0&&(E=[{start:0,count:e.count}]);for(let N=0,C=E.length;N<C;++N){const A=E[N],F=A.start,q=A.count;for(let W=F,$=F+q;W<$;W+=3)_(e.getX(W+0),e.getX(W+1),e.getX(W+2))}const w=new I,T=new I,L=new I,R=new I;function U(N){L.fromBufferAttribute(i,N),R.copy(L);const C=c[N];w.copy(C),w.sub(L.multiplyScalar(L.dot(C))).normalize(),T.crossVectors(R,C);const F=T.dot(u[N])<0?-1:1;a.setXYZW(N,w.x,w.y,w.z,F)}for(let N=0,C=E.length;N<C;++N){const A=E[N],F=A.start,q=A.count;for(let W=F,$=F+q;W<$;W+=3)U(e.getX(W+0)),U(e.getX(W+1)),U(e.getX(W+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Ht(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,g=n.count;m<g;m++)n.setXYZ(m,0,0,0);const i=new I,s=new I,a=new I,c=new I,u=new I,h=new I,f=new I,p=new I;if(e)for(let m=0,g=e.count;m<g;m+=3){const x=e.getX(m+0),M=e.getX(m+1),y=e.getX(m+2);i.fromBufferAttribute(t,x),s.fromBufferAttribute(t,M),a.fromBufferAttribute(t,y),f.subVectors(a,s),p.subVectors(i,s),f.cross(p),c.fromBufferAttribute(n,x),u.fromBufferAttribute(n,M),h.fromBufferAttribute(n,y),c.add(f),u.add(f),h.add(f),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(y,h.x,h.y,h.z)}else for(let m=0,g=t.count;m<g;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),a.fromBufferAttribute(t,m+2),f.subVectors(a,s),p.subVectors(i,s),f.cross(p),n.setXYZ(m+0,f.x,f.y,f.z),n.setXYZ(m+1,f.x,f.y,f.z),n.setXYZ(m+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Sn.fromBufferAttribute(e,t),Sn.normalize(),e.setXYZ(t,Sn.x,Sn.y,Sn.z)}toNonIndexed(){function e(c,u){const h=c.array,f=c.itemSize,p=c.normalized,m=new h.constructor(u.length*f);let g=0,x=0;for(let M=0,y=u.length;M<y;M++){c.isInterleavedBufferAttribute?g=u[M]*c.data.stride+c.offset:g=u[M]*f;for(let _=0;_<f;_++)m[x++]=h[g++]}return new Ht(m,f,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new yt,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,p=h.length;f<p;f++){const m=h[f],g=e(m,n);u.push(g)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let c=0,u=a.length;c<u;c++){const h=a[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p];f.push(g.toJSON(e.data))}f.length>0&&(i[u]=f,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const f=i[h];this.setAttribute(h,f.clone(t))}const s=e.morphAttributes;for(const h in s){const f=[],p=s[h];for(let m=0,g=p.length;m<g;m++)f.push(p[m].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let h=0,f=a.length;h<f;h++){const p=a[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const s0=new ft,gs=new Ys,Cc=new Nn,o0=new I,Rc=new I,Pc=new I,Ic=new I,_d=new I,Lc=new I,a0=new I,Dc=new I;class sn extends Pt{constructor(e=new yt,t=new er){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){Lc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const f=c[u],p=s[u];f!==0&&(_d.fromBufferAttribute(p,e),a?Lc.addScaledVector(_d,f):Lc.addScaledVector(_d.sub(t),f))}t.add(Lc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Cc.copy(n.boundingSphere),Cc.applyMatrix4(s),gs.copy(e.ray).recast(e.near),!(Cc.containsPoint(gs.origin)===!1&&(gs.intersectSphere(Cc,o0)===null||gs.origin.distanceToSquared(o0)>(e.far-e.near)**2))&&(s0.copy(s).invert(),gs.copy(e.ray).applyMatrix4(s0),!(n.boundingBox!==null&&gs.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,gs)))}_computeIntersections(e,t,n){let i;const s=this.geometry,a=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,f=s.attributes.uv1,p=s.attributes.normal,m=s.groups,g=s.drawRange;if(c!==null)if(Array.isArray(a))for(let x=0,M=m.length;x<M;x++){const y=m[x],_=a[y.materialIndex],E=Math.max(y.start,g.start),w=Math.min(c.count,Math.min(y.start+y.count,g.start+g.count));for(let T=E,L=w;T<L;T+=3){const R=c.getX(T),U=c.getX(T+1),N=c.getX(T+2);i=Uc(this,_,e,n,h,f,p,R,U,N),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=y.materialIndex,t.push(i))}}else{const x=Math.max(0,g.start),M=Math.min(c.count,g.start+g.count);for(let y=x,_=M;y<_;y+=3){const E=c.getX(y),w=c.getX(y+1),T=c.getX(y+2);i=Uc(this,a,e,n,h,f,p,E,w,T),i&&(i.faceIndex=Math.floor(y/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(a))for(let x=0,M=m.length;x<M;x++){const y=m[x],_=a[y.materialIndex],E=Math.max(y.start,g.start),w=Math.min(u.count,Math.min(y.start+y.count,g.start+g.count));for(let T=E,L=w;T<L;T+=3){const R=T,U=T+1,N=T+2;i=Uc(this,_,e,n,h,f,p,R,U,N),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=y.materialIndex,t.push(i))}}else{const x=Math.max(0,g.start),M=Math.min(u.count,g.start+g.count);for(let y=x,_=M;y<_;y+=3){const E=y,w=y+1,T=y+2;i=Uc(this,a,e,n,h,f,p,E,w,T),i&&(i.faceIndex=Math.floor(y/3),t.push(i))}}}}function l1(r,e,t,n,i,s,a,c){let u;if(e.side===Gn?u=n.intersectTriangle(a,s,i,!0,c):u=n.intersectTriangle(i,s,a,e.side===xr,c),u===null)return null;Dc.copy(c),Dc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(Dc);return h<t.near||h>t.far?null:{distance:h,point:Dc.clone(),object:r}}function Uc(r,e,t,n,i,s,a,c,u,h){r.getVertexPosition(c,Rc),r.getVertexPosition(u,Pc),r.getVertexPosition(h,Ic);const f=l1(r,e,t,n,Rc,Pc,Ic,a0);if(f){const p=new I;ti.getBarycoord(a0,Rc,Pc,Ic,p),i&&(f.uv=ti.getInterpolatedAttribute(i,c,u,h,p,new ue)),s&&(f.uv1=ti.getInterpolatedAttribute(s,c,u,h,p,new ue)),a&&(f.normal=ti.getInterpolatedAttribute(a,c,u,h,p,new I),f.normal.dot(n.direction)>0&&f.normal.multiplyScalar(-1));const m={a:c,b:u,c:h,normal:new I,materialIndex:0};ti.getNormal(Rc,Pc,Ic,m.normal),f.face=m,f.barycoord=p}return f}class Qr extends yt{constructor(e=1,t=1,n=1,i=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:a};const c=this;i=Math.floor(i),s=Math.floor(s),a=Math.floor(a);const u=[],h=[],f=[],p=[];let m=0,g=0;x("z","y","x",-1,-1,n,t,e,a,s,0),x("z","y","x",1,-1,n,t,-e,a,s,1),x("x","z","y",1,1,e,n,t,i,a,2),x("x","z","y",1,-1,e,n,-t,i,a,3),x("x","y","z",1,-1,e,t,n,i,s,4),x("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new Ke(h,3)),this.setAttribute("normal",new Ke(f,3)),this.setAttribute("uv",new Ke(p,2));function x(M,y,_,E,w,T,L,R,U,N,C){const A=T/U,F=L/N,q=T/2,W=L/2,$=R/2,oe=U+1,ee=N+1;let ge=0,O=0;const Y=new I;for(let X=0;X<ee;X++){const Z=X*F-W;for(let fe=0;fe<oe;fe++){const Ee=fe*A-q;Y[M]=Ee*E,Y[y]=Z*w,Y[_]=$,h.push(Y.x,Y.y,Y.z),Y[M]=0,Y[y]=0,Y[_]=R>0?1:-1,f.push(Y.x,Y.y,Y.z),p.push(fe/U),p.push(1-X/N),ge+=1}}for(let X=0;X<N;X++)for(let Z=0;Z<U;Z++){const fe=m+Z+oe*X,Ee=m+Z+oe*(X+1),ne=m+(Z+1)+oe*(X+1),Se=m+(Z+1)+oe*X;u.push(fe,Ee,Se),u.push(Ee,ne,Se),O+=6}c.addGroup(g,O,C),g+=O,m+=ge}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Qr(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Go(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Vn(r){const e={};for(let t=0;t<r.length;t++){const n=Go(r[t]);for(const i in n)e[i]=n[i]}return e}function c1(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function lx(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Nt.workingColorSpace}const cx={clone:Go,merge:Vn};var u1=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,h1=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ii extends On{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=u1,this.fragmentShader=h1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Go(e.uniforms),this.uniformsGroups=c1(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class qo extends Pt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ft,this.projectionMatrix=new ft,this.projectionMatrixInverse=new ft,this.coordinateSystem=Ni}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const zr=new I,l0=new ue,c0=new ue;class en extends qo{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Ho*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Bs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Ho*2*Math.atan(Math.tan(Bs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){zr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(zr.x,zr.y).multiplyScalar(-e/zr.z),zr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(zr.x,zr.y).multiplyScalar(-e/zr.z)}getViewSize(e,t){return this.getViewBounds(e,l0,c0),t.subVectors(c0,l0)}setViewOffset(e,t,n,i,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Bs*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const u=a.fullWidth,h=a.fullHeight;s+=a.offsetX*i/u,t-=a.offsetY*n/h,i*=a.width/u,n*=a.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Mo=-90,wo=1;class ux extends Pt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new en(Mo,wo,e,t);i.layers=this.layers,this.add(i);const s=new en(Mo,wo,e,t);s.layers=this.layers,this.add(s);const a=new en(Mo,wo,e,t);a.layers=this.layers,this.add(a);const c=new en(Mo,wo,e,t);c.layers=this.layers,this.add(c);const u=new en(Mo,wo,e,t);u.layers=this.layers,this.add(u);const h=new en(Mo,wo,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,a,c,u]=t;for(const h of t)this.remove(h);if(e===Ni)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===Qa)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,a,c,u,h,f]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),g=e.getActiveMipmapLevel(),x=e.xr.enabled;e.xr.enabled=!1;const M=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,a),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=M,e.setRenderTarget(n,5,i),e.render(t,f),e.setRenderTarget(p,m,g),e.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class fl extends tn{constructor(e,t,n,i,s,a,c,u,h,f){e=e!==void 0?e:[],t=t!==void 0?t:yr,super(e,t,n,i,s,a,c,u,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class hx extends di{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new fl(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Kt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Qr(5,5,5),s=new ii({name:"CubemapFromEquirect",uniforms:Go(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Gn,blending:Ji});s.uniforms.tEquirect.value=t;const a=new sn(i,s),c=t.minFilter;return t.minFilter===Zi&&(t.minFilter=Kt),new ux(1,10,this).update(e,a),t.minFilter=c,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(s)}}class Sh{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ie(e),this.density=t}clone(){return new Sh(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class dl{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Ie(e),this.near=t,this.far=n}clone(){return new dl(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Mh extends Pt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Yt,this.environmentIntensity=1,this.environmentRotation=new Yt,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class wh{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ka,this.updateRanges=[],this.version=0,this.uuid=fi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=fi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=fi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const kn=new I;class js{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)kn.fromBufferAttribute(this,t),kn.applyMatrix4(e),this.setXYZ(t,kn.x,kn.y,kn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)kn.fromBufferAttribute(this,t),kn.applyNormalMatrix(e),this.setXYZ(t,kn.x,kn.y,kn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)kn.fromBufferAttribute(this,t),kn.transformDirection(e),this.setXYZ(t,kn.x,kn.y,kn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Hn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=xt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Hn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Hn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Hn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Hn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array),i=xt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=xt(t,this.array),n=xt(n,this.array),i=xt(i,this.array),s=xt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Ht(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new js(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Wp extends On{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ie(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Eo;const xa=new I,To=new I,bo=new I,Ao=new ue,ya=new ue,fx=new ft,Nc=new I,Sa=new I,Fc=new I,u0=new ue,xd=new ue,h0=new ue;class dx extends Pt{constructor(e=new Wp){if(super(),this.isSprite=!0,this.type="Sprite",Eo===void 0){Eo=new yt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new wh(t,5);Eo.setIndex([0,1,2,0,2,3]),Eo.setAttribute("position",new js(n,3,0,!1)),Eo.setAttribute("uv",new js(n,2,3,!1))}this.geometry=Eo,this.material=e,this.center=new ue(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),To.setFromMatrixScale(this.matrixWorld),fx.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),bo.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&To.multiplyScalar(-bo.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const a=this.center;Oc(Nc.set(-.5,-.5,0),bo,a,To,i,s),Oc(Sa.set(.5,-.5,0),bo,a,To,i,s),Oc(Fc.set(.5,.5,0),bo,a,To,i,s),u0.set(0,0),xd.set(1,0),h0.set(1,1);let c=e.ray.intersectTriangle(Nc,Sa,Fc,!1,xa);if(c===null&&(Oc(Sa.set(-.5,.5,0),bo,a,To,i,s),xd.set(0,1),c=e.ray.intersectTriangle(Nc,Fc,Sa,!1,xa),c===null))return;const u=e.ray.origin.distanceTo(xa);u<e.near||u>e.far||t.push({distance:u,point:xa.clone(),uv:ti.getInterpolation(xa,Nc,Sa,Fc,u0,xd,h0,new ue),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Oc(r,e,t,n,i,s){Ao.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(ya.x=s*Ao.x-i*Ao.y,ya.y=i*Ao.x+s*Ao.y):ya.copy(Ao),r.copy(e),r.x+=ya.x,r.y+=ya.y,r.applyMatrix4(fx)}const Bc=new I,f0=new I;class px extends Pt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const i=t.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Bc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Bc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Bc.setFromMatrixPosition(e.matrixWorld),f0.setFromMatrixPosition(this.matrixWorld);const n=Bc.distanceTo(f0)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),n>=a)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const d0=new I,p0=new Dt,m0=new Dt,f1=new I,g0=new ft,zc=new I,yd=new Nn,v0=new ft,Sd=new Ys;class mx extends sn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=dp,this.bindMatrix=new ft,this.bindMatrixInverse=new ft,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Wn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,zc),this.boundingBox.expandByPoint(zc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Nn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,zc),this.boundingSphere.expandByPoint(zc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),yd.copy(this.boundingSphere),yd.applyMatrix4(i),e.ray.intersectsSphere(yd)!==!1&&(v0.copy(i).invert(),Sd.copy(e.ray).applyMatrix4(v0),!(this.boundingBox!==null&&Sd.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Sd)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Dt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===dp?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===W_?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;p0.fromBufferAttribute(i.attributes.skinIndex,e),m0.fromBufferAttribute(i.attributes.skinWeight,e),d0.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const a=m0.getComponent(s);if(a!==0){const c=p0.getComponent(s);g0.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(f1.copy(d0).applyMatrix4(g0),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Xp extends Pt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Ki extends tn{constructor(e=null,t=1,n=1,i,s,a,c,u,h=on,f=on,p,m){super(null,a,c,u,h,f,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const _0=new ft,d1=new ft;class Eh{constructor(e=[],t=[]){this.uuid=fi(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new ft)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new ft;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,a=e.length;s<a;s++){const c=e[s]?e[s].matrixWorld:d1;_0.multiplyMatrices(c,t[s]),_0.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Eh(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Ki(t,e,e,Un,ni);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let a=t[s];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),a=new Xp),this.bones.push(a),this.boneInverses.push(new ft().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const a=t[i];e.bones.push(a.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class Wo extends Ht{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Co=new ft,x0=new ft,kc=[],y0=new Wn,p1=new ft,Ma=new sn,wa=new Nn;class Yo extends sn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Wo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,p1)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Wn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Co),y0.copy(e.boundingBox).applyMatrix4(Co),this.boundingBox.union(y0)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Nn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Co),wa.copy(e.boundingSphere).applyMatrix4(Co),this.boundingSphere.union(wa)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,s=n.length+1,a=e*s+1;for(let c=0;c<n.length;c++)n[c]=i[a+c]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Ma.geometry=this.geometry,Ma.material=this.material,Ma.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),wa.copy(this.boundingSphere),wa.applyMatrix4(n),e.ray.intersectsSphere(wa)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,Co),x0.multiplyMatrices(n,Co),Ma.matrixWorld=x0,Ma.raycast(e,kc);for(let a=0,c=kc.length;a<c;a++){const u=kc[a];u.instanceId=s,u.object=this,t.push(u)}kc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Wo(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new Ki(new Float32Array(i*this.count),i,this.count,mh,ni));const s=this.morphTexture.source.data.data;let a=0;for(let h=0;h<n.length;h++)a+=n[h];const c=this.geometry.morphTargetsRelative?1:1-a,u=i*e;s[u]=c,s.set(n,u+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}const Md=new I,m1=new I,g1=new _t;class Yi{constructor(e=new I(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Md.subVectors(n,t).cross(m1.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Md),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||g1.getNormalMatrix(e),i=this.coplanarPoint(Md).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const vs=new Nn,Vc=new I;class pl{constructor(e=new Yi,t=new Yi,n=new Yi,i=new Yi,s=new Yi,a=new Yi){this.planes=[e,t,n,i,s,a]}set(e,t,n,i,s,a){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Ni){const n=this.planes,i=e.elements,s=i[0],a=i[1],c=i[2],u=i[3],h=i[4],f=i[5],p=i[6],m=i[7],g=i[8],x=i[9],M=i[10],y=i[11],_=i[12],E=i[13],w=i[14],T=i[15];if(n[0].setComponents(u-s,m-h,y-g,T-_).normalize(),n[1].setComponents(u+s,m+h,y+g,T+_).normalize(),n[2].setComponents(u+a,m+f,y+x,T+E).normalize(),n[3].setComponents(u-a,m-f,y-x,T-E).normalize(),n[4].setComponents(u-c,m-p,y-M,T-w).normalize(),t===Ni)n[5].setComponents(u+c,m+p,y+M,T+w).normalize();else if(t===Qa)n[5].setComponents(c,p,M,w).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),vs.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),vs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(vs)}intersectsSprite(e){return vs.center.set(0,0,0),vs.radius=.7071067811865476,vs.applyMatrix4(e.matrixWorld),this.intersectsSphere(vs)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Vc.x=i.normal.x>0?e.max.x:e.min.x,Vc.y=i.normal.y>0?e.max.y:e.min.y,Vc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Vc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function wd(r,e){return r-e}function v1(r,e){return r.z-e.z}function _1(r,e){return e.z-r.z}class x1{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,i){const s=this.pool,a=this.list;this.index>=s.length&&s.push({start:-1,count:-1,z:-1,index:-1});const c=s[this.index];a.push(c),this.index++,c.start=e,c.count=t,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const Qn=new ft,y1=new Ie(1,1,1),Ed=new pl,Hc=new Wn,_s=new Nn,Ea=new I,S0=new I,S1=new I,Td=new x1,Ln=new sn,Gc=[];function M1(r,e,t=0){const n=e.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==e.array.constructor){const i=r.count;for(let s=0;s<i;s++)for(let a=0;a<n;a++)e.setComponent(s+t,a,r.getComponent(s,a))}else e.array.set(r.array,t*n);e.needsUpdate=!0}function xs(r,e){if(r.constructor!==e.constructor){const t=Math.min(r.length,e.length);for(let n=0;n<t;n++)e[n]=r[n]}else{const t=Math.min(r.length,e.length);e.set(new r.constructor(r.buffer,0,t))}}class gx extends sn{get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}constructor(e,t,n=t*2,i){super(new yt,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new Ki(t,e,e,Un,ni);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new Ki(t,e,e,ul,Sr);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new Ki(t,e,e,Un,ni);n.colorSpace=Nt.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const s in e.attributes){const a=e.getAttribute(s),{array:c,itemSize:u,normalized:h}=a,f=new c.constructor(n*u),p=new Ht(f,u,h);t.setAttribute(s,p)}if(e.getIndex()!==null){const s=n>65535?new Uint32Array(i):new Uint16Array(i);t.setIndex(new Ht(s,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),s=t.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Wn);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const s=t[n].geometryIndex;this.getMatrixAt(n,Qn),this.getBoundingBoxAt(s,Hc).applyMatrix4(Qn),e.union(Hc)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Nn);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const s=t[n].geometryIndex;this.getMatrixAt(n,Qn),this.getBoundingSphereAt(s,_s).applyMatrix4(Qn),e.union(_s)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:e};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(wd),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const s=this._matricesTexture;Qn.identity().toArray(s.image.data,i*16),s.needsUpdate=!0;const a=this._colorsTexture;return a&&(y1.toArray(a.image.data,i*4),a.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},s=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const a=e.getIndex();if(a!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?a.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let u;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(wd),u=this._availableGeometryIds.shift(),s[u]=i):(u=this._geometryCount,this._geometryCount++,s.push(i)),this.setGeometryAt(u,e),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,u}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),a=t.getIndex(),c=this._geometryInfo[e];if(i&&a.count>c.reservedIndexCount||t.attributes.position.count>c.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,h=c.reservedVertexCount;c.vertexCount=t.getAttribute("position").count;for(const f in n.attributes){const p=t.getAttribute(f),m=n.getAttribute(f);M1(p,m,u);const g=p.itemSize;for(let x=p.count,M=h;x<M;x++){const y=u+x;for(let _=0;_<g;_++)m.setComponent(y,_,0)}m.needsUpdate=!0,m.addUpdateRange(u*g,h*g)}if(i){const f=c.indexStart,p=c.reservedIndexCount;c.indexCount=t.getIndex().count;for(let m=0;m<a.count;m++)s.setX(f+m,u+a.getX(m));for(let m=a.count,g=p;m<g;m++)s.setX(f+m,u);s.needsUpdate=!0,s.addUpdateRange(f,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,t.boundingBox!==null&&(c.boundingBox=t.boundingBox.clone()),c.boundingSphere=null,t.boundingSphere!==null&&(c.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const n=this._instanceInfo;for(let i=0,s=n.length;i<s;i++)n[i].geometryIndex===e&&this.deleteInstance(i);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const n=this._geometryInfo,i=n.map((a,c)=>c).sort((a,c)=>n[a].vertexStart-n[c].vertexStart),s=this.geometry;for(let a=0,c=n.length;a<c;a++){const u=i[a],h=n[u];if(h.active!==!1){if(s.index!==null){if(h.indexStart!==t){const{indexStart:f,vertexStart:p,reservedIndexCount:m}=h,g=s.index,x=g.array,M=e-p;for(let y=f;y<f+m;y++)x[y]=x[y]+M;g.array.copyWithin(t,f,f+m),g.addUpdateRange(t,m),h.indexStart=t}t+=h.reservedIndexCount}if(h.vertexStart!==e){const{vertexStart:f,reservedVertexCount:p}=h,m=s.attributes;for(const g in m){const x=m[g],{array:M,itemSize:y}=x;M.copyWithin(e*y,f*y,(f+p)*y),x.addUpdateRange(e*y,p*y)}h.vertexStart=e}e+=h.reservedVertexCount,h.start=s.index?h.indexStart:h.vertexStart,this._nextIndexStart=s.index?h.indexStart+h.reservedIndexCount:0,this._nextVertexStart=h.vertexStart+h.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingBox===null){const s=new Wn,a=n.index,c=n.attributes.position;for(let u=i.start,h=i.start+i.count;u<h;u++){let f=u;a&&(f=a.getX(f)),s.expandByPoint(Ea.fromBufferAttribute(c,f))}i.boundingBox=s}return t.copy(i.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingSphere===null){const s=new Nn;this.getBoundingBoxAt(e,Hc),Hc.getCenter(s.center);const a=n.index,c=n.attributes.position;let u=0;for(let h=i.start,f=i.start+i.count;h<f;h++){let p=h;a&&(p=a.getX(p)),Ea.fromBufferAttribute(c,p),u=Math.max(u,s.center.distanceToSquared(Ea))}s.radius=Math.sqrt(u),i.boundingSphere=s}return t.copy(i.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const n=this._matricesTexture,i=this._matricesTexture.image.data;return t.toArray(i,e*16),n.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(wd);t[t.length-1]===n.length;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const i=new Int32Array(e),s=new Int32Array(e);xs(this._multiDrawCounts,i),xs(this._multiDrawStarts,s),this._multiDrawCounts=i,this._multiDrawStarts=s,this._maxInstanceCount=e;const a=this._indirectTexture,c=this._matricesTexture,u=this._colorsTexture;a.dispose(),this._initIndirectTexture(),xs(a.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),xs(c.image.data,this._matricesTexture.image.data),u&&(u.dispose(),this._initColorsTexture(),xs(u.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(u=>u.indexStart+u.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const s=this.geometry;s.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new yt,this._initializeGeometry(s));const a=this.geometry;s.index&&xs(s.index.array,a.index.array);for(const c in s.attributes)xs(s.attributes[c].array,a.attributes[c].array)}raycast(e,t){const n=this._instanceInfo,i=this._geometryInfo,s=this.matrixWorld,a=this.geometry;Ln.material=this.material,Ln.geometry.index=a.index,Ln.geometry.attributes=a.attributes,Ln.geometry.boundingBox===null&&(Ln.geometry.boundingBox=new Wn),Ln.geometry.boundingSphere===null&&(Ln.geometry.boundingSphere=new Nn);for(let c=0,u=n.length;c<u;c++){if(!n[c].visible||!n[c].active)continue;const h=n[c].geometryIndex,f=i[h];Ln.geometry.setDrawRange(f.start,f.count),this.getMatrixAt(c,Ln.matrixWorld).premultiply(s),this.getBoundingBoxAt(h,Ln.geometry.boundingBox),this.getBoundingSphereAt(h,Ln.geometry.boundingSphere),Ln.raycast(e,Gc);for(let p=0,m=Gc.length;p<m;p++){const g=Gc[p];g.object=this,g.batchId=c,t.push(g)}Gc.length=0}Ln.material=null,Ln.geometry.index=null,Ln.geometry.attributes={},Ln.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null),this}onBeforeRender(e,t,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const a=i.getIndex(),c=a===null?1:a.array.BYTES_PER_ELEMENT,u=this._instanceInfo,h=this._multiDrawStarts,f=this._multiDrawCounts,p=this._geometryInfo,m=this.perObjectFrustumCulled,g=this._indirectTexture,x=g.image.data;m&&(Qn.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Ed.setFromProjectionMatrix(Qn,e.coordinateSystem));let M=0;if(this.sortObjects){Qn.copy(this.matrixWorld).invert(),Ea.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Qn),S0.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(Qn);for(let E=0,w=u.length;E<w;E++)if(u[E].visible&&u[E].active){const T=u[E].geometryIndex;this.getMatrixAt(E,Qn),this.getBoundingSphereAt(T,_s).applyMatrix4(Qn);let L=!1;if(m&&(L=!Ed.intersectsSphere(_s)),!L){const R=p[T],U=S1.subVectors(_s.center,Ea).dot(S0);Td.push(R.start,R.count,U,E)}}const y=Td.list,_=this.customSort;_===null?y.sort(s.transparent?_1:v1):_.call(this,y,n);for(let E=0,w=y.length;E<w;E++){const T=y[E];h[M]=T.start*c,f[M]=T.count,x[M]=T.index,M++}Td.reset()}else for(let y=0,_=u.length;y<_;y++)if(u[y].visible&&u[y].active){const E=u[y].geometryIndex;let w=!1;if(m&&(this.getMatrixAt(y,Qn),this.getBoundingSphereAt(E,_s).applyMatrix4(Qn),w=!Ed.intersectsSphere(_s)),!w){const T=p[E];h[M]=T.start*c,f[M]=T.count,x[M]=y,M++}}g.needsUpdate=!0,this._multiDrawCount=M,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,s,a){this.onBeforeRender(e,null,i,s,a)}}class Xn extends On{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ie(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const ih=new I,rh=new I,M0=new ft,Ta=new Ys,Wc=new Nn,bd=new I,w0=new I;class Zr extends Pt{constructor(e=new yt,t=new Xn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)ih.fromBufferAttribute(t,i-1),rh.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=ih.distanceTo(rh);e.setAttribute("lineDistance",new Ke(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Wc.copy(n.boundingSphere),Wc.applyMatrix4(i),Wc.radius+=s,e.ray.intersectsSphere(Wc)===!1)return;M0.copy(i).invert(),Ta.copy(e.ray).applyMatrix4(M0);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=this.isLineSegments?2:1,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,a.start),x=Math.min(f.count,a.start+a.count);for(let M=g,y=x-1;M<y;M+=h){const _=f.getX(M),E=f.getX(M+1),w=Xc(this,e,Ta,u,_,E);w&&t.push(w)}if(this.isLineLoop){const M=f.getX(x-1),y=f.getX(g),_=Xc(this,e,Ta,u,M,y);_&&t.push(_)}}else{const g=Math.max(0,a.start),x=Math.min(m.count,a.start+a.count);for(let M=g,y=x-1;M<y;M+=h){const _=Xc(this,e,Ta,u,M,M+1);_&&t.push(_)}if(this.isLineLoop){const M=Xc(this,e,Ta,u,x-1,g);M&&t.push(M)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function Xc(r,e,t,n,i,s){const a=r.geometry.attributes.position;if(ih.fromBufferAttribute(a,i),rh.fromBufferAttribute(a,s),t.distanceSqToSegment(ih,rh,bd,w0)>n)return;bd.applyMatrix4(r.matrixWorld);const u=e.ray.origin.distanceTo(bd);if(!(u<e.near||u>e.far))return{distance:u,point:w0.clone().applyMatrix4(r.matrixWorld),index:i,face:null,faceIndex:null,barycoord:null,object:r}}const E0=new I,T0=new I;class tr extends Zr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)E0.fromBufferAttribute(t,i),T0.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+E0.distanceTo(T0);e.setAttribute("lineDistance",new Ke(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class vx extends Zr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class jp extends On{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ie(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const b0=new ft,gp=new Ys,jc=new Nn,qc=new I;class _x extends Pt{constructor(e=new yt,t=new jp){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),jc.copy(n.boundingSphere),jc.applyMatrix4(i),jc.radius+=s,e.ray.intersectsSphere(jc)===!1)return;b0.copy(i).invert(),gp.copy(e.ray).applyMatrix4(b0);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,a.start),g=Math.min(h.count,a.start+a.count);for(let x=m,M=g;x<M;x++){const y=h.getX(x);qc.fromBufferAttribute(p,y),A0(qc,y,u,i,e,t,this)}}else{const m=Math.max(0,a.start),g=Math.min(p.count,a.start+a.count);for(let x=m,M=g;x<M;x++)qc.fromBufferAttribute(p,x),A0(qc,x,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function A0(r,e,t,n,i,s,a){const c=gp.distanceSqToPoint(r);if(c<t){const u=new I;gp.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}class Bo extends Pt{constructor(){super(),this.isGroup=!0,this.type="Group"}}class w1 extends tn{constructor(e,t,n,i,s,a,c,u,h){super(e,t,n,i,s,a,c,u,h),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:Kt,this.magFilter=s!==void 0?s:Kt,this.generateMipmaps=!1;const f=this;function p(){f.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class E1 extends tn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=on,this.minFilter=on,this.generateMipmaps=!1,this.needsUpdate=!0}}class Th extends tn{constructor(e,t,n,i,s,a,c,u,h,f,p,m){super(null,a,c,u,h,f,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class T1 extends Th{constructor(e,t,n,i,s,a){super(e,t,n,s,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Ti,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class b1 extends Th{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,yr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class A1 extends tn{constructor(e,t,n,i,s,a,c,u,h){super(e,t,n,i,s,a,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class bh extends tn{constructor(e,t,n,i,s,a,c,u,h,f=jr){if(f!==jr&&f!==Ws)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&f===jr&&(n=Sr),n===void 0&&f===Ws&&(n=Gs),super(null,i,s,a,c,u,f,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:on,this.minFilter=u!==void 0?u:on,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Oi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let a;t?a=t:a=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-a,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===a)return i/(s-1);const f=n[i],m=n[i+1]-f,g=(a-f)/m;return(i+g)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const a=this.getPoint(i),c=this.getPoint(s),u=t||(a.isVector2?new ue:new I);return u.copy(c).sub(a).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new I,i=[],s=[],a=[],c=new I,u=new ft;for(let g=0;g<=e;g++){const x=g/e;i[g]=this.getTangentAt(x,new I)}s[0]=new I,a[0]=new I;let h=Number.MAX_VALUE;const f=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);f<=h&&(h=f,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),a[0].crossVectors(i[0],s[0]);for(let g=1;g<=e;g++){if(s[g]=s[g-1].clone(),a[g]=a[g-1].clone(),c.crossVectors(i[g-1],i[g]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(mt(i[g-1].dot(i[g]),-1,1));s[g].applyMatrix4(u.makeRotationAxis(c,x))}a[g].crossVectors(i[g],s[g])}if(t===!0){let g=Math.acos(mt(s[0].dot(s[e]),-1,1));g/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(g=-g);for(let x=1;x<=e;x++)s[x].applyMatrix4(u.makeRotationAxis(i[x],g*x)),a[x].crossVectors(i[x],s[x])}return{tangents:i,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Ah extends Oi{constructor(e=0,t=0,n=1,i=1,s=0,a=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=c,this.aRotation=u}getPoint(e,t=new ue){const n=t,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(a?s=0:s=i),this.aClockwise===!0&&!a&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const f=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,g=h-this.aY;u=m*f-g*p+this.aX,h=m*p+g*f+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class xx extends Ah{constructor(e,t,n,i,s,a){super(e,t,n,n,i,s,a),this.isArcCurve=!0,this.type="ArcCurve"}}function qp(){let r=0,e=0,t=0,n=0;function i(s,a,c,u){r=s,e=c,t=-3*s+3*a-2*c-u,n=2*s-2*a+c+u}return{initCatmullRom:function(s,a,c,u,h){i(a,c,h*(c-s),h*(u-a))},initNonuniformCatmullRom:function(s,a,c,u,h,f,p){let m=(a-s)/h-(c-s)/(h+f)+(c-a)/f,g=(c-a)/f-(u-a)/(f+p)+(u-c)/p;m*=f,g*=f,i(a,c,m,g)},calc:function(s){const a=s*s,c=a*s;return r+e*s+t*a+n*c}}}const Yc=new I,Ad=new qp,Cd=new qp,Rd=new qp;class yx extends Oi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new I){const n=t,i=this.points,s=i.length,a=(s-(this.closed?0:1))*e;let c=Math.floor(a),u=a-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,f;this.closed||c>0?h=i[(c-1)%s]:(Yc.subVectors(i[0],i[1]).add(i[0]),h=Yc);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?f=i[(c+2)%s]:(Yc.subVectors(i[s-1],i[s-2]).add(i[s-1]),f=Yc),this.curveType==="centripetal"||this.curveType==="chordal"){const g=this.curveType==="chordal"?.5:.25;let x=Math.pow(h.distanceToSquared(p),g),M=Math.pow(p.distanceToSquared(m),g),y=Math.pow(m.distanceToSquared(f),g);M<1e-4&&(M=1),x<1e-4&&(x=M),y<1e-4&&(y=M),Ad.initNonuniformCatmullRom(h.x,p.x,m.x,f.x,x,M,y),Cd.initNonuniformCatmullRom(h.y,p.y,m.y,f.y,x,M,y),Rd.initNonuniformCatmullRom(h.z,p.z,m.z,f.z,x,M,y)}else this.curveType==="catmullrom"&&(Ad.initCatmullRom(h.x,p.x,m.x,f.x,this.tension),Cd.initCatmullRom(h.y,p.y,m.y,f.y,this.tension),Rd.initCatmullRom(h.z,p.z,m.z,f.z,this.tension));return n.set(Ad.calc(u),Cd.calc(u),Rd.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new I().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function C0(r,e,t,n,i){const s=(n-e)*.5,a=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+a)*u+(-3*t+3*n-2*s-a)*c+s*r+t}function C1(r,e){const t=1-r;return t*t*e}function R1(r,e){return 2*(1-r)*r*e}function P1(r,e){return r*r*e}function Ha(r,e,t,n){return C1(r,e)+R1(r,t)+P1(r,n)}function I1(r,e){const t=1-r;return t*t*t*e}function L1(r,e){const t=1-r;return 3*t*t*r*e}function D1(r,e){return 3*(1-r)*r*r*e}function U1(r,e){return r*r*r*e}function Ga(r,e,t,n,i){return I1(r,e)+L1(r,t)+D1(r,n)+U1(r,i)}class Yp extends Oi{constructor(e=new ue,t=new ue,n=new ue,i=new ue){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ue){const n=t,i=this.v0,s=this.v1,a=this.v2,c=this.v3;return n.set(Ga(e,i.x,s.x,a.x,c.x),Ga(e,i.y,s.y,a.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Sx extends Oi{constructor(e=new I,t=new I,n=new I,i=new I){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new I){const n=t,i=this.v0,s=this.v1,a=this.v2,c=this.v3;return n.set(Ga(e,i.x,s.x,a.x,c.x),Ga(e,i.y,s.y,a.y,c.y),Ga(e,i.z,s.z,a.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Zp extends Oi{constructor(e=new ue,t=new ue){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ue){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ue){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Mx extends Oi{constructor(e=new I,t=new I){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new I){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new I){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Jp extends Oi{constructor(e=new ue,t=new ue,n=new ue){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ue){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(Ha(e,i.x,s.x,a.x),Ha(e,i.y,s.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Kp extends Oi{constructor(e=new I,t=new I,n=new I){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new I){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(Ha(e,i.x,s.x,a.x),Ha(e,i.y,s.y,a.y),Ha(e,i.z,s.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Qp extends Oi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ue){const n=t,i=this.points,s=(i.length-1)*e,a=Math.floor(s),c=s-a,u=i[a===0?a:a-1],h=i[a],f=i[a>i.length-2?i.length-1:a+1],p=i[a>i.length-3?i.length-1:a+2];return n.set(C0(c,u.x,h.x,f.x,p.x),C0(c,u.y,h.y,f.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ue().fromArray(i))}return this}}var sh=Object.freeze({__proto__:null,ArcCurve:xx,CatmullRomCurve3:yx,CubicBezierCurve:Yp,CubicBezierCurve3:Sx,EllipseCurve:Ah,LineCurve:Zp,LineCurve3:Mx,QuadraticBezierCurve:Jp,QuadraticBezierCurve3:Kp,SplineCurve:Qp});class wx extends Oi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new sh[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const a=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-a/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const a=s[i],c=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,u=a.getPoints(c);for(let h=0;h<u.length;h++){const f=u[h];n&&n.equals(f)||(t.push(f),n=f)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new sh[i.type]().fromJSON(i))}return this}}class el extends wx{constructor(e){super(),this.type="Path",this.currentPoint=new ue,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Zp(this.currentPoint.clone(),new ue(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Jp(this.currentPoint.clone(),new ue(e,t),new ue(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,a){const c=new Yp(this.currentPoint.clone(),new ue(e,t),new ue(n,i),new ue(s,a));return this.curves.push(c),this.currentPoint.set(s,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Qp(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,a){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,a),this}absarc(e,t,n,i,s,a){return this.absellipse(e,t,n,n,i,s,a),this}ellipse(e,t,n,i,s,a,c,u){const h=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+h,t+f,n,i,s,a,c,u),this}absellipse(e,t,n,i,s,a,c,u){const h=new Ah(e,t,n,i,s,a,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const f=h.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class ml extends yt{constructor(e=[new ue(0,-.5),new ue(.5,0),new ue(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=mt(i,0,Math.PI*2);const s=[],a=[],c=[],u=[],h=[],f=1/t,p=new I,m=new ue,g=new I,x=new I,M=new I;let y=0,_=0;for(let E=0;E<=e.length-1;E++)switch(E){case 0:y=e[E+1].x-e[E].x,_=e[E+1].y-e[E].y,g.x=_*1,g.y=-y,g.z=_*0,M.copy(g),g.normalize(),u.push(g.x,g.y,g.z);break;case e.length-1:u.push(M.x,M.y,M.z);break;default:y=e[E+1].x-e[E].x,_=e[E+1].y-e[E].y,g.x=_*1,g.y=-y,g.z=_*0,x.copy(g),g.x+=M.x,g.y+=M.y,g.z+=M.z,g.normalize(),u.push(g.x,g.y,g.z),M.copy(x)}for(let E=0;E<=t;E++){const w=n+E*f*i,T=Math.sin(w),L=Math.cos(w);for(let R=0;R<=e.length-1;R++){p.x=e[R].x*T,p.y=e[R].y,p.z=e[R].x*L,a.push(p.x,p.y,p.z),m.x=E/t,m.y=R/(e.length-1),c.push(m.x,m.y);const U=u[3*R+0]*T,N=u[3*R+1],C=u[3*R+0]*L;h.push(U,N,C)}}for(let E=0;E<t;E++)for(let w=0;w<e.length-1;w++){const T=w+E*e.length,L=T,R=T+e.length,U=T+e.length+1,N=T+1;s.push(L,R,N),s.push(U,N,R)}this.setIndex(s),this.setAttribute("position",new Ke(a,3)),this.setAttribute("uv",new Ke(c,2)),this.setAttribute("normal",new Ke(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ml(e.points,e.segments,e.phiStart,e.phiLength)}}class Ch extends ml{constructor(e=1,t=1,n=4,i=8){const s=new el;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new Ch(e.radius,e.length,e.capSegments,e.radialSegments)}}class gl extends yt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],a=[],c=[],u=[],h=new I,f=new ue;a.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const g=n+p/t*i;h.x=e*Math.cos(g),h.y=e*Math.sin(g),a.push(h.x,h.y,h.z),c.push(0,0,1),f.x=(a[m]/e+1)/2,f.y=(a[m+1]/e+1)/2,u.push(f.x,f.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new Ke(a,3)),this.setAttribute("normal",new Ke(c,3)),this.setAttribute("uv",new Ke(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new gl(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Zo extends yt{constructor(e=1,t=1,n=1,i=32,s=1,a=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:a,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const f=[],p=[],m=[],g=[];let x=0;const M=[],y=n/2;let _=0;E(),a===!1&&(e>0&&w(!0),t>0&&w(!1)),this.setIndex(f),this.setAttribute("position",new Ke(p,3)),this.setAttribute("normal",new Ke(m,3)),this.setAttribute("uv",new Ke(g,2));function E(){const T=new I,L=new I;let R=0;const U=(t-e)/n;for(let N=0;N<=s;N++){const C=[],A=N/s,F=A*(t-e)+e;for(let q=0;q<=i;q++){const W=q/i,$=W*u+c,oe=Math.sin($),ee=Math.cos($);L.x=F*oe,L.y=-A*n+y,L.z=F*ee,p.push(L.x,L.y,L.z),T.set(oe,U,ee).normalize(),m.push(T.x,T.y,T.z),g.push(W,1-A),C.push(x++)}M.push(C)}for(let N=0;N<i;N++)for(let C=0;C<s;C++){const A=M[C][N],F=M[C+1][N],q=M[C+1][N+1],W=M[C][N+1];(e>0||C!==0)&&(f.push(A,F,W),R+=3),(t>0||C!==s-1)&&(f.push(F,q,W),R+=3)}h.addGroup(_,R,0),_+=R}function w(T){const L=x,R=new ue,U=new I;let N=0;const C=T===!0?e:t,A=T===!0?1:-1;for(let q=1;q<=i;q++)p.push(0,y*A,0),m.push(0,A,0),g.push(.5,.5),x++;const F=x;for(let q=0;q<=i;q++){const $=q/i*u+c,oe=Math.cos($),ee=Math.sin($);U.x=C*ee,U.y=y*A,U.z=C*oe,p.push(U.x,U.y,U.z),m.push(0,A,0),R.x=oe*.5+.5,R.y=ee*.5*A+.5,g.push(R.x,R.y),x++}for(let q=0;q<i;q++){const W=L+q,$=F+q;T===!0?f.push($,$+1,W):f.push($+1,$,W),N+=3}h.addGroup(_,N,T===!0?1:2),_+=N}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Zo(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Rh extends Zo{constructor(e=1,t=1,n=32,i=1,s=!1,a=0,c=Math.PI*2){super(0,e,t,n,i,s,a,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:a,thetaLength:c}}static fromJSON(e){return new Rh(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class $r extends yt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],a=[];c(i),h(n),f(),this.setAttribute("position",new Ke(s,3)),this.setAttribute("normal",new Ke(s.slice(),3)),this.setAttribute("uv",new Ke(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const w=new I,T=new I,L=new I;for(let R=0;R<t.length;R+=3)g(t[R+0],w),g(t[R+1],T),g(t[R+2],L),u(w,T,L,E)}function u(E,w,T,L){const R=L+1,U=[];for(let N=0;N<=R;N++){U[N]=[];const C=E.clone().lerp(T,N/R),A=w.clone().lerp(T,N/R),F=R-N;for(let q=0;q<=F;q++)q===0&&N===R?U[N][q]=C:U[N][q]=C.clone().lerp(A,q/F)}for(let N=0;N<R;N++)for(let C=0;C<2*(R-N)-1;C++){const A=Math.floor(C/2);C%2===0?(m(U[N][A+1]),m(U[N+1][A]),m(U[N][A])):(m(U[N][A+1]),m(U[N+1][A+1]),m(U[N+1][A]))}}function h(E){const w=new I;for(let T=0;T<s.length;T+=3)w.x=s[T+0],w.y=s[T+1],w.z=s[T+2],w.normalize().multiplyScalar(E),s[T+0]=w.x,s[T+1]=w.y,s[T+2]=w.z}function f(){const E=new I;for(let w=0;w<s.length;w+=3){E.x=s[w+0],E.y=s[w+1],E.z=s[w+2];const T=y(E)/2/Math.PI+.5,L=_(E)/Math.PI+.5;a.push(T,1-L)}x(),p()}function p(){for(let E=0;E<a.length;E+=6){const w=a[E+0],T=a[E+2],L=a[E+4],R=Math.max(w,T,L),U=Math.min(w,T,L);R>.9&&U<.1&&(w<.2&&(a[E+0]+=1),T<.2&&(a[E+2]+=1),L<.2&&(a[E+4]+=1))}}function m(E){s.push(E.x,E.y,E.z)}function g(E,w){const T=E*3;w.x=e[T+0],w.y=e[T+1],w.z=e[T+2]}function x(){const E=new I,w=new I,T=new I,L=new I,R=new ue,U=new ue,N=new ue;for(let C=0,A=0;C<s.length;C+=9,A+=6){E.set(s[C+0],s[C+1],s[C+2]),w.set(s[C+3],s[C+4],s[C+5]),T.set(s[C+6],s[C+7],s[C+8]),R.set(a[A+0],a[A+1]),U.set(a[A+2],a[A+3]),N.set(a[A+4],a[A+5]),L.copy(E).add(w).add(T).divideScalar(3);const F=y(L);M(R,A+0,E,F),M(U,A+2,w,F),M(N,A+4,T,F)}}function M(E,w,T,L){L<0&&E.x===1&&(a[w]=E.x-1),T.x===0&&T.z===0&&(a[w]=L/2/Math.PI+.5)}function y(E){return Math.atan2(E.z,-E.x)}function _(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new $r(e.vertices,e.indices,e.radius,e.details)}}class Ph extends $r{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ph(e.radius,e.detail)}}const Zc=new I,Jc=new I,Pd=new I,Kc=new ti;class Ex extends yt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(Bs*t),a=e.getIndex(),c=e.getAttribute("position"),u=a?a.count:c.count,h=[0,0,0],f=["a","b","c"],p=new Array(3),m={},g=[];for(let x=0;x<u;x+=3){a?(h[0]=a.getX(x),h[1]=a.getX(x+1),h[2]=a.getX(x+2)):(h[0]=x,h[1]=x+1,h[2]=x+2);const{a:M,b:y,c:_}=Kc;if(M.fromBufferAttribute(c,h[0]),y.fromBufferAttribute(c,h[1]),_.fromBufferAttribute(c,h[2]),Kc.getNormal(Pd),p[0]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,p[1]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,p[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let E=0;E<3;E++){const w=(E+1)%3,T=p[E],L=p[w],R=Kc[f[E]],U=Kc[f[w]],N=`${T}_${L}`,C=`${L}_${T}`;C in m&&m[C]?(Pd.dot(m[C].normal)<=s&&(g.push(R.x,R.y,R.z),g.push(U.x,U.y,U.z)),m[C]=null):N in m||(m[N]={index0:h[E],index1:h[w],normal:Pd.clone()})}}for(const x in m)if(m[x]){const{index0:M,index1:y}=m[x];Zc.fromBufferAttribute(c,M),Jc.fromBufferAttribute(c,y),g.push(Zc.x,Zc.y,Zc.z),g.push(Jc.x,Jc.y,Jc.z)}this.setAttribute("position",new Ke(g,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class ks extends el{constructor(e){super(e),this.uuid=fi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new el().fromJSON(i))}return this}}const N1={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=Tx(r,0,i,t,!0);const a=[];if(!s||s.next===s.prev)return a;let c,u,h,f,p,m,g;if(n&&(s=k1(r,e,s,t)),r.length>80*t){c=h=r[0],u=f=r[1];for(let x=t;x<i;x+=t)p=r[x],m=r[x+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>f&&(f=m);g=Math.max(h-c,f-u),g=g!==0?32767/g:0}return tl(s,a,t,c,u,g,0),a}};function Tx(r,e,t,n,i){let s,a;if(i===K1(r,e,t,n)>0)for(s=e;s<t;s+=n)a=R0(s,r[s],r[s+1],a);else for(s=t-n;s>=e;s-=n)a=R0(s,r[s],r[s+1],a);return a&&Ih(a,a.next)&&(il(a),a=a.next),a}function qs(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(Ih(t,t.next)||Jt(t.prev,t,t.next)===0)){if(il(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function tl(r,e,t,n,i,s,a){if(!r)return;!a&&s&&X1(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?O1(r,n,i,s):F1(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),il(r),r=h.next,c=h.next;continue}if(r=h,r===c){a?a===1?(r=B1(qs(r),e,t),tl(r,e,t,n,i,s,2)):a===2&&z1(r,e,t,n,i,s):tl(qs(r),e,t,n,i,s,1);break}}}function F1(r){const e=r.prev,t=r,n=r.next;if(Jt(e,t,n)>=0)return!1;const i=e.x,s=t.x,a=n.x,c=e.y,u=t.y,h=n.y,f=i<s?i<a?i:a:s<a?s:a,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>a?i:a:s>a?s:a,g=c>u?c>h?c:h:u>h?u:h;let x=n.next;for(;x!==e;){if(x.x>=f&&x.x<=m&&x.y>=p&&x.y<=g&&zo(i,c,s,u,a,h,x.x,x.y)&&Jt(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function O1(r,e,t,n){const i=r.prev,s=r,a=r.next;if(Jt(i,s,a)>=0)return!1;const c=i.x,u=s.x,h=a.x,f=i.y,p=s.y,m=a.y,g=c<u?c<h?c:h:u<h?u:h,x=f<p?f<m?f:m:p<m?p:m,M=c>u?c>h?c:h:u>h?u:h,y=f>p?f>m?f:m:p>m?p:m,_=vp(g,x,e,t,n),E=vp(M,y,e,t,n);let w=r.prevZ,T=r.nextZ;for(;w&&w.z>=_&&T&&T.z<=E;){if(w.x>=g&&w.x<=M&&w.y>=x&&w.y<=y&&w!==i&&w!==a&&zo(c,f,u,p,h,m,w.x,w.y)&&Jt(w.prev,w,w.next)>=0||(w=w.prevZ,T.x>=g&&T.x<=M&&T.y>=x&&T.y<=y&&T!==i&&T!==a&&zo(c,f,u,p,h,m,T.x,T.y)&&Jt(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;w&&w.z>=_;){if(w.x>=g&&w.x<=M&&w.y>=x&&w.y<=y&&w!==i&&w!==a&&zo(c,f,u,p,h,m,w.x,w.y)&&Jt(w.prev,w,w.next)>=0)return!1;w=w.prevZ}for(;T&&T.z<=E;){if(T.x>=g&&T.x<=M&&T.y>=x&&T.y<=y&&T!==i&&T!==a&&zo(c,f,u,p,h,m,T.x,T.y)&&Jt(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function B1(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!Ih(i,s)&&bx(i,n,n.next,s)&&nl(i,s)&&nl(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),il(n),il(n.next),n=r=s),n=n.next}while(n!==r);return qs(n)}function z1(r,e,t,n,i,s){let a=r;do{let c=a.next.next;for(;c!==a.prev;){if(a.i!==c.i&&Y1(a,c)){let u=Ax(a,c);a=qs(a,a.next),u=qs(u,u.next),tl(a,e,t,n,i,s,0),tl(u,e,t,n,i,s,0);return}c=c.next}a=a.next}while(a!==r)}function k1(r,e,t,n){const i=[];let s,a,c,u,h;for(s=0,a=e.length;s<a;s++)c=e[s]*n,u=s<a-1?e[s+1]*n:r.length,h=Tx(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(q1(h));for(i.sort(V1),s=0;s<i.length;s++)t=H1(i[s],t);return t}function V1(r,e){return r.x-e.x}function H1(r,e){const t=G1(r,e);if(!t)return e;const n=Ax(t,r);return qs(n,n.next),qs(t,t.next)}function G1(r,e){let t=e,n=-1/0,i;const s=r.x,a=r.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const m=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let f=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&zo(a<h?s:n,a,u,h,a<h?n:s,a,t.x,t.y)&&(p=Math.abs(a-t.y)/(s-t.x),nl(t,r)&&(p<f||p===f&&(t.x>i.x||t.x===i.x&&W1(i,t)))&&(i=t,f=p)),t=t.next;while(t!==c);return i}function W1(r,e){return Jt(r.prev,r,e.prev)<0&&Jt(e.next,r,r.next)<0}function X1(r,e,t,n){let i=r;do i.z===0&&(i.z=vp(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,j1(i)}function j1(r){let e,t,n,i,s,a,c,u,h=1;do{for(t=r,r=null,s=null,a=0;t;){for(a++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(a>1);return r}function vp(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function q1(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function zo(r,e,t,n,i,s,a,c){return(i-a)*(e-c)>=(r-a)*(s-c)&&(r-a)*(n-c)>=(t-a)*(e-c)&&(t-a)*(s-c)>=(i-a)*(n-c)}function Y1(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!Z1(r,e)&&(nl(r,e)&&nl(e,r)&&J1(r,e)&&(Jt(r.prev,r,e.prev)||Jt(r,e.prev,e))||Ih(r,e)&&Jt(r.prev,r,r.next)>0&&Jt(e.prev,e,e.next)>0)}function Jt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Ih(r,e){return r.x===e.x&&r.y===e.y}function bx(r,e,t,n){const i=$c(Jt(r,e,t)),s=$c(Jt(r,e,n)),a=$c(Jt(t,n,r)),c=$c(Jt(t,n,e));return!!(i!==s&&a!==c||i===0&&Qc(r,t,e)||s===0&&Qc(r,n,e)||a===0&&Qc(t,r,n)||c===0&&Qc(t,e,n))}function Qc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function $c(r){return r>0?1:r<0?-1:0}function Z1(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&bx(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function nl(r,e){return Jt(r.prev,r,r.next)<0?Jt(r,e,r.next)>=0&&Jt(r,r.prev,e)>=0:Jt(r,e,r.prev)<0||Jt(r,r.next,e)<0}function J1(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function Ax(r,e){const t=new _p(r.i,r.x,r.y),n=new _p(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function R0(r,e,t,n){const i=new _p(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function il(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function _p(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function K1(r,e,t,n){let i=0;for(let s=e,a=t-n;s<t;s+=n)i+=(r[a]-r[s])*(r[s+1]+r[a+1]),a=s;return i}class Qi{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Qi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];P0(e),I0(n,e);let a=e.length;t.forEach(P0);for(let u=0;u<t.length;u++)i.push(a),a+=t[u].length,I0(n,t[u]);const c=N1.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function P0(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function I0(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Lh extends yt{constructor(e=new ks([new ue(.5,.5),new ue(-.5,.5),new ue(-.5,-.5),new ue(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];a(h)}this.setAttribute("position",new Ke(i,3)),this.setAttribute("uv",new Ke(s,2)),this.computeVertexNormals();function a(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,g=t.bevelThickness!==void 0?t.bevelThickness:.2,x=t.bevelSize!==void 0?t.bevelSize:g-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,y=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,E=t.UVGenerator!==void 0?t.UVGenerator:Q1;let w,T=!1,L,R,U,N;_&&(w=_.getSpacedPoints(f),T=!0,m=!1,L=_.computeFrenetFrames(f,!1),R=new I,U=new I,N=new I),m||(y=0,g=0,x=0,M=0);const C=c.extractPoints(h);let A=C.shape;const F=C.holes;if(!Qi.isClockWise(A)){A=A.reverse();for(let ve=0,ye=F.length;ve<ye;ve++){const z=F[ve];Qi.isClockWise(z)&&(F[ve]=z.reverse())}}const W=Qi.triangulateShape(A,F),$=A;for(let ve=0,ye=F.length;ve<ye;ve++){const z=F[ve];A=A.concat(z)}function oe(ve,ye,z){return ye||console.error("THREE.ExtrudeGeometry: vec does not exist"),ve.clone().addScaledVector(ye,z)}const ee=A.length,ge=W.length;function O(ve,ye,z){let Je,we,He;const Ce=ve.x-ye.x,st=ve.y-ye.y,De=z.x-ve.x,B=z.y-ve.y,P=Ce*Ce+st*st,te=Ce*B-st*De;if(Math.abs(te)>Number.EPSILON){const he=Math.sqrt(P),xe=Math.sqrt(De*De+B*B),pe=ye.x-st/he,Ze=ye.y+Ce/he,Le=z.x-B/xe,Ge=z.y+De/xe,Mt=((Le-pe)*B-(Ge-Ze)*De)/(Ce*B-st*De);Je=pe+Ce*Mt-ve.x,we=Ze+st*Mt-ve.y;const be=Je*Je+we*we;if(be<=2)return new ue(Je,we);He=Math.sqrt(be/2)}else{let he=!1;Ce>Number.EPSILON?De>Number.EPSILON&&(he=!0):Ce<-Number.EPSILON?De<-Number.EPSILON&&(he=!0):Math.sign(st)===Math.sign(B)&&(he=!0),he?(Je=-st,we=Ce,He=Math.sqrt(P)):(Je=Ce,we=st,He=Math.sqrt(P/2))}return new ue(Je/He,we/He)}const Y=[];for(let ve=0,ye=$.length,z=ye-1,Je=ve+1;ve<ye;ve++,z++,Je++)z===ye&&(z=0),Je===ye&&(Je=0),Y[ve]=O($[ve],$[z],$[Je]);const X=[];let Z,fe=Y.concat();for(let ve=0,ye=F.length;ve<ye;ve++){const z=F[ve];Z=[];for(let Je=0,we=z.length,He=we-1,Ce=Je+1;Je<we;Je++,He++,Ce++)He===we&&(He=0),Ce===we&&(Ce=0),Z[Je]=O(z[Je],z[He],z[Ce]);X.push(Z),fe=fe.concat(Z)}for(let ve=0;ve<y;ve++){const ye=ve/y,z=g*Math.cos(ye*Math.PI/2),Je=x*Math.sin(ye*Math.PI/2)+M;for(let we=0,He=$.length;we<He;we++){const Ce=oe($[we],Y[we],Je);Me(Ce.x,Ce.y,-z)}for(let we=0,He=F.length;we<He;we++){const Ce=F[we];Z=X[we];for(let st=0,De=Ce.length;st<De;st++){const B=oe(Ce[st],Z[st],Je);Me(B.x,B.y,-z)}}}const Ee=x+M;for(let ve=0;ve<ee;ve++){const ye=m?oe(A[ve],fe[ve],Ee):A[ve];T?(U.copy(L.normals[0]).multiplyScalar(ye.x),R.copy(L.binormals[0]).multiplyScalar(ye.y),N.copy(w[0]).add(U).add(R),Me(N.x,N.y,N.z)):Me(ye.x,ye.y,0)}for(let ve=1;ve<=f;ve++)for(let ye=0;ye<ee;ye++){const z=m?oe(A[ye],fe[ye],Ee):A[ye];T?(U.copy(L.normals[ve]).multiplyScalar(z.x),R.copy(L.binormals[ve]).multiplyScalar(z.y),N.copy(w[ve]).add(U).add(R),Me(N.x,N.y,N.z)):Me(z.x,z.y,p/f*ve)}for(let ve=y-1;ve>=0;ve--){const ye=ve/y,z=g*Math.cos(ye*Math.PI/2),Je=x*Math.sin(ye*Math.PI/2)+M;for(let we=0,He=$.length;we<He;we++){const Ce=oe($[we],Y[we],Je);Me(Ce.x,Ce.y,p+z)}for(let we=0,He=F.length;we<He;we++){const Ce=F[we];Z=X[we];for(let st=0,De=Ce.length;st<De;st++){const B=oe(Ce[st],Z[st],Je);T?Me(B.x,B.y+w[f-1].y,w[f-1].x+z):Me(B.x,B.y,p+z)}}}ne(),Se();function ne(){const ve=i.length/3;if(m){let ye=0,z=ee*ye;for(let Je=0;Je<ge;Je++){const we=W[Je];tt(we[2]+z,we[1]+z,we[0]+z)}ye=f+y*2,z=ee*ye;for(let Je=0;Je<ge;Je++){const we=W[Je];tt(we[0]+z,we[1]+z,we[2]+z)}}else{for(let ye=0;ye<ge;ye++){const z=W[ye];tt(z[2],z[1],z[0])}for(let ye=0;ye<ge;ye++){const z=W[ye];tt(z[0]+ee*f,z[1]+ee*f,z[2]+ee*f)}}n.addGroup(ve,i.length/3-ve,0)}function Se(){const ve=i.length/3;let ye=0;Pe($,ye),ye+=$.length;for(let z=0,Je=F.length;z<Je;z++){const we=F[z];Pe(we,ye),ye+=we.length}n.addGroup(ve,i.length/3-ve,1)}function Pe(ve,ye){let z=ve.length;for(;--z>=0;){const Je=z;let we=z-1;we<0&&(we=ve.length-1);for(let He=0,Ce=f+y*2;He<Ce;He++){const st=ee*He,De=ee*(He+1),B=ye+Je+st,P=ye+we+st,te=ye+we+De,he=ye+Je+De;lt(B,P,te,he)}}}function Me(ve,ye,z){u.push(ve),u.push(ye),u.push(z)}function tt(ve,ye,z){it(ve),it(ye),it(z);const Je=i.length/3,we=E.generateTopUV(n,i,Je-3,Je-2,Je-1);pt(we[0]),pt(we[1]),pt(we[2])}function lt(ve,ye,z,Je){it(ve),it(ye),it(Je),it(ye),it(z),it(Je);const we=i.length/3,He=E.generateSideWallUV(n,i,we-6,we-3,we-2,we-1);pt(He[0]),pt(He[1]),pt(He[3]),pt(He[1]),pt(He[2]),pt(He[3])}function it(ve){i.push(u[ve*3+0]),i.push(u[ve*3+1]),i.push(u[ve*3+2])}function pt(ve){s.push(ve.x),s.push(ve.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return $1(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,a=e.shapes.length;s<a;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new sh[i.type]().fromJSON(i)),new Lh(n,e.options)}}const Q1={generateTopUV:function(r,e,t,n,i){const s=e[t*3],a=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],f=e[i*3+1];return[new ue(s,a),new ue(c,u),new ue(h,f)]},generateSideWallUV:function(r,e,t,n,i,s){const a=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],f=e[n*3+1],p=e[n*3+2],m=e[i*3],g=e[i*3+1],x=e[i*3+2],M=e[s*3],y=e[s*3+1],_=e[s*3+2];return Math.abs(c-f)<Math.abs(a-h)?[new ue(a,1-u),new ue(h,1-p),new ue(m,1-x),new ue(M,1-_)]:[new ue(c,1-u),new ue(f,1-p),new ue(g,1-x),new ue(y,1-_)]}};function $1(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Dh extends $r{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Dh(e.radius,e.detail)}}class vl extends $r{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new vl(e.radius,e.detail)}}class es extends yt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,a=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,f=u+1,p=e/c,m=t/u,g=[],x=[],M=[],y=[];for(let _=0;_<f;_++){const E=_*m-a;for(let w=0;w<h;w++){const T=w*p-s;x.push(T,-E,0),M.push(0,0,1),y.push(w/c),y.push(1-_/u)}}for(let _=0;_<u;_++)for(let E=0;E<c;E++){const w=E+h*_,T=E+h*(_+1),L=E+1+h*(_+1),R=E+1+h*_;g.push(w,T,R),g.push(T,L,R)}this.setIndex(g),this.setAttribute("position",new Ke(x,3)),this.setAttribute("normal",new Ke(M,3)),this.setAttribute("uv",new Ke(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new es(e.width,e.height,e.widthSegments,e.heightSegments)}}class Uh extends yt{constructor(e=.5,t=1,n=32,i=1,s=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],f=[];let p=e;const m=(t-e)/i,g=new I,x=new ue;for(let M=0;M<=i;M++){for(let y=0;y<=n;y++){const _=s+y/n*a;g.x=p*Math.cos(_),g.y=p*Math.sin(_),u.push(g.x,g.y,g.z),h.push(0,0,1),x.x=(g.x/t+1)/2,x.y=(g.y/t+1)/2,f.push(x.x,x.y)}p+=m}for(let M=0;M<i;M++){const y=M*(n+1);for(let _=0;_<n;_++){const E=_+y,w=E,T=E+n+1,L=E+n+2,R=E+1;c.push(w,T,R),c.push(T,L,R)}}this.setIndex(c),this.setAttribute("position",new Ke(u,3)),this.setAttribute("normal",new Ke(h,3)),this.setAttribute("uv",new Ke(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Uh(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Nh extends yt{constructor(e=new ks([new ue(0,.5),new ue(-.5,-.5),new ue(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],a=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let f=0;f<e.length;f++)h(e[f]),this.addGroup(c,u,f),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Ke(i,3)),this.setAttribute("normal",new Ke(s,3)),this.setAttribute("uv",new Ke(a,2));function h(f){const p=i.length/3,m=f.extractPoints(t);let g=m.shape;const x=m.holes;Qi.isClockWise(g)===!1&&(g=g.reverse());for(let y=0,_=x.length;y<_;y++){const E=x[y];Qi.isClockWise(E)===!0&&(x[y]=E.reverse())}const M=Qi.triangulateShape(g,x);for(let y=0,_=x.length;y<_;y++){const E=x[y];g=g.concat(E)}for(let y=0,_=g.length;y<_;y++){const E=g[y];i.push(E.x,E.y,0),s.push(0,0,1),a.push(E.x,E.y)}for(let y=0,_=M.length;y<_;y++){const E=M[y],w=E[0]+p,T=E[1]+p,L=E[2]+p;n.push(w,T,L),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return ew(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const a=t[e.shapes[i]];n.push(a)}return new Nh(n,e.curveSegments)}}function ew(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class _l extends yt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,a=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:a,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(a+c,Math.PI);let h=0;const f=[],p=new I,m=new I,g=[],x=[],M=[],y=[];for(let _=0;_<=n;_++){const E=[],w=_/n;let T=0;_===0&&a===0?T=.5/t:_===n&&u===Math.PI&&(T=-.5/t);for(let L=0;L<=t;L++){const R=L/t;p.x=-e*Math.cos(i+R*s)*Math.sin(a+w*c),p.y=e*Math.cos(a+w*c),p.z=e*Math.sin(i+R*s)*Math.sin(a+w*c),x.push(p.x,p.y,p.z),m.copy(p).normalize(),M.push(m.x,m.y,m.z),y.push(R+T,1-w),E.push(h++)}f.push(E)}for(let _=0;_<n;_++)for(let E=0;E<t;E++){const w=f[_][E+1],T=f[_][E],L=f[_+1][E],R=f[_+1][E+1];(_!==0||a>0)&&g.push(w,T,R),(_!==n-1||u<Math.PI)&&g.push(T,L,R)}this.setIndex(g),this.setAttribute("position",new Ke(x,3)),this.setAttribute("normal",new Ke(M,3)),this.setAttribute("uv",new Ke(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new _l(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Fh extends $r{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Fh(e.radius,e.detail)}}class Oh extends yt{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const a=[],c=[],u=[],h=[],f=new I,p=new I,m=new I;for(let g=0;g<=n;g++)for(let x=0;x<=i;x++){const M=x/i*s,y=g/n*Math.PI*2;p.x=(e+t*Math.cos(y))*Math.cos(M),p.y=(e+t*Math.cos(y))*Math.sin(M),p.z=t*Math.sin(y),c.push(p.x,p.y,p.z),f.x=e*Math.cos(M),f.y=e*Math.sin(M),m.subVectors(p,f).normalize(),u.push(m.x,m.y,m.z),h.push(x/i),h.push(g/n)}for(let g=1;g<=n;g++)for(let x=1;x<=i;x++){const M=(i+1)*g+x-1,y=(i+1)*(g-1)+x-1,_=(i+1)*(g-1)+x,E=(i+1)*g+x;a.push(M,y,E),a.push(y,_,E)}this.setIndex(a),this.setAttribute("position",new Ke(c,3)),this.setAttribute("normal",new Ke(u,3)),this.setAttribute("uv",new Ke(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Oh(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Bh extends yt{constructor(e=1,t=.4,n=64,i=8,s=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:a},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],f=[],p=new I,m=new I,g=new I,x=new I,M=new I,y=new I,_=new I;for(let w=0;w<=n;++w){const T=w/n*s*Math.PI*2;E(T,s,a,e,g),E(T+.01,s,a,e,x),y.subVectors(x,g),_.addVectors(x,g),M.crossVectors(y,_),_.crossVectors(M,y),M.normalize(),_.normalize();for(let L=0;L<=i;++L){const R=L/i*Math.PI*2,U=-t*Math.cos(R),N=t*Math.sin(R);p.x=g.x+(U*_.x+N*M.x),p.y=g.y+(U*_.y+N*M.y),p.z=g.z+(U*_.z+N*M.z),u.push(p.x,p.y,p.z),m.subVectors(p,g).normalize(),h.push(m.x,m.y,m.z),f.push(w/n),f.push(L/i)}}for(let w=1;w<=n;w++)for(let T=1;T<=i;T++){const L=(i+1)*(w-1)+(T-1),R=(i+1)*w+(T-1),U=(i+1)*w+T,N=(i+1)*(w-1)+T;c.push(L,R,N),c.push(R,U,N)}this.setIndex(c),this.setAttribute("position",new Ke(u,3)),this.setAttribute("normal",new Ke(h,3)),this.setAttribute("uv",new Ke(f,2));function E(w,T,L,R,U){const N=Math.cos(w),C=Math.sin(w),A=L/T*w,F=Math.cos(A);U.x=R*(2+F)*.5*N,U.y=R*(2+F)*C*.5,U.z=R*Math.sin(A)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Bh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class zh extends yt{constructor(e=new Kp(new I(-1,-1,0),new I(-1,1,0),new I(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const a=e.computeFrenetFrames(t,s);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const c=new I,u=new I,h=new ue;let f=new I;const p=[],m=[],g=[],x=[];M(),this.setIndex(x),this.setAttribute("position",new Ke(p,3)),this.setAttribute("normal",new Ke(m,3)),this.setAttribute("uv",new Ke(g,2));function M(){for(let w=0;w<t;w++)y(w);y(s===!1?t:0),E(),_()}function y(w){f=e.getPointAt(w/t,f);const T=a.normals[w],L=a.binormals[w];for(let R=0;R<=i;R++){const U=R/i*Math.PI*2,N=Math.sin(U),C=-Math.cos(U);u.x=C*T.x+N*L.x,u.y=C*T.y+N*L.y,u.z=C*T.z+N*L.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=f.x+n*u.x,c.y=f.y+n*u.y,c.z=f.z+n*u.z,p.push(c.x,c.y,c.z)}}function _(){for(let w=1;w<=t;w++)for(let T=1;T<=i;T++){const L=(i+1)*(w-1)+(T-1),R=(i+1)*w+(T-1),U=(i+1)*w+T,N=(i+1)*(w-1)+T;x.push(L,R,N),x.push(R,U,N)}}function E(){for(let w=0;w<=t;w++)for(let T=0;T<=i;T++)h.x=w/t,h.y=T/i,g.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new zh(new sh[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Cx extends yt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new I,s=new I;if(e.index!==null){const a=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,f=u.length;h<f;++h){const p=u[h],m=p.start,g=p.count;for(let x=m,M=m+g;x<M;x+=3)for(let y=0;y<3;y++){const _=c.getX(x+y),E=c.getX(x+(y+1)%3);i.fromBufferAttribute(a,_),s.fromBufferAttribute(a,E),L0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const a=e.attributes.position;for(let c=0,u=a.count/3;c<u;c++)for(let h=0;h<3;h++){const f=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(a,f),s.fromBufferAttribute(a,p),L0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Ke(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function L0(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var D0=Object.freeze({__proto__:null,BoxGeometry:Qr,CapsuleGeometry:Ch,CircleGeometry:gl,ConeGeometry:Rh,CylinderGeometry:Zo,DodecahedronGeometry:Ph,EdgesGeometry:Ex,ExtrudeGeometry:Lh,IcosahedronGeometry:Dh,LatheGeometry:ml,OctahedronGeometry:vl,PlaneGeometry:es,PolyhedronGeometry:$r,RingGeometry:Uh,ShapeGeometry:Nh,SphereGeometry:_l,TetrahedronGeometry:Fh,TorusGeometry:Oh,TorusKnotGeometry:Bh,TubeGeometry:zh,WireframeGeometry:Cx});class Rx extends On{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ie(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Px extends ii{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class kh extends On{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Ie(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ie(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Kr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Yt,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Ix extends kh{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ue(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return mt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ie(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ie(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ie(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Lx extends On{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ie(16777215),this.specular=new Ie(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ie(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Kr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Yt,this.combine=cl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Dx extends On{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ie(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ie(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Kr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Ux extends On{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Kr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Nx extends On{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ie(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ie(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Kr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Yt,this.combine=cl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class $p extends On{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Y_,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class em extends On{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class Fx extends On{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ie(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Kr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Ox extends Xn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Ns(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function Bx(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function zx(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function xp(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,a=0;a!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[a++]=r[c+u]}return i}function tm(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let a=s[n];if(a!==void 0)if(Array.isArray(a))do a=s[n],a!==void 0&&(e.push(s.time),t.push.apply(t,a)),s=r[i++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[n],a!==void 0&&(e.push(s.time),a.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do a=s[n],a!==void 0&&(e.push(s.time),t.push(a)),s=r[i++];while(s!==void 0)}function tw(r,e,t,n,i=30){const s=r.clone();s.name=e;const a=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],f=h.getValueSize(),p=[],m=[];for(let g=0;g<h.times.length;++g){const x=h.times[g]*i;if(!(x<t||x>=n)){p.push(h.times[g]);for(let M=0;M<f;++M)m.push(h.values[g*f+M])}}p.length!==0&&(h.times=Ns(p,h.times.constructor),h.values=Ns(m,h.values.constructor),a.push(h))}s.tracks=a;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function nw(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let a=0;a<i;++a){const c=t.tracks[a],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===u});if(h===void 0)continue;let f=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);let m=0;const g=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=g/3);const x=c.times.length-1;let M;if(s<=c.times[0]){const _=f,E=p-f;M=c.values.slice(_,E)}else if(s>=c.times[x]){const _=x*p+f,E=_+p-f;M=c.values.slice(_,E)}else{const _=c.createInterpolant(),E=f,w=p-f;_.evaluate(s),M=_.resultBuffer.slice(E,w)}u==="quaternion"&&new pn().fromArray(M).normalize().conjugate().toArray(M);const y=h.times.length;for(let _=0;_<y;++_){const E=_*g+m;if(u==="quaternion")pn.multiplyQuaternionsFlat(h.values,E,M,0,h.values,E);else{const w=g-m*2;for(let T=0;T<w;++T)h.values[E+T]-=M[T]}}}return r.blendMode=zp,r}const iw={convertArray:Ns,isTypedArray:Bx,getKeyframeOrder:zx,sortedArray:xp,flattenJSON:tm,subclip:tw,makeClipAdditive:nw};class xl{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}a=n,n=0;break n}break e}for(;n<a;){const c=n+a>>>1;e<t[c]?a=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let a=0;a!==i;++a)t[a]=n[s+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class kx extends xl{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ls,endingEnd:Ls}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,a=e+1,c=i[s],u=i[a];if(c===void 0)switch(this.getSettings_().endingStart){case Ds:s=e,c=2*t-n;break;case Za:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case Ds:a=e,u=2*n-t;break;case Za:a=1,u=n+i[1]-i[0];break;default:a=e-1,u=t}const h=(n-t)*.5,f=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*f,this._offsetNext=a*f}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,g=this._weightNext,x=(n-t)/(i-t),M=x*x,y=M*x,_=-m*y+2*m*M-m*x,E=(1+m)*y+(-1.5-2*m)*M+(-.5+m)*x+1,w=(-1-g)*y+(1.5+g)*M+.5*x,T=g*y-g*M;for(let L=0;L!==c;++L)s[L]=_*a[f+L]+E*a[h+L]+w*a[u+L]+T*a[p+L];return s}}class nm extends xl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=(n-t)/(i-t),p=1-f;for(let m=0;m!==c;++m)s[m]=a[h+m]*p+a[u+m]*f;return s}}class Vx extends xl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Bi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ns(t,this.TimeBufferType),this.values=Ns(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Ns(e.times,Array),values:Ns(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Vx(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new nm(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new kx(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ya:t=this.InterpolantFactoryMethodDiscrete;break;case nh:t=this.InterpolantFactoryMethodLinear;break;case vu:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ya;case this.InterpolantFactoryMethodLinear:return nh;case this.InterpolantFactoryMethodSmooth:return vu}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,a=i-1;for(;s!==i&&n[s]<e;)++s;for(;a!==-1&&n[a]>t;)--a;if(++a,s!==0||a!==i){s>=a&&(a=Math.max(a,1),s=a-1);const c=this.getValueSize();this.times=n.slice(s,a),this.values=this.values.slice(s*c,a*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(a!==null&&a>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,a),e=!1;break}a=u}if(i!==void 0&&Bx(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===vu,s=e.length-1;let a=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],f=e[c+1];if(h!==f&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,g=p+n;for(let x=0;x!==n;++x){const M=t[p+x];if(M!==t[m+x]||M!==t[g+x]){u=!0;break}}}if(u){if(c!==a){e[a]=e[c];const p=c*n,m=a*n;for(let g=0;g!==n;++g)t[m+g]=t[p+g]}++a}}if(s>0){e[a]=e[s];for(let c=s*n,u=a*n,h=0;h!==n;++h)t[u+h]=t[c+h];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Bi.prototype.TimeBufferType=Float32Array;Bi.prototype.ValueBufferType=Float32Array;Bi.prototype.DefaultInterpolation=nh;class Zs extends Bi{constructor(e,t,n){super(e,t,n)}}Zs.prototype.ValueTypeName="bool";Zs.prototype.ValueBufferType=Array;Zs.prototype.DefaultInterpolation=Ya;Zs.prototype.InterpolantFactoryMethodLinear=void 0;Zs.prototype.InterpolantFactoryMethodSmooth=void 0;class im extends Bi{}im.prototype.ValueTypeName="color";class rl extends Bi{}rl.prototype.ValueTypeName="number";class Hx extends xl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let f=h+c;h!==f;h+=4)pn.slerpFlat(s,0,a,h-c,a,h,u);return s}}class yl extends Bi{InterpolantFactoryMethodLinear(e){return new Hx(this.times,this.values,this.getValueSize(),e)}}yl.prototype.ValueTypeName="quaternion";yl.prototype.InterpolantFactoryMethodSmooth=void 0;class Js extends Bi{constructor(e,t,n){super(e,t,n)}}Js.prototype.ValueTypeName="string";Js.prototype.ValueBufferType=Array;Js.prototype.DefaultInterpolation=Ya;Js.prototype.InterpolantFactoryMethodLinear=void 0;Js.prototype.InterpolantFactoryMethodSmooth=void 0;class sl extends Bi{}sl.prototype.ValueTypeName="vector";class ol{constructor(e="",t=-1,n=[],i=_h){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=fi(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,c=n.length;a!==c;++a)t.push(sw(n[a]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,a=n.length;s!==a;++s)t.push(Bi.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,a=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const f=zx(u);u=xp(u,1,f),h=xp(h,1,f),!i&&u[0]===0&&(u.push(s),h.push(h[0])),a.push(new rl(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.name.match(s);if(f&&f.length>1){const p=f[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const a=[];for(const c in i)a.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,g,x,M){if(g.length!==0){const y=[],_=[];tm(g,y,_,x),y.length!==0&&M.push(new p(m,y,_))}},i=[],s=e.name||"default",a=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const g={};let x;for(x=0;x<m.length;x++)if(m[x].morphTargets)for(let M=0;M<m[x].morphTargets.length;M++)g[m[x].morphTargets[M]]=-1;for(const M in g){const y=[],_=[];for(let E=0;E!==m[x].morphTargets.length;++E){const w=m[x];y.push(w.time),_.push(w.morphTarget===M?1:0)}i.push(new rl(".morphTargetInfluence["+M+"]",y,_))}u=g.length*a}else{const g=".bones["+t[p].name+"]";n(sl,g+".position",m,"pos",i),n(yl,g+".quaternion",m,"rot",i),n(sl,g+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function rw(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return rl;case"vector":case"vector2":case"vector3":case"vector4":return sl;case"color":return im;case"quaternion":return yl;case"bool":case"boolean":return Zs;case"string":return Js}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function sw(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=rw(r.type);if(r.times===void 0){const t=[],n=[];tm(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const vr={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class rm{constructor(e,t,n){const i=this;let s=!1,a=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){c++,s===!1&&i.onStart!==void 0&&i.onStart(f,a,c),s=!0},this.itemEnd=function(f){a++,i.onProgress!==void 0&&i.onProgress(f,a,c),a===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(f){i.onError!==void 0&&i.onError(f)},this.resolveURL=function(f){return u?u(f):f},this.setURLModifier=function(f){return u=f,this},this.addHandler=function(f,p){return h.push(f,p),this},this.removeHandler=function(f){const p=h.indexOf(f);return p!==-1&&h.splice(p,2),this},this.getHandler=function(f){for(let p=0,m=h.length;p<m;p+=2){const g=h[p],x=h[p+1];if(g.global&&(g.lastIndex=0),g.test(f))return x}return null}}}const Gx=new rm;class ri{constructor(e){this.manager=e!==void 0?e:Gx,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}ri.DEFAULT_MATERIAL_NAME="__DEFAULT";const pr={};class ow extends Error{constructor(e,t){super(e),this.response=t}}class Mr extends ri{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=vr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(pr[e]!==void 0){pr[e].push({onLoad:t,onProgress:n,onError:i});return}pr[e]=[],pr[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(a).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const f=pr[e],p=h.body.getReader(),m=h.headers.get("X-File-Size")||h.headers.get("Content-Length"),g=m?parseInt(m):0,x=g!==0;let M=0;const y=new ReadableStream({start(_){E();function E(){p.read().then(({done:w,value:T})=>{if(w)_.close();else{M+=T.byteLength;const L=new ProgressEvent("progress",{lengthComputable:x,loaded:M,total:g});for(let R=0,U=f.length;R<U;R++){const N=f[R];N.onProgress&&N.onProgress(L)}_.enqueue(T),E()}},w=>{_.error(w)})}}});return new Response(y)}else throw new ow(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(f=>new DOMParser().parseFromString(f,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,g=new TextDecoder(m);return h.arrayBuffer().then(x=>g.decode(x))}}}).then(h=>{vr.add(e,h);const f=pr[e];delete pr[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onLoad&&g.onLoad(h)}}).catch(h=>{const f=pr[e];if(f===void 0)throw this.manager.itemError(e),h;delete pr[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onError&&g.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class aw extends ri{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Mr(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=ol.parse(e[n]);t.push(i)}return t}}class lw extends ri{constructor(e){super(e)}load(e,t,n,i){const s=this,a=[],c=new Th,u=new Mr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function f(p){u.load(e[p],function(m){const g=s.parse(m,!0);a[p]={width:g.width,height:g.height,format:g.format,mipmaps:g.mipmaps},h+=1,h===6&&(g.mipmapCount===1&&(c.minFilter=Kt),c.image=a,c.format=g.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)f(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const g=m.mipmaps.length/m.mipmapCount;for(let x=0;x<g;x++){a[x]={mipmaps:[]};for(let M=0;M<m.mipmapCount;M++)a[x].mipmaps.push(m.mipmaps[x*m.mipmapCount+M]),a[x].format=m.format,a[x].width=m.width,a[x].height=m.height}c.image=a}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=Kt),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class al extends ri{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=vr.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const c=$a("img");function u(){f(),vr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){f(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function f(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class cw extends ri{constructor(e){super(e)}load(e,t,n,i){const s=new fl;s.colorSpace=ei;const a=new al(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let c=0;function u(h){a.load(e[h],function(f){s.images[h]=f,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class uw extends ri{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Ki,c=new Mr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(f){if(i!==void 0)i(f);else{console.error(f);return}}h.image!==void 0?a.image=h.image:h.data!==void 0&&(a.image.width=h.width,a.image.height=h.height,a.image.data=h.data),a.wrapS=h.wrapS!==void 0?h.wrapS:Ti,a.wrapT=h.wrapT!==void 0?h.wrapT:Ti,a.magFilter=h.magFilter!==void 0?h.magFilter:Kt,a.minFilter=h.minFilter!==void 0?h.minFilter:Kt,a.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0&&(a.colorSpace=h.colorSpace),h.flipY!==void 0&&(a.flipY=h.flipY),h.format!==void 0&&(a.format=h.format),h.type!==void 0&&(a.type=h.type),h.mipmaps!==void 0&&(a.mipmaps=h.mipmaps,a.minFilter=Zi),h.mipmapCount===1&&(a.minFilter=Kt),h.generateMipmaps!==void 0&&(a.generateMipmaps=h.generateMipmaps),a.needsUpdate=!0,t&&t(a,h)},n,i),a}}class Fn extends ri{constructor(e){super(e)}load(e,t,n,i){const s=new tn,a=new al(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class ts extends Pt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ie(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class Wx extends ts{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Pt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ie(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Id=new ft,U0=new I,N0=new I;class sm{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ue(512,512),this.map=null,this.mapPass=null,this.matrix=new ft,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new pl,this._frameExtents=new ue(1,1),this._viewportCount=1,this._viewports=[new Dt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;U0.setFromMatrixPosition(e.matrixWorld),t.position.copy(U0),N0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(N0),t.updateMatrixWorld(),Id.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Id),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Id)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class hw extends sm{constructor(){super(new en(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Ho*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Xx extends ts{constructor(e,t,n=0,i=Math.PI/3,s=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Pt.DEFAULT_UP),this.updateMatrix(),this.target=new Pt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=a,this.map=null,this.shadow=new hw}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const F0=new ft,ba=new I,Ld=new I;class fw extends sm{constructor(){super(new en(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ue(4,2),this._viewportCount=6,this._viewports=[new Dt(2,1,1,1),new Dt(0,1,1,1),new Dt(3,1,1,1),new Dt(1,1,1,1),new Dt(3,0,1,1),new Dt(1,0,1,1)],this._cubeDirections=[new I(1,0,0),new I(-1,0,0),new I(0,0,1),new I(0,0,-1),new I(0,1,0),new I(0,-1,0)],this._cubeUps=[new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,0,1),new I(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),ba.setFromMatrixPosition(e.matrixWorld),n.position.copy(ba),Ld.copy(n.position),Ld.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Ld),n.updateMatrixWorld(),i.makeTranslation(-ba.x,-ba.y,-ba.z),F0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(F0)}}class jx extends ts{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new fw}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class qr extends qo{constructor(e=-1,t=1,n=1,i=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,a=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,a=s+h*this.view.width,c-=f*this.view.offsetY,u=c-f*this.view.height}this.projectionMatrix.makeOrthographic(s,a,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class dw extends sm{constructor(){super(new qr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class qx extends ts{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Pt.DEFAULT_UP),this.updateMatrix(),this.target=new Pt,this.shadow=new dw}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Yx extends ts{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Zx extends ts{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Jx{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new I)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*s),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*s)),t.addScaledVector(a[6],.315392*(3*s*s-1)),t.addScaledVector(a[7],1.092548*(n*s)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*s),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*s),t.addScaledVector(a[6],.743125*s*s-.247708),t.addScaledVector(a[7],2*.429043*n*s),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class Kx extends ts{constructor(e=new Jx,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Vh extends ri{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,a=new Mr(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Ie().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(i.dispersion=e.dispersion),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const a=e.uniforms[s];switch(i.uniforms[s]={},a.type){case"t":i.uniforms[s].value=n(a.value);break;case"c":i.uniforms[s].value=new Ie().setHex(a.value);break;case"v2":i.uniforms[s].value=new ue().fromArray(a.value);break;case"v3":i.uniforms[s].value=new I().fromArray(a.value);break;case"v4":i.uniforms[s].value=new Dt().fromArray(a.value);break;case"m3":i.uniforms[s].value=new _t().fromArray(a.value);break;case"m4":i.uniforms[s].value=new ft().fromArray(a.value);break;default:i.uniforms[s].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new ue().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ue().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return Vh.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:Rx,SpriteMaterial:Wp,RawShaderMaterial:Px,ShaderMaterial:ii,PointsMaterial:jp,MeshPhysicalMaterial:Ix,MeshStandardMaterial:kh,MeshPhongMaterial:Lx,MeshToonMaterial:Dx,MeshNormalMaterial:Ux,MeshLambertMaterial:Nx,MeshDepthMaterial:$p,MeshDistanceMaterial:em,MeshBasicMaterial:er,MeshMatcapMaterial:Fx,LineDashedMaterial:Ox,LineBasicMaterial:Xn,Material:On};return new t[e]}}class yp{static decodeText(e){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Qx extends yt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class $x extends ri{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Mr(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(g,x){if(t[x]!==void 0)return t[x];const y=g.interleavedBuffers[x],_=s(g,y.buffer),E=Oo(y.type,_),w=new wh(E,y.stride);return w.uuid=y.uuid,t[x]=w,w}function s(g,x){if(n[x]!==void 0)return n[x];const y=g.arrayBuffers[x],_=new Uint32Array(y).buffer;return n[x]=_,_}const a=e.isInstancedBufferGeometry?new Qx:new yt,c=e.data.index;if(c!==void 0){const g=Oo(c.type,c.array);a.setIndex(new Ht(g,1))}const u=e.data.attributes;for(const g in u){const x=u[g];let M;if(x.isInterleavedBufferAttribute){const y=i(e.data,x.data);M=new js(y,x.itemSize,x.offset,x.normalized)}else{const y=Oo(x.type,x.array),_=x.isInstancedBufferAttribute?Wo:Ht;M=new _(y,x.itemSize,x.normalized)}x.name!==void 0&&(M.name=x.name),x.usage!==void 0&&M.setUsage(x.usage),a.setAttribute(g,M)}const h=e.data.morphAttributes;if(h)for(const g in h){const x=h[g],M=[];for(let y=0,_=x.length;y<_;y++){const E=x[y];let w;if(E.isInterleavedBufferAttribute){const T=i(e.data,E.data);w=new js(T,E.itemSize,E.offset,E.normalized)}else{const T=Oo(E.type,E.array);w=new Ht(T,E.itemSize,E.normalized)}E.name!==void 0&&(w.name=E.name),M.push(w)}a.morphAttributes[g]=M}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let g=0,x=p.length;g!==x;++g){const M=p[g];a.addGroup(M.start,M.count,M.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const g=new I;m.center!==void 0&&g.fromArray(m.center),a.boundingSphere=new Nn(g,m.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class pw extends ri{constructor(e){super(e)}load(e,t,n,i){const s=this,a=this.path===""?yp.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const c=new Mr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const f=h.metadata;if(f===void 0||f.type===void 0||f.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?yp.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new Mr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const a=await s.loadAsync(e,t),c=JSON.parse(a),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,a),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),f=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,f),this.bindLightTargets(h),t!==void 0){let p=!1;for(const m in a)if(a[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,a),u=this.parseObject(e.object,i,c,a,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),this.bindLightTargets(u),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new ks().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,a=e.length;s<a;s++){const c=new Eh().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new $x;for(let s=0,a=e.length;s<a;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in D0?c=D0[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Vh;s.setTextures(t);for(let a=0,c=e.length;a<c;a++){const u=e[a];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=ol.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function a(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return a(f)}else return u.data?{data:Oo(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new rm(t);s=new al(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,f=e.length;h<f;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const g=[];for(let x=0,M=m.length;x<M;x++){const y=m[x],_=c(y);_!==null&&(_ instanceof HTMLImageElement?g.push(_):g.push(new Ki(_.data,_.width,_.height)))}i[p.uuid]=new Us(g)}else{const g=c(p.url);i[p.uuid]=new Us(g)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(a){if(typeof a=="string"){const c=a,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return a.data?{data:Oo(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){i=new al(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,c=e.length;a<c;a++){const u=e[a],h=u.url;if(Array.isArray(h)){const f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p],x=await s(g);x!==null&&(x instanceof HTMLImageElement?f.push(x):f.push(new Ki(x.data,x.width,x.height)))}n[u.uuid]=new Us(f)}else{const f=await s(u.url);n[u.uuid]=new Us(f)}}}return n}parseTextures(e,t){function n(s,a){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),a[s])}const i={};if(e!==void 0)for(let s=0,a=e.length;s<a;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let f;Array.isArray(h)?(f=new fl,h.length===6&&(f.needsUpdate=!0)):(h&&h.data?f=new Ki:f=new tn,h&&(f.needsUpdate=!0)),f.source=u,f.uuid=c.uuid,c.name!==void 0&&(f.name=c.name),c.mapping!==void 0&&(f.mapping=n(c.mapping,mw)),c.channel!==void 0&&(f.channel=c.channel),c.offset!==void 0&&f.offset.fromArray(c.offset),c.repeat!==void 0&&f.repeat.fromArray(c.repeat),c.center!==void 0&&f.center.fromArray(c.center),c.rotation!==void 0&&(f.rotation=c.rotation),c.wrap!==void 0&&(f.wrapS=n(c.wrap[0],O0),f.wrapT=n(c.wrap[1],O0)),c.format!==void 0&&(f.format=c.format),c.internalFormat!==void 0&&(f.internalFormat=c.internalFormat),c.type!==void 0&&(f.type=c.type),c.colorSpace!==void 0&&(f.colorSpace=c.colorSpace),c.minFilter!==void 0&&(f.minFilter=n(c.minFilter,B0)),c.magFilter!==void 0&&(f.magFilter=n(c.magFilter,B0)),c.anisotropy!==void 0&&(f.anisotropy=c.anisotropy),c.flipY!==void 0&&(f.flipY=c.flipY),c.generateMipmaps!==void 0&&(f.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(f.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(f.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(f.compareFunction=c.compareFunction),c.userData!==void 0&&(f.userData=c.userData),i[c.uuid]=f}return i}parseObject(e,t,n,i,s){let a;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const g=[];for(let x=0,M=m.length;x<M;x++){const y=m[x];n[y]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",y),g.push(n[y])}return g}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let f,p;switch(e.type){case"Scene":a=new Mh,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new Ie(e.background):a.background=h(e.background)),e.environment!==void 0&&(a.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new dl(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new Sh(e.fog.color,e.fog.density)),e.fog.name!==""&&(a.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(a.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&a.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(a.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&a.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":a=new en(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new qr(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new Yx(e.color,e.intensity);break;case"DirectionalLight":a=new qx(e.color,e.intensity),a.target=e.target||"";break;case"PointLight":a=new jx(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new Zx(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new Xx(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),a.target=e.target||"";break;case"HemisphereLight":a=new Wx(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new Kx().fromJSON(e);break;case"SkinnedMesh":f=c(e.geometry),p=u(e.material),a=new mx(f,p),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":f=c(e.geometry),p=u(e.material),a=new sn(f,p);break;case"InstancedMesh":f=c(e.geometry),p=u(e.material);const m=e.count,g=e.instanceMatrix,x=e.instanceColor;a=new Yo(f,p,m),a.instanceMatrix=new Wo(new Float32Array(g.array),16),x!==void 0&&(a.instanceColor=new Wo(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":f=c(e.geometry),p=u(e.material),a=new gx(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,p),a.geometry=f,a.perObjectFrustumCulled=e.perObjectFrustumCulled,a.sortObjects=e.sortObjects,a._drawRanges=e.drawRanges,a._reservedRanges=e.reservedRanges,a._visibility=e.visibility,a._active=e.active,a._bounds=e.bounds.map(M=>{const y=new Wn;y.min.fromArray(M.boxMin),y.max.fromArray(M.boxMax);const _=new Nn;return _.radius=M.sphereRadius,_.center.fromArray(M.sphereCenter),{boxInitialized:M.boxInitialized,box:y,sphereInitialized:M.sphereInitialized,sphere:_}}),a._maxInstanceCount=e.maxInstanceCount,a._maxVertexCount=e.maxVertexCount,a._maxIndexCount=e.maxIndexCount,a._geometryInitialized=e.geometryInitialized,a._geometryCount=e.geometryCount,a._matricesTexture=h(e.matricesTexture.uuid),e.colorsTexture!==void 0&&(a._colorsTexture=h(e.colorsTexture.uuid));break;case"LOD":a=new px;break;case"Line":a=new Zr(c(e.geometry),u(e.material));break;case"LineLoop":a=new vx(c(e.geometry),u(e.material));break;case"LineSegments":a=new tr(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":a=new _x(c(e.geometry),u(e.material));break;case"Sprite":a=new dx(u(e.material));break;case"Group":a=new Bo;break;case"Bone":a=new Xp;break;default:a=new Pt}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.up!==void 0&&a.up.fromArray(e.up),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(a.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let g=0;g<m.length;g++)a.add(this.parseObject(m[g],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let g=0;g<m.length;g++){const x=m[g];a.animations.push(s[x])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const m=e.levels;for(let g=0;g<m.length;g++){const x=m[g],M=a.getObjectByProperty("uuid",x.object);M!==void 0&&a.addLevel(M,x.distance,x.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,i=e.getObjectByProperty("uuid",n);i!==void 0?t.target=i:t.target=new Pt}})}}const mw={UVMapping:hh,CubeReflectionMapping:yr,CubeRefractionMapping:Yr,EquirectangularReflectionMapping:Wa,EquirectangularRefractionMapping:Xa,CubeUVReflectionMapping:jo},O0={RepeatWrapping:ja,ClampToEdgeWrapping:Ti,MirroredRepeatWrapping:qa},B0={NearestFilter:on,NearestMipmapNearestFilter:Rp,NearestMipmapLinearFilter:Fo,LinearFilter:Kt,LinearMipmapNearestFilter:Na,LinearMipmapLinearFilter:Zi};class gw extends ri{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=vr.get(e);if(a!==void 0){if(s.manager.itemStart(e),a.then){a.then(h=>{t&&t(h),s.manager.itemEnd(e)}).catch(h=>{i&&i(h)});return}return setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(e,c).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(h){return vr.add(e,h),t&&t(h),s.manager.itemEnd(e),h}).catch(function(h){i&&i(h),vr.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});vr.add(e,u),s.manager.itemStart(e)}}let eu;class om{static getContext(){return eu===void 0&&(eu=new(window.AudioContext||window.webkitAudioContext)),eu}static setContext(e){eu=e}}class vw extends ri{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Mr(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(u){try{const h=u.slice(0);om.getContext().decodeAudioData(h,function(p){t(p)}).catch(c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const z0=new ft,k0=new ft,ys=new ft;class _w{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new en,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new en,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,ys.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,a=t.near*Math.tan(Bs*t.fov*.5)/t.zoom;let c,u;k0.elements[12]=-i,z0.elements[12]=i,c=-a*t.aspect+s,u=a*t.aspect+s,ys.elements[0]=2*t.near/(u-c),ys.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(ys),c=-a*t.aspect-s,u=a*t.aspect-s,ys.elements[0]=2*t.near/(u-c),ys.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(ys)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(k0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(z0)}}class ey extends en{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class am{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=V0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=V0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function V0(){return performance.now()}const Ss=new I,H0=new pn,xw=new I,Ms=new I;class yw extends Pt{constructor(){super(),this.type="AudioListener",this.context=om.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new am}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ss,H0,xw),Ms.set(0,0,-1).applyQuaternion(H0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Ss.x,i),t.positionY.linearRampToValueAtTime(Ss.y,i),t.positionZ.linearRampToValueAtTime(Ss.z,i),t.forwardX.linearRampToValueAtTime(Ms.x,i),t.forwardY.linearRampToValueAtTime(Ms.y,i),t.forwardZ.linearRampToValueAtTime(Ms.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Ss.x,Ss.y,Ss.z),t.setOrientation(Ms.x,Ms.y,Ms.z,n.x,n.y,n.z)}}class ty extends Pt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const ws=new I,G0=new pn,Sw=new I,Es=new I;class Mw extends ty{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ws,G0,Sw),Es.set(0,0,1).applyQuaternion(G0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ws.x,n),t.positionY.linearRampToValueAtTime(ws.y,n),t.positionZ.linearRampToValueAtTime(ws.z,n),t.orientationX.linearRampToValueAtTime(Es.x,n),t.orientationY.linearRampToValueAtTime(Es.y,n),t.orientationZ.linearRampToValueAtTime(Es.z,n)}else t.setPosition(ws.x,ws.y,ws.z),t.setOrientation(Es.x,Es.y,Es.z)}}class ww{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class ny{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,a;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let c=0;c!==i;++c)n[s+c]=n[c];a=t}else{a+=t;const c=t/a;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,a=i;s!==a;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let a=0;a!==s;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){pn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const a=this._workIndex*s;pn.multiplyQuaternionsFlat(e,a,e,t,e,n),pn.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,s){const a=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*a+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let a=0;a!==s;++a){const c=t+a;e[c]=e[c]+e[n+a]*i}}}const lm="\\[\\]\\.:\\/",Ew=new RegExp("["+lm+"]","g"),cm="[^"+lm+"]",Tw="[^"+lm.replace("\\.","")+"]",bw=/((?:WC+[\/:])*)/.source.replace("WC",cm),Aw=/(WCOD+)?/.source.replace("WCOD",Tw),Cw=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",cm),Rw=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",cm),Pw=new RegExp("^"+bw+Aw+Cw+Rw+"$"),Iw=["material","materials","bones","map"];class Lw{constructor(e,t,n){const i=n||Ft.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Ft{constructor(e,t,n){this.path=t,this.parsedPath=n||Ft.parseTrackName(t),this.node=Ft.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Ft.Composite(e,t,n):new Ft(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Ew,"")}static parseTrackName(e){const t=Pw.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);Iw.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let a=0;a<s.length;a++){const c=s[a];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=Ft.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===h){h=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const a=e[i];if(a===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?c=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(u=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ft.Composite=Lw;Ft.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Ft.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Ft.prototype.GetterByBindingType=[Ft.prototype._getValue_direct,Ft.prototype._getValue_array,Ft.prototype._getValue_arrayElement,Ft.prototype._getValue_toArray];Ft.prototype.SetterByBindingTypeAndVersioning=[[Ft.prototype._setValue_direct,Ft.prototype._setValue_direct_setNeedsUpdate,Ft.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ft.prototype._setValue_array,Ft.prototype._setValue_array_setNeedsUpdate,Ft.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ft.prototype._setValue_arrayElement,Ft.prototype._setValue_arrayElement_setNeedsUpdate,Ft.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ft.prototype._setValue_fromArray,Ft.prototype._setValue_fromArray_setNeedsUpdate,Ft.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Dw{constructor(){this.isAnimationObjectGroup=!0,this.uuid=fi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,a=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let f=0,p=arguments.length;f!==p;++f){const m=arguments[f],g=m.uuid;let x=t[g];if(x===void 0){x=u++,t[g]=x,e.push(m);for(let M=0,y=a;M!==y;++M)s[M].push(new Ft(m,n[M],i[M]))}else if(x<h){c=e[x];const M=--h,y=e[M];t[y.uuid]=x,e[x]=y,t[g]=M,e[M]=m;for(let _=0,E=a;_!==E;++_){const w=s[_],T=w[M];let L=w[x];w[x]=T,L===void 0&&(L=new Ft(m,n[_],i[_])),w[M]=L}}else e[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let a=0,c=arguments.length;a!==c;++a){const u=arguments[a],h=u.uuid,f=t[h];if(f!==void 0&&f>=s){const p=s++,m=e[p];t[m.uuid]=f,e[f]=m,t[h]=p,e[p]=u;for(let g=0,x=i;g!==x;++g){const M=n[g],y=M[p],_=M[f];M[f]=y,M[p]=_}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,a=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],f=h.uuid,p=t[f];if(p!==void 0)if(delete t[f],p<s){const m=--s,g=e[m],x=--a,M=e[x];t[g.uuid]=p,e[p]=g,t[M.uuid]=m,e[m]=M,e.pop();for(let y=0,_=i;y!==_;++y){const E=n[y],w=E[m],T=E[x];E[p]=w,E[m]=T,E.pop()}}else{const m=--a,g=e[m];m>0&&(t[g.uuid]=p),e[p]=g,e.pop();for(let x=0,M=i;x!==M;++x){const y=n[x];y[p]=y[m],y.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const a=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,f=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,a.push(e),c.push(t),s.push(p);for(let m=f,g=u.length;m!==g;++m){const x=u[m];p[m]=new Ft(x,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,a=this._bindings,c=a.length-1,u=a[c],h=e[c];t[h]=n,a[n]=u,a.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class iy{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,a=s.length,c=new Array(a),u={endingStart:Ls,endingEnd:Ls};for(let h=0;h!==a;++h){const f=s[h].createInterpolant(null);c[h]=f,f.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=j_,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,a=s/i,c=i/s;e.warp(1,a,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,a=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/a,h[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const a=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case zp:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(a),h[f].accumulateAdditive(c);break;case _h:default:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(a),h[f].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const a=n===q_;if(e===0)return s===-1?i:a&&(s&1)===1?t-i:i;if(n===X_){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(a&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Ds,i.endingEnd=Ds):(e?i.endingStart=this.zeroSlopeAtStart?Ds:Ls:i.endingStart=Za,t?i.endingEnd=this.zeroSlopeAtEnd?Ds:Ls:i.endingEnd=Za)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const c=a.parameterPositions,u=a.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const Uw=new Float32Array(1);class Nw extends $i{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,a=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let f=h[u];f===void 0&&(f={},h[u]=f);for(let p=0;p!==s;++p){const m=i[p],g=m.name;let x=f[g];if(x!==void 0)++x.referenceCount,a[p]=x;else{if(x=a[p],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,u,g));continue}const M=t&&t._propertyBindings[p].binding.parsedPath;x=new ny(Ft.create(n,g,M),m.ValueTypeName,m.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,u,g),a[p]=x}c[p].resultBuffer=x.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let a=s[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=a;else{const c=a.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,a=this._actionsByClip,c=a[s],u=c.knownActions,h=u[u.length-1],f=e._byClipCacheIndex;h._byClipCacheIndex=f,u[f]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete a[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,a=this._bindingsByRootAndName,c=a[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new nm(new Float32Array(2),new Float32Array(2),1,Uw),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let a=typeof e=="string"?ol.findByName(i,e):e;const c=a!==null?a.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(a!==null?n=a.blendMode:n=_h),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],a===null&&(a=h._clip)}if(a===null)return null;const f=new iy(this,a,t,n);return this._bindAction(f,h),this._addInactiveAction(f,c,s),f}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?ol.findByName(n,e):e,a=s?s.uuid:e,c=this._actionsByClip[a];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),a=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,a);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const a=s.knownActions;for(let c=0,u=a.length;c!==u;++c){const h=a[c];this._deactivateAction(h);const f=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=f,t[f]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const c=n[a].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const a in s){const c=s[a];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Fw extends xh{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new yh(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Ow extends xh{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTargetArray=!0,this.depth=n,this.texture=new hl(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Dn{constructor(e){this.value=e}clone(){return new Dn(this.value.clone===void 0?this.value:this.value.clone())}}let Bw=0;class zw extends $i{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:Bw++}),this.name="",this.usage=Ka,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let a=0;a<s.length;a++)this.uniforms.push(s[a].clone())}return this}clone(){return new this.constructor().copy(this)}}class kw extends wh{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class Vw{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const W0=new ft;class ry{constructor(e,t,n=0,i=1/0){this.ray=new Ys(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new zs,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return W0.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(W0),this}intersectObject(e,t=!0,n=[]){return Sp(e,this,n,t),n.sort(X0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Sp(e[i],this,n,t);return n.sort(X0),n}}function X0(r,e){return r.distance-e.distance}function Sp(r,e,t,n){let i=!0;if(r.layers.test(e.layers)&&r.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const s=r.children;for(let a=0,c=s.length;a<c;a++)Sp(s[a],e,t,!0)}}class Mp{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=mt(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(mt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class Hw{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}class um{constructor(e,t,n,i){um.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const s=this.elements;return s[0]=e,s[2]=t,s[1]=n,s[3]=i,this}}const j0=new ue;class Gw{constructor(e=new ue(1/0,1/0),t=new ue(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=j0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,j0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const q0=new I,tu=new I;class Ww{constructor(e=new I,t=new I){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){q0.subVectors(e,this.start),tu.subVectors(this.end,this.start);const n=tu.dot(tu);let s=tu.dot(q0)/n;return t&&(s=mt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Y0=new I;class Xw extends Pt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new yt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,c=1,u=32;a<u;a++,c++){const h=a/u*Math.PI*2,f=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(f),Math.sin(f),1)}n.setAttribute("position",new Ke(i,3));const s=new Xn({fog:!1,toneMapped:!1});this.cone=new tr(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Y0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Y0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const kr=new I,nu=new ft,Dd=new ft;class jw extends tr{constructor(e){const t=sy(e),n=new yt,i=[],s=[],a=new Ie(0,0,1),c=new Ie(0,1,0);for(let h=0;h<t.length;h++){const f=t[h];f.parent&&f.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(a.r,a.g,a.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new Ke(i,3)),n.setAttribute("color",new Ke(s,3));const u=new Xn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Dd.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(nu.multiplyMatrices(Dd,c.matrixWorld),kr.setFromMatrixPosition(nu),i.setXYZ(a,kr.x,kr.y,kr.z),nu.multiplyMatrices(Dd,c.parent.matrixWorld),kr.setFromMatrixPosition(nu),i.setXYZ(a+1,kr.x,kr.y,kr.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function sy(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,sy(r.children[t]));return e}class qw extends sn{constructor(e,t,n){const i=new _l(t,4,2),s=new er({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Yw=new I,Z0=new Ie,J0=new Ie;class Zw extends Pt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new vl(t);i.rotateY(Math.PI*.5),this.material=new er({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),a=new Float32Array(s.count*3);i.setAttribute("color",new Ht(a,3)),this.add(new sn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Z0.copy(this.light.color),J0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?Z0:J0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(Yw.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Jw extends tr{constructor(e=10,t=10,n=4473924,i=8947848){n=new Ie(n),i=new Ie(i);const s=t/2,a=e/t,c=e/2,u=[],h=[];for(let m=0,g=0,x=-c;m<=t;m++,x+=a){u.push(-c,0,x,c,0,x),u.push(x,0,-c,x,0,c);const M=m===s?n:i;M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3}const f=new yt;f.setAttribute("position",new Ke(u,3)),f.setAttribute("color",new Ke(h,3));const p=new Xn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Kw extends tr{constructor(e=10,t=16,n=8,i=64,s=4473924,a=8947848){s=new Ie(s),a=new Ie(a);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),g=Math.sin(m)*e,x=Math.cos(m)*e;c.push(0,0,0),c.push(g,0,x);const M=p&1?s:a;u.push(M.r,M.g,M.b),u.push(M.r,M.g,M.b)}for(let p=0;p<n;p++){const m=p&1?s:a,g=e-e/n*p;for(let x=0;x<i;x++){let M=x/i*(Math.PI*2),y=Math.sin(M)*g,_=Math.cos(M)*g;c.push(y,0,_),u.push(m.r,m.g,m.b),M=(x+1)/i*(Math.PI*2),y=Math.sin(M)*g,_=Math.cos(M)*g,c.push(y,0,_),u.push(m.r,m.g,m.b)}}const h=new yt;h.setAttribute("position",new Ke(c,3)),h.setAttribute("color",new Ke(u,3));const f=new Xn({vertexColors:!0,toneMapped:!1});super(h,f),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const K0=new I,iu=new I,Q0=new I;class Qw extends Pt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new yt;i.setAttribute("position",new Ke([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Xn({fog:!1,toneMapped:!1});this.lightPlane=new Zr(i,s),this.add(this.lightPlane),i=new yt,i.setAttribute("position",new Ke([0,0,0,0,0,1],3)),this.targetLine=new Zr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),K0.setFromMatrixPosition(this.light.matrixWorld),iu.setFromMatrixPosition(this.light.target.matrixWorld),Q0.subVectors(iu,K0),this.lightPlane.lookAt(iu),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(iu),this.targetLine.scale.z=Q0.length()}}const ru=new I,$t=new qo;class $w extends tr{constructor(e){const t=new yt,n=new Xn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],a={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,M){u(x),u(M)}function u(x){i.push(0,0,0),s.push(0,0,0),a[x]===void 0&&(a[x]=[]),a[x].push(i.length/3-1)}t.setAttribute("position",new Ke(i,3)),t.setAttribute("color",new Ke(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const h=new Ie(16755200),f=new Ie(16711680),p=new Ie(43775),m=new Ie(16777215),g=new Ie(3355443);this.setColors(h,f,p,m,g)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;$t.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const s=this.camera.coordinateSystem===Ni?-1:0;rn("c",t,e,$t,0,0,s),rn("t",t,e,$t,0,0,1),rn("n1",t,e,$t,-1,-1,s),rn("n2",t,e,$t,n,-1,s),rn("n3",t,e,$t,-1,i,s),rn("n4",t,e,$t,n,i,s),rn("f1",t,e,$t,-1,-1,1),rn("f2",t,e,$t,n,-1,1),rn("f3",t,e,$t,-1,i,1),rn("f4",t,e,$t,n,i,1),rn("u1",t,e,$t,n*.7,i*1.1,s),rn("u2",t,e,$t,-1*.7,i*1.1,s),rn("u3",t,e,$t,0,i*2,s),rn("cf1",t,e,$t,-1,0,1),rn("cf2",t,e,$t,n,0,1),rn("cf3",t,e,$t,0,-1,1),rn("cf4",t,e,$t,0,i,1),rn("cn1",t,e,$t,-1,0,s),rn("cn2",t,e,$t,n,0,s),rn("cn3",t,e,$t,0,-1,s),rn("cn4",t,e,$t,0,i,s),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function rn(r,e,t,n,i,s,a){ru.set(i,s,a).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,f=c.length;h<f;h++)u.setXYZ(c[h],ru.x,ru.y,ru.z)}}const su=new Wn;class eE extends tr{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new yt;s.setIndex(new Ht(n,1)),s.setAttribute("position",new Ht(i,3)),super(s,new Xn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&su.setFromObject(this.object),su.isEmpty())return;const t=su.min,n=su.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class tE extends tr{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new yt;s.setIndex(new Ht(n,1)),s.setAttribute("position",new Ke(i,3)),super(s,new Xn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class nE extends Zr{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new yt;a.setAttribute("position",new Ke(s,3)),a.computeBoundingSphere(),super(a,new Xn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new yt;u.setAttribute("position",new Ke(c,3)),u.computeBoundingSphere(),this.add(new sn(u,new er({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const $0=new I;let ou,Ud;class iE extends Pt{constructor(e=new I(0,0,1),t=new I(0,0,0),n=1,i=16776960,s=n*.2,a=s*.2){super(),this.type="ArrowHelper",ou===void 0&&(ou=new yt,ou.setAttribute("position",new Ke([0,0,0,0,1,0],3)),Ud=new Zo(0,.5,1,5,1),Ud.translate(0,-.5,0)),this.position.copy(t),this.line=new Zr(ou,new Xn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new sn(Ud,new er({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{$0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle($0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class rE extends tr{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new yt;i.setAttribute("position",new Ke(t,3)),i.setAttribute("color",new Ke(n,3));const s=new Xn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Ie,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class sE{constructor(){this.type="ShapePath",this.color=new Ie,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new el,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,a){return this.currentPath.bezierCurveTo(e,t,n,i,s,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const E=[];for(let w=0,T=_.length;w<T;w++){const L=_[w],R=new ks;R.curves=L.curves,E.push(R)}return E}function n(_,E){const w=E.length;let T=!1;for(let L=w-1,R=0;R<w;L=R++){let U=E[L],N=E[R],C=N.x-U.x,A=N.y-U.y;if(Math.abs(A)>Number.EPSILON){if(A<0&&(U=E[R],C=-C,N=E[L],A=-A),_.y<U.y||_.y>N.y)continue;if(_.y===U.y){if(_.x===U.x)return!0}else{const F=A*(_.x-U.x)-C*(_.y-U.y);if(F===0)return!0;if(F<0)continue;T=!T}}else{if(_.y!==U.y)continue;if(N.x<=_.x&&_.x<=U.x||U.x<=_.x&&_.x<=N.x)return!0}}return T}const i=Qi.isClockWise,s=this.subPaths;if(s.length===0)return[];let a,c,u;const h=[];if(s.length===1)return c=s[0],u=new ks,u.curves=c.curves,h.push(u),h;let f=!i(s[0].getPoints());f=e?!f:f;const p=[],m=[];let g=[],x=0,M;m[x]=void 0,g[x]=[];for(let _=0,E=s.length;_<E;_++)c=s[_],M=c.getPoints(),a=i(M),a=e?!a:a,a?(!f&&m[x]&&x++,m[x]={s:new ks,p:M},m[x].s.curves=c.curves,f&&x++,g[x]=[]):g[x].push({h:c,p:M[0]});if(!m[0])return t(s);if(m.length>1){let _=!1,E=0;for(let w=0,T=m.length;w<T;w++)p[w]=[];for(let w=0,T=m.length;w<T;w++){const L=g[w];for(let R=0;R<L.length;R++){const U=L[R];let N=!0;for(let C=0;C<m.length;C++)n(U.p,m[C].p)&&(w!==C&&E++,N?(N=!1,p[C].push(U)):_=!0);N&&p[w].push(U)}}E>0&&_===!1&&(g=p)}let y;for(let _=0,E=m.length;_<E;_++){u=m[_].s,h.push(u),y=g[_];for(let w=0,T=y.length;w<T;w++)u.holes.push(y[w].h)}return h}}class oE extends $i{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}function aE(r,e){const t=r.image&&r.image.width?r.image.width/r.image.height:1;return t>e?(r.repeat.x=1,r.repeat.y=t/e,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2):(r.repeat.x=e/t,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0),r}function lE(r,e){const t=r.image&&r.image.width?r.image.width/r.image.height:1;return t>e?(r.repeat.x=e/t,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0):(r.repeat.x=1,r.repeat.y=t/e,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2),r}function cE(r){return r.repeat.x=1,r.repeat.y=1,r.offset.x=0,r.offset.y=0,r}function wp(r,e,t,n){const i=uE(n);switch(t){case Dp:return r*e;case Np:return r*e;case Fp:return r*e*2;case mh:return r*e/i.components*i.byteLength;case ul:return r*e/i.components*i.byteLength;case Op:return r*e*2/i.components*i.byteLength;case gh:return r*e*2/i.components*i.byteLength;case Up:return r*e*3/i.components*i.byteLength;case Un:return r*e*4/i.components*i.byteLength;case vh:return r*e*4/i.components*i.byteLength;case Fa:case Oa:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case Ba:case za:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Iu:case Du:return Math.max(r,16)*Math.max(e,8)/4;case Pu:case Lu:return Math.max(r,8)*Math.max(e,8)/2;case Uu:case Nu:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case Fu:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Ou:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Bu:return Math.floor((r+4)/5)*Math.floor((e+3)/4)*16;case zu:return Math.floor((r+4)/5)*Math.floor((e+4)/5)*16;case ku:return Math.floor((r+5)/6)*Math.floor((e+4)/5)*16;case Vu:return Math.floor((r+5)/6)*Math.floor((e+5)/6)*16;case Hu:return Math.floor((r+7)/8)*Math.floor((e+4)/5)*16;case Gu:return Math.floor((r+7)/8)*Math.floor((e+5)/6)*16;case Wu:return Math.floor((r+7)/8)*Math.floor((e+7)/8)*16;case Xu:return Math.floor((r+9)/10)*Math.floor((e+4)/5)*16;case ju:return Math.floor((r+9)/10)*Math.floor((e+5)/6)*16;case qu:return Math.floor((r+9)/10)*Math.floor((e+7)/8)*16;case Yu:return Math.floor((r+9)/10)*Math.floor((e+9)/10)*16;case Zu:return Math.floor((r+11)/12)*Math.floor((e+9)/10)*16;case Ju:return Math.floor((r+11)/12)*Math.floor((e+11)/12)*16;case ka:case Ku:case Qu:return Math.ceil(r/4)*Math.ceil(e/4)*16;case Bp:case $u:return Math.ceil(r/4)*Math.ceil(e/4)*8;case eh:case th:return Math.ceil(r/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function uE(r){switch(r){case Fi:case Pp:return{byteLength:1,components:1};case Hs:case Ip:case Jr:return{byteLength:2,components:1};case dh:case ph:return{byteLength:2,components:4};case Sr:case fh:case ni:return{byteLength:4,components:1};case Lp:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${r}.`)}const hE={contain:aE,cover:lE,fill:cE,getByteLength:wp};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ll}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ll);/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function oy(){let r=null,e=!1,t=null,n=null;function i(s,a){t(s,a),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function fE(r){const e=new WeakMap;function t(c,u){const h=c.array,f=c.usage,p=h.byteLength,m=r.createBuffer();r.bindBuffer(u,m),r.bufferData(u,h,f),c.onUploadCallback();let g;if(h instanceof Float32Array)g=r.FLOAT;else if(h instanceof Uint16Array)c.isFloat16BufferAttribute?g=r.HALF_FLOAT:g=r.UNSIGNED_SHORT;else if(h instanceof Int16Array)g=r.SHORT;else if(h instanceof Uint32Array)g=r.UNSIGNED_INT;else if(h instanceof Int32Array)g=r.INT;else if(h instanceof Int8Array)g=r.BYTE;else if(h instanceof Uint8Array)g=r.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)g=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:m,type:g,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version,size:p}}function n(c,u,h){const f=u.array,p=u.updateRanges;if(r.bindBuffer(h,c),p.length===0)r.bufferSubData(h,0,f);else{p.sort((g,x)=>g.start-x.start);let m=0;for(let g=1;g<p.length;g++){const x=p[m],M=p[g];M.start<=x.start+x.count+1?x.count=Math.max(x.count,M.start+M.count-x.start):(++m,p[m]=M)}p.length=m+1;for(let g=0,x=p.length;g<x;g++){const M=p[g];r.bufferSubData(h,M.start*f.BYTES_PER_ELEMENT,f,M.start,M.count)}u.clearUpdateRanges()}u.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=e.get(c);u&&(r.deleteBuffer(u.buffer),e.delete(c))}function a(c,u){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const f=e.get(c);(!f||f.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const h=e.get(c);if(h===void 0)e.set(c,t(c,u));else if(h.version<c.version){if(h.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(h.buffer,c,u),h.version=c.version}}return{get:i,remove:s,update:a}}var dE=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,pE=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,mE=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,gE=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,vE=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,_E=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,xE=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,yE=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,SE=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,ME=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,wE=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,EE=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,TE=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,bE=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,AE=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,CE=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,RE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,PE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,IE=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,LE=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,DE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,UE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,NE=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,FE=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,OE=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,BE=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,zE=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,kE=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,VE=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,HE=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,GE="gl_FragColor = linearToOutputTexel( gl_FragColor );",WE=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,XE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,jE=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,qE=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,YE=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,ZE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,JE=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,KE=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,QE=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,$E=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,eT=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,tT=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,nT=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,iT=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,rT=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,sT=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,oT=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,aT=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,lT=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,cT=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,uT=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,hT=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,fT=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,dT=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,pT=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,mT=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,gT=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,vT=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,_T=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,xT=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,yT=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,ST=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,MT=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,wT=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,ET=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,TT=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,bT=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,AT=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,CT=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,RT=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,PT=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,IT=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,LT=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,DT=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,UT=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,NT=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,FT=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,OT=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,BT=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,zT=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,kT=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,VT=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,HT=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,GT=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,WT=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,XT=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,jT=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,qT=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,YT=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,ZT=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,JT=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,KT=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,QT=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,$T=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,eb=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,tb=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,nb=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,ib=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,rb=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,sb=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,ob=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,ab=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,lb=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,cb=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,ub=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,hb=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const fb=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,db=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,pb=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,mb=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,gb=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,vb=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,_b=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,xb=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,yb=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Sb=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Mb=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,wb=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Eb=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Tb=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,bb=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Ab=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Cb=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Rb=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Pb=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Ib=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Lb=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Db=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Ub=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Nb=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Fb=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Ob=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Bb=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,zb=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kb=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Vb=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Hb=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Gb=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Wb=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Xb=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,St={alphahash_fragment:dE,alphahash_pars_fragment:pE,alphamap_fragment:mE,alphamap_pars_fragment:gE,alphatest_fragment:vE,alphatest_pars_fragment:_E,aomap_fragment:xE,aomap_pars_fragment:yE,batching_pars_vertex:SE,batching_vertex:ME,begin_vertex:wE,beginnormal_vertex:EE,bsdfs:TE,iridescence_fragment:bE,bumpmap_pars_fragment:AE,clipping_planes_fragment:CE,clipping_planes_pars_fragment:RE,clipping_planes_pars_vertex:PE,clipping_planes_vertex:IE,color_fragment:LE,color_pars_fragment:DE,color_pars_vertex:UE,color_vertex:NE,common:FE,cube_uv_reflection_fragment:OE,defaultnormal_vertex:BE,displacementmap_pars_vertex:zE,displacementmap_vertex:kE,emissivemap_fragment:VE,emissivemap_pars_fragment:HE,colorspace_fragment:GE,colorspace_pars_fragment:WE,envmap_fragment:XE,envmap_common_pars_fragment:jE,envmap_pars_fragment:qE,envmap_pars_vertex:YE,envmap_physical_pars_fragment:sT,envmap_vertex:ZE,fog_vertex:JE,fog_pars_vertex:KE,fog_fragment:QE,fog_pars_fragment:$E,gradientmap_pars_fragment:eT,lightmap_pars_fragment:tT,lights_lambert_fragment:nT,lights_lambert_pars_fragment:iT,lights_pars_begin:rT,lights_toon_fragment:oT,lights_toon_pars_fragment:aT,lights_phong_fragment:lT,lights_phong_pars_fragment:cT,lights_physical_fragment:uT,lights_physical_pars_fragment:hT,lights_fragment_begin:fT,lights_fragment_maps:dT,lights_fragment_end:pT,logdepthbuf_fragment:mT,logdepthbuf_pars_fragment:gT,logdepthbuf_pars_vertex:vT,logdepthbuf_vertex:_T,map_fragment:xT,map_pars_fragment:yT,map_particle_fragment:ST,map_particle_pars_fragment:MT,metalnessmap_fragment:wT,metalnessmap_pars_fragment:ET,morphinstance_vertex:TT,morphcolor_vertex:bT,morphnormal_vertex:AT,morphtarget_pars_vertex:CT,morphtarget_vertex:RT,normal_fragment_begin:PT,normal_fragment_maps:IT,normal_pars_fragment:LT,normal_pars_vertex:DT,normal_vertex:UT,normalmap_pars_fragment:NT,clearcoat_normal_fragment_begin:FT,clearcoat_normal_fragment_maps:OT,clearcoat_pars_fragment:BT,iridescence_pars_fragment:zT,opaque_fragment:kT,packing:VT,premultiplied_alpha_fragment:HT,project_vertex:GT,dithering_fragment:WT,dithering_pars_fragment:XT,roughnessmap_fragment:jT,roughnessmap_pars_fragment:qT,shadowmap_pars_fragment:YT,shadowmap_pars_vertex:ZT,shadowmap_vertex:JT,shadowmask_pars_fragment:KT,skinbase_vertex:QT,skinning_pars_vertex:$T,skinning_vertex:eb,skinnormal_vertex:tb,specularmap_fragment:nb,specularmap_pars_fragment:ib,tonemapping_fragment:rb,tonemapping_pars_fragment:sb,transmission_fragment:ob,transmission_pars_fragment:ab,uv_pars_fragment:lb,uv_pars_vertex:cb,uv_vertex:ub,worldpos_vertex:hb,background_vert:fb,background_frag:db,backgroundCube_vert:pb,backgroundCube_frag:mb,cube_vert:gb,cube_frag:vb,depth_vert:_b,depth_frag:xb,distanceRGBA_vert:yb,distanceRGBA_frag:Sb,equirect_vert:Mb,equirect_frag:wb,linedashed_vert:Eb,linedashed_frag:Tb,meshbasic_vert:bb,meshbasic_frag:Ab,meshlambert_vert:Cb,meshlambert_frag:Rb,meshmatcap_vert:Pb,meshmatcap_frag:Ib,meshnormal_vert:Lb,meshnormal_frag:Db,meshphong_vert:Ub,meshphong_frag:Nb,meshphysical_vert:Fb,meshphysical_frag:Ob,meshtoon_vert:Bb,meshtoon_frag:zb,points_vert:kb,points_frag:Vb,shadow_vert:Hb,shadow_frag:Gb,sprite_vert:Wb,sprite_frag:Xb},Oe={common:{diffuse:{value:new Ie(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new _t},alphaMap:{value:null},alphaMapTransform:{value:new _t},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new _t}},envmap:{envMap:{value:null},envMapRotation:{value:new _t},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new _t}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new _t}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new _t},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new _t},normalScale:{value:new ue(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new _t},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new _t}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new _t}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new _t}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ie(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ie(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new _t},alphaTest:{value:0},uvTransform:{value:new _t}},sprite:{diffuse:{value:new Ie(16777215)},opacity:{value:1},center:{value:new ue(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new _t},alphaMap:{value:null},alphaMapTransform:{value:new _t},alphaTest:{value:0}}},Ui={basic:{uniforms:Vn([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.fog]),vertexShader:St.meshbasic_vert,fragmentShader:St.meshbasic_frag},lambert:{uniforms:Vn([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.fog,Oe.lights,{emissive:{value:new Ie(0)}}]),vertexShader:St.meshlambert_vert,fragmentShader:St.meshlambert_frag},phong:{uniforms:Vn([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.fog,Oe.lights,{emissive:{value:new Ie(0)},specular:{value:new Ie(1118481)},shininess:{value:30}}]),vertexShader:St.meshphong_vert,fragmentShader:St.meshphong_frag},standard:{uniforms:Vn([Oe.common,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.roughnessmap,Oe.metalnessmap,Oe.fog,Oe.lights,{emissive:{value:new Ie(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:St.meshphysical_vert,fragmentShader:St.meshphysical_frag},toon:{uniforms:Vn([Oe.common,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.gradientmap,Oe.fog,Oe.lights,{emissive:{value:new Ie(0)}}]),vertexShader:St.meshtoon_vert,fragmentShader:St.meshtoon_frag},matcap:{uniforms:Vn([Oe.common,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.fog,{matcap:{value:null}}]),vertexShader:St.meshmatcap_vert,fragmentShader:St.meshmatcap_frag},points:{uniforms:Vn([Oe.points,Oe.fog]),vertexShader:St.points_vert,fragmentShader:St.points_frag},dashed:{uniforms:Vn([Oe.common,Oe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:St.linedashed_vert,fragmentShader:St.linedashed_frag},depth:{uniforms:Vn([Oe.common,Oe.displacementmap]),vertexShader:St.depth_vert,fragmentShader:St.depth_frag},normal:{uniforms:Vn([Oe.common,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,{opacity:{value:1}}]),vertexShader:St.meshnormal_vert,fragmentShader:St.meshnormal_frag},sprite:{uniforms:Vn([Oe.sprite,Oe.fog]),vertexShader:St.sprite_vert,fragmentShader:St.sprite_frag},background:{uniforms:{uvTransform:{value:new _t},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:St.background_vert,fragmentShader:St.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new _t}},vertexShader:St.backgroundCube_vert,fragmentShader:St.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:St.cube_vert,fragmentShader:St.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:St.equirect_vert,fragmentShader:St.equirect_frag},distanceRGBA:{uniforms:Vn([Oe.common,Oe.displacementmap,{referencePosition:{value:new I},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:St.distanceRGBA_vert,fragmentShader:St.distanceRGBA_frag},shadow:{uniforms:Vn([Oe.lights,Oe.fog,{color:{value:new Ie(0)},opacity:{value:1}}]),vertexShader:St.shadow_vert,fragmentShader:St.shadow_frag}};Ui.physical={uniforms:Vn([Ui.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new _t},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new _t},clearcoatNormalScale:{value:new ue(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new _t},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new _t},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new _t},sheen:{value:0},sheenColor:{value:new Ie(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new _t},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new _t},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new _t},transmissionSamplerSize:{value:new ue},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new _t},attenuationDistance:{value:0},attenuationColor:{value:new Ie(0)},specularColor:{value:new Ie(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new _t},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new _t},anisotropyVector:{value:new ue},anisotropyMap:{value:null},anisotropyMapTransform:{value:new _t}}]),vertexShader:St.meshphysical_vert,fragmentShader:St.meshphysical_frag};const au={r:0,b:0,g:0},Ts=new Yt,jb=new ft;function qb(r,e,t,n,i,s,a){const c=new Ie(0);let u=s===!0?0:1,h,f,p=null,m=0,g=null;function x(w){let T=w.isScene===!0?w.background:null;return T&&T.isTexture&&(T=(w.backgroundBlurriness>0?t:e).get(T)),T}function M(w){let T=!1;const L=x(w);L===null?_(c,u):L&&L.isColor&&(_(L,1),T=!0);const R=r.xr.getEnvironmentBlendMode();R==="additive"?n.buffers.color.setClear(0,0,0,1,a):R==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(r.autoClear||T)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil))}function y(w,T){const L=x(T);L&&(L.isCubeTexture||L.mapping===jo)?(f===void 0&&(f=new sn(new Qr(1,1,1),new ii({name:"BackgroundCubeMaterial",uniforms:Go(Ui.backgroundCube.uniforms),vertexShader:Ui.backgroundCube.vertexShader,fragmentShader:Ui.backgroundCube.fragmentShader,side:Gn,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(R,U,N){this.matrixWorld.copyPosition(N.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(f)),Ts.copy(T.backgroundRotation),Ts.x*=-1,Ts.y*=-1,Ts.z*=-1,L.isCubeTexture&&L.isRenderTargetTexture===!1&&(Ts.y*=-1,Ts.z*=-1),f.material.uniforms.envMap.value=L,f.material.uniforms.flipEnvMap.value=L.isCubeTexture&&L.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=T.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,f.material.uniforms.backgroundRotation.value.setFromMatrix4(jb.makeRotationFromEuler(Ts)),f.material.toneMapped=Nt.getTransfer(L.colorSpace)!==Gt,(p!==L||m!==L.version||g!==r.toneMapping)&&(f.material.needsUpdate=!0,p=L,m=L.version,g=r.toneMapping),f.layers.enableAll(),w.unshift(f,f.geometry,f.material,0,0,null)):L&&L.isTexture&&(h===void 0&&(h=new sn(new es(2,2),new ii({name:"BackgroundMaterial",uniforms:Go(Ui.background.uniforms),vertexShader:Ui.background.vertexShader,fragmentShader:Ui.background.fragmentShader,side:xr,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=L,h.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,h.material.toneMapped=Nt.getTransfer(L.colorSpace)!==Gt,L.matrixAutoUpdate===!0&&L.updateMatrix(),h.material.uniforms.uvTransform.value.copy(L.matrix),(p!==L||m!==L.version||g!==r.toneMapping)&&(h.material.needsUpdate=!0,p=L,m=L.version,g=r.toneMapping),h.layers.enableAll(),w.unshift(h,h.geometry,h.material,0,0,null))}function _(w,T){w.getRGB(au,lx(r)),n.buffers.color.setClear(au.r,au.g,au.b,T,a)}function E(){f!==void 0&&(f.geometry.dispose(),f.material.dispose()),h!==void 0&&(h.geometry.dispose(),h.material.dispose())}return{getClearColor:function(){return c},setClearColor:function(w,T=1){c.set(w),u=T,_(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(w){u=w,_(c,u)},render:M,addToRenderList:y,dispose:E}}function Yb(r,e){const t=r.getParameter(r.MAX_VERTEX_ATTRIBS),n={},i=m(null);let s=i,a=!1;function c(A,F,q,W,$){let oe=!1;const ee=p(W,q,F);s!==ee&&(s=ee,h(s.object)),oe=g(A,W,q,$),oe&&x(A,W,q,$),$!==null&&e.update($,r.ELEMENT_ARRAY_BUFFER),(oe||a)&&(a=!1,T(A,F,q,W),$!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get($).buffer))}function u(){return r.createVertexArray()}function h(A){return r.bindVertexArray(A)}function f(A){return r.deleteVertexArray(A)}function p(A,F,q){const W=q.wireframe===!0;let $=n[A.id];$===void 0&&($={},n[A.id]=$);let oe=$[F.id];oe===void 0&&(oe={},$[F.id]=oe);let ee=oe[W];return ee===void 0&&(ee=m(u()),oe[W]=ee),ee}function m(A){const F=[],q=[],W=[];for(let $=0;$<t;$++)F[$]=0,q[$]=0,W[$]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:F,enabledAttributes:q,attributeDivisors:W,object:A,attributes:{},index:null}}function g(A,F,q,W){const $=s.attributes,oe=F.attributes;let ee=0;const ge=q.getAttributes();for(const O in ge)if(ge[O].location>=0){const X=$[O];let Z=oe[O];if(Z===void 0&&(O==="instanceMatrix"&&A.instanceMatrix&&(Z=A.instanceMatrix),O==="instanceColor"&&A.instanceColor&&(Z=A.instanceColor)),X===void 0||X.attribute!==Z||Z&&X.data!==Z.data)return!0;ee++}return s.attributesNum!==ee||s.index!==W}function x(A,F,q,W){const $={},oe=F.attributes;let ee=0;const ge=q.getAttributes();for(const O in ge)if(ge[O].location>=0){let X=oe[O];X===void 0&&(O==="instanceMatrix"&&A.instanceMatrix&&(X=A.instanceMatrix),O==="instanceColor"&&A.instanceColor&&(X=A.instanceColor));const Z={};Z.attribute=X,X&&X.data&&(Z.data=X.data),$[O]=Z,ee++}s.attributes=$,s.attributesNum=ee,s.index=W}function M(){const A=s.newAttributes;for(let F=0,q=A.length;F<q;F++)A[F]=0}function y(A){_(A,0)}function _(A,F){const q=s.newAttributes,W=s.enabledAttributes,$=s.attributeDivisors;q[A]=1,W[A]===0&&(r.enableVertexAttribArray(A),W[A]=1),$[A]!==F&&(r.vertexAttribDivisor(A,F),$[A]=F)}function E(){const A=s.newAttributes,F=s.enabledAttributes;for(let q=0,W=F.length;q<W;q++)F[q]!==A[q]&&(r.disableVertexAttribArray(q),F[q]=0)}function w(A,F,q,W,$,oe,ee){ee===!0?r.vertexAttribIPointer(A,F,q,$,oe):r.vertexAttribPointer(A,F,q,W,$,oe)}function T(A,F,q,W){M();const $=W.attributes,oe=q.getAttributes(),ee=F.defaultAttributeValues;for(const ge in oe){const O=oe[ge];if(O.location>=0){let Y=$[ge];if(Y===void 0&&(ge==="instanceMatrix"&&A.instanceMatrix&&(Y=A.instanceMatrix),ge==="instanceColor"&&A.instanceColor&&(Y=A.instanceColor)),Y!==void 0){const X=Y.normalized,Z=Y.itemSize,fe=e.get(Y);if(fe===void 0)continue;const Ee=fe.buffer,ne=fe.type,Se=fe.bytesPerElement,Pe=ne===r.INT||ne===r.UNSIGNED_INT||Y.gpuType===fh;if(Y.isInterleavedBufferAttribute){const Me=Y.data,tt=Me.stride,lt=Y.offset;if(Me.isInstancedInterleavedBuffer){for(let it=0;it<O.locationSize;it++)_(O.location+it,Me.meshPerAttribute);A.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=Me.meshPerAttribute*Me.count)}else for(let it=0;it<O.locationSize;it++)y(O.location+it);r.bindBuffer(r.ARRAY_BUFFER,Ee);for(let it=0;it<O.locationSize;it++)w(O.location+it,Z/O.locationSize,ne,X,tt*Se,(lt+Z/O.locationSize*it)*Se,Pe)}else{if(Y.isInstancedBufferAttribute){for(let Me=0;Me<O.locationSize;Me++)_(O.location+Me,Y.meshPerAttribute);A.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=Y.meshPerAttribute*Y.count)}else for(let Me=0;Me<O.locationSize;Me++)y(O.location+Me);r.bindBuffer(r.ARRAY_BUFFER,Ee);for(let Me=0;Me<O.locationSize;Me++)w(O.location+Me,Z/O.locationSize,ne,X,Z*Se,Z/O.locationSize*Me*Se,Pe)}}else if(ee!==void 0){const X=ee[ge];if(X!==void 0)switch(X.length){case 2:r.vertexAttrib2fv(O.location,X);break;case 3:r.vertexAttrib3fv(O.location,X);break;case 4:r.vertexAttrib4fv(O.location,X);break;default:r.vertexAttrib1fv(O.location,X)}}}}E()}function L(){N();for(const A in n){const F=n[A];for(const q in F){const W=F[q];for(const $ in W)f(W[$].object),delete W[$];delete F[q]}delete n[A]}}function R(A){if(n[A.id]===void 0)return;const F=n[A.id];for(const q in F){const W=F[q];for(const $ in W)f(W[$].object),delete W[$];delete F[q]}delete n[A.id]}function U(A){for(const F in n){const q=n[F];if(q[A.id]===void 0)continue;const W=q[A.id];for(const $ in W)f(W[$].object),delete W[$];delete q[A.id]}}function N(){C(),a=!0,s!==i&&(s=i,h(s.object))}function C(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:N,resetDefaultState:C,dispose:L,releaseStatesOfGeometry:R,releaseStatesOfProgram:U,initAttributes:M,enableAttribute:y,disableUnusedAttributes:E}}function Zb(r,e,t){let n;function i(h){n=h}function s(h,f){r.drawArrays(n,h,f),t.update(f,n,1)}function a(h,f,p){p!==0&&(r.drawArraysInstanced(n,h,f,p),t.update(f,n,p))}function c(h,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,h,0,f,0,p);let g=0;for(let x=0;x<p;x++)g+=f[x];t.update(g,n,1)}function u(h,f,p,m){if(p===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let x=0;x<h.length;x++)a(h[x],f[x],m[x]);else{g.multiDrawArraysInstancedWEBGL(n,h,0,f,0,m,0,p);let x=0;for(let M=0;M<p;M++)x+=f[M]*m[M];t.update(x,n,1)}}this.setMode=i,this.render=s,this.renderInstances=a,this.renderMultiDraw=c,this.renderMultiDrawInstances=u}function Jb(r,e,t,n){let i;function s(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const U=e.get("EXT_texture_filter_anisotropic");i=r.getParameter(U.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function a(U){return!(U!==Un&&n.convert(U)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(U){const N=U===Jr&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(U!==Fi&&n.convert(U)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&U!==ni&&!N)}function u(U){if(U==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";U="mediump"}return U==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let h=t.precision!==void 0?t.precision:"highp";const f=u(h);f!==h&&(console.warn("THREE.WebGLRenderer:",h,"not supported, using",f,"instead."),h=f);const p=t.logarithmicDepthBuffer===!0,m=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),g=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),x=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),M=r.getParameter(r.MAX_TEXTURE_SIZE),y=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),_=r.getParameter(r.MAX_VERTEX_ATTRIBS),E=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),w=r.getParameter(r.MAX_VARYING_VECTORS),T=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),L=x>0,R=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:u,textureFormatReadable:a,textureTypeReadable:c,precision:h,logarithmicDepthBuffer:p,reverseDepthBuffer:m,maxTextures:g,maxVertexTextures:x,maxTextureSize:M,maxCubemapSize:y,maxAttributes:_,maxVertexUniforms:E,maxVaryings:w,maxFragmentUniforms:T,vertexTextures:L,maxSamples:R}}function Kb(r){const e=this;let t=null,n=0,i=!1,s=!1;const a=new Yi,c=new _t,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const g=p.length!==0||m||n!==0||i;return i=m,n=p.length,g},this.beginShadows=function(){s=!0,f(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=f(p,m,0)},this.setState=function(p,m,g){const x=p.clippingPlanes,M=p.clipIntersection,y=p.clipShadows,_=r.get(p);if(!i||x===null||x.length===0||s&&!y)s?f(null):h();else{const E=s?0:n,w=E*4;let T=_.clippingState||null;u.value=T,T=f(x,m,w,g);for(let L=0;L!==w;++L)T[L]=t[L];_.clippingState=T,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=E}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(p,m,g,x){const M=p!==null?p.length:0;let y=null;if(M!==0){if(y=u.value,x!==!0||y===null){const _=g+M*4,E=m.matrixWorldInverse;c.getNormalMatrix(E),(y===null||y.length<_)&&(y=new Float32Array(_));for(let w=0,T=g;w!==M;++w,T+=4)a.copy(p[w]).applyMatrix4(E,c),a.normal.toArray(y,T),y[T+3]=a.constant}u.value=y,u.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,y}}function Qb(r){let e=new WeakMap;function t(a,c){return c===Wa?a.mapping=yr:c===Xa&&(a.mapping=Yr),a}function n(a){if(a&&a.isTexture){const c=a.mapping;if(c===Wa||c===Xa)if(e.has(a)){const u=e.get(a).texture;return t(u,a.mapping)}else{const u=a.image;if(u&&u.height>0){const h=new hx(u.height);return h.fromEquirectangularTexture(r,a),e.set(a,h),a.addEventListener("dispose",i),t(h.texture,a.mapping)}else return null}}return a}function i(a){const c=a.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}const ko=4,ev=[.125,.215,.35,.446,.526,.582],Is=20,Nd=new qr,tv=new Ie;let Fd=null,Od=0,Bd=0,zd=!1;const Ps=(1+Math.sqrt(5))/2,Ro=1/Ps,nv=[new I(-Ps,Ro,0),new I(Ps,Ro,0),new I(-Ro,0,Ps),new I(Ro,0,Ps),new I(0,Ps,-Ro),new I(0,Ps,Ro),new I(-1,1,-1),new I(1,1,-1),new I(-1,1,1),new I(1,1,1)];class Ep{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Fd=this._renderer.getRenderTarget(),Od=this._renderer.getActiveCubeFace(),Bd=this._renderer.getActiveMipmapLevel(),zd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=sv(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=rv(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Fd,Od,Bd),this._renderer.xr.enabled=zd,e.scissorTest=!1,lu(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===yr||e.mapping===Yr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Fd=this._renderer.getRenderTarget(),Od=this._renderer.getActiveCubeFace(),Bd=this._renderer.getActiveMipmapLevel(),zd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Kt,minFilter:Kt,generateMipmaps:!1,type:Jr,format:Un,colorSpace:Xs,depthBuffer:!1},i=iv(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=iv(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=$b(s)),this._blurMaterial=eA(s,e,t)}return i}_compileMaterial(e){const t=new sn(this._lodPlanes[0],e);this._renderer.compile(t,Nd)}_sceneToCubeUV(e,t,n,i){const c=new en(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],f=this._renderer,p=f.autoClear,m=f.toneMapping;f.getClearColor(tv),f.toneMapping=bi,f.autoClear=!1;const g=new er({name:"PMREM.Background",side:Gn,depthWrite:!1,depthTest:!1}),x=new sn(new Qr,g);let M=!1;const y=e.background;y?y.isColor&&(g.color.copy(y),e.background=null,M=!0):(g.color.copy(tv),M=!0);for(let _=0;_<6;_++){const E=_%3;E===0?(c.up.set(0,u[_],0),c.lookAt(h[_],0,0)):E===1?(c.up.set(0,0,u[_]),c.lookAt(0,h[_],0)):(c.up.set(0,u[_],0),c.lookAt(0,0,h[_]));const w=this._cubeSize;lu(i,E*w,_>2?w:0,w,w),f.setRenderTarget(i),M&&f.render(x,c),f.render(e,c)}x.geometry.dispose(),x.material.dispose(),f.toneMapping=m,f.autoClear=p,e.background=y}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===yr||e.mapping===Yr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=sv()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=rv());const s=i?this._cubemapMaterial:this._equirectMaterial,a=new sn(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;lu(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(a,Nd)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let s=1;s<i;s++){const a=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),c=nv[(i-s-1)%nv.length];this._blur(e,s-1,s,a,c)}t.autoClear=n}_blur(e,t,n,i,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",s),this._halfBlur(a,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,a,c){const u=this._renderer,h=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,p=new sn(this._lodPlanes[i],h),m=h.uniforms,g=this._sizeLods[n]-1,x=isFinite(s)?Math.PI/(2*g):2*Math.PI/(2*Is-1),M=s/x,y=isFinite(s)?1+Math.floor(f*M):Is;y>Is&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${Is}`);const _=[];let E=0;for(let U=0;U<Is;++U){const N=U/M,C=Math.exp(-N*N/2);_.push(C),U===0?E+=C:U<y&&(E+=2*C)}for(let U=0;U<_.length;U++)_[U]=_[U]/E;m.envMap.value=e.texture,m.samples.value=y,m.weights.value=_,m.latitudinal.value=a==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:w}=this;m.dTheta.value=x,m.mipInt.value=w-n;const T=this._sizeLods[i],L=3*T*(i>w-ko?i-w+ko:0),R=4*(this._cubeSize-T);lu(t,L,R,3*T,2*T),u.setRenderTarget(t),u.render(p,Nd)}}function $b(r){const e=[],t=[],n=[];let i=r;const s=r-ko+1+ev.length;for(let a=0;a<s;a++){const c=Math.pow(2,i);t.push(c);let u=1/c;a>r-ko?u=ev[a-r+ko-1]:a===0&&(u=0),n.push(u);const h=1/(c-2),f=-h,p=1+h,m=[f,f,p,f,p,p,f,f,p,p,f,p],g=6,x=6,M=3,y=2,_=1,E=new Float32Array(M*x*g),w=new Float32Array(y*x*g),T=new Float32Array(_*x*g);for(let R=0;R<g;R++){const U=R%3*2/3-1,N=R>2?0:-1,C=[U,N,0,U+2/3,N,0,U+2/3,N+1,0,U,N,0,U+2/3,N+1,0,U,N+1,0];E.set(C,M*x*R),w.set(m,y*x*R);const A=[R,R,R,R,R,R];T.set(A,_*x*R)}const L=new yt;L.setAttribute("position",new Ht(E,M)),L.setAttribute("uv",new Ht(w,y)),L.setAttribute("faceIndex",new Ht(T,_)),e.push(L),i>ko&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function iv(r,e,t){const n=new di(r,e,t);return n.texture.mapping=jo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function lu(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function eA(r,e,t){const n=new Float32Array(Is),i=new I(0,1,0);return new ii({name:"SphericalGaussianBlur",defines:{n:Is,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:hm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ji,depthTest:!1,depthWrite:!1})}function rv(){return new ii({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:hm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ji,depthTest:!1,depthWrite:!1})}function sv(){return new ii({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:hm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ji,depthTest:!1,depthWrite:!1})}function hm(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function tA(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===Wa||u===Xa,f=u===yr||u===Yr;if(h||f){let p=e.get(c);const m=p!==void 0?p.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==m)return t===null&&(t=new Ep(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),p.texture;if(p!==void 0)return p.texture;{const g=c.image;return h&&g&&g.height>0||f&&g&&i(g)?(t===null&&(t=new Ep(r)),p=h?t.fromEquirectangular(c):t.fromCubemap(c),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),c.addEventListener("dispose",s),p.texture):null}}}return c}function i(c){let u=0;const h=6;for(let f=0;f<h;f++)c[f]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function nA(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&Do("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function iA(r,e,t,n){const i={},s=new WeakMap;function a(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const x in m.attributes)e.remove(m.attributes[x]);m.removeEventListener("dispose",a),delete i[m.id];const g=s.get(m);g&&(e.remove(g),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",a),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const g in m)e.update(m[g],r.ARRAY_BUFFER)}function h(p){const m=[],g=p.index,x=p.attributes.position;let M=0;if(g!==null){const E=g.array;M=g.version;for(let w=0,T=E.length;w<T;w+=3){const L=E[w+0],R=E[w+1],U=E[w+2];m.push(L,R,R,U,U,L)}}else if(x!==void 0){const E=x.array;M=x.version;for(let w=0,T=E.length/3-1;w<T;w+=3){const L=w+0,R=w+1,U=w+2;m.push(L,R,R,U,U,L)}}else return;const y=new(rx(m)?Gp:Hp)(m,1);y.version=M;const _=s.get(p);_&&e.remove(_),s.set(p,y)}function f(p){const m=s.get(p);if(m){const g=p.index;g!==null&&m.version<g.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:f}}function rA(r,e,t){let n;function i(m){n=m}let s,a;function c(m){s=m.type,a=m.bytesPerElement}function u(m,g){r.drawElements(n,g,s,m*a),t.update(g,n,1)}function h(m,g,x){x!==0&&(r.drawElementsInstanced(n,g,s,m*a,x),t.update(g,n,x))}function f(m,g,x){if(x===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,g,0,s,m,0,x);let y=0;for(let _=0;_<x;_++)y+=g[_];t.update(y,n,1)}function p(m,g,x,M){if(x===0)return;const y=e.get("WEBGL_multi_draw");if(y===null)for(let _=0;_<m.length;_++)h(m[_]/a,g[_],M[_]);else{y.multiDrawElementsInstancedWEBGL(n,g,0,s,m,0,M,0,x);let _=0;for(let E=0;E<x;E++)_+=g[E]*M[E];t.update(_,n,1)}}this.setMode=i,this.setIndex=c,this.render=u,this.renderInstances=h,this.renderMultiDraw=f,this.renderMultiDrawInstances=p}function sA(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,a,c){switch(t.calls++,a){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function oA(r,e,t){const n=new WeakMap,i=new Dt;function s(a,c,u){const h=a.morphTargetInfluences,f=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=f!==void 0?f.length:0;let m=n.get(c);if(m===void 0||m.count!==p){let C=function(){U.dispose(),n.delete(c),c.removeEventListener("dispose",C)};m!==void 0&&m.texture.dispose();const g=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,M=c.morphAttributes.color!==void 0,y=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let w=0;g===!0&&(w=1),x===!0&&(w=2),M===!0&&(w=3);let T=c.attributes.position.count*w,L=1;T>e.maxTextureSize&&(L=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const R=new Float32Array(T*L*4*p),U=new hl(R,T,L,p);U.type=ni,U.needsUpdate=!0;const N=w*4;for(let A=0;A<p;A++){const F=y[A],q=_[A],W=E[A],$=T*L*4*A;for(let oe=0;oe<F.count;oe++){const ee=oe*N;g===!0&&(i.fromBufferAttribute(F,oe),R[$+ee+0]=i.x,R[$+ee+1]=i.y,R[$+ee+2]=i.z,R[$+ee+3]=0),x===!0&&(i.fromBufferAttribute(q,oe),R[$+ee+4]=i.x,R[$+ee+5]=i.y,R[$+ee+6]=i.z,R[$+ee+7]=0),M===!0&&(i.fromBufferAttribute(W,oe),R[$+ee+8]=i.x,R[$+ee+9]=i.y,R[$+ee+10]=i.z,R[$+ee+11]=W.itemSize===4?i.w:1)}}m={count:p,texture:U,size:new ue(T,L)},n.set(c,m),c.addEventListener("dispose",C)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)u.getUniforms().setValue(r,"morphTexture",a.morphTexture,t);else{let g=0;for(let M=0;M<h.length;M++)g+=h[M];const x=c.morphTargetsRelative?1:1-g;u.getUniforms().setValue(r,"morphTargetBaseInfluence",x),u.getUniforms().setValue(r,"morphTargetInfluences",h)}u.getUniforms().setValue(r,"morphTargetsTexture",m.texture,t),u.getUniforms().setValue(r,"morphTargetsTextureSize",m.size)}return{update:s}}function aA(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,f=u.geometry,p=e.get(u,f);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function a(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:a}}const ay=new tn,ov=new bh(1,1),ly=new hl,cy=new yh,uy=new fl,av=[],lv=[],cv=new Float32Array(16),uv=new Float32Array(9),hv=new Float32Array(4);function Jo(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=av[i];if(s===void 0&&(s=new Float32Array(i),av[i]=s),e!==0){n.toArray(s,0);for(let a=1,c=0;a!==e;++a)c+=t,r[a].toArray(s,c)}return s}function mn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function gn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function Hh(r,e){let t=lv[e];t===void 0&&(t=new Int32Array(e),lv[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function lA(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function cA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(mn(t,e))return;r.uniform2fv(this.addr,e),gn(t,e)}}function uA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(mn(t,e))return;r.uniform3fv(this.addr,e),gn(t,e)}}function hA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(mn(t,e))return;r.uniform4fv(this.addr,e),gn(t,e)}}function fA(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(mn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),gn(t,e)}else{if(mn(t,n))return;hv.set(n),r.uniformMatrix2fv(this.addr,!1,hv),gn(t,n)}}function dA(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(mn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),gn(t,e)}else{if(mn(t,n))return;uv.set(n),r.uniformMatrix3fv(this.addr,!1,uv),gn(t,n)}}function pA(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(mn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),gn(t,e)}else{if(mn(t,n))return;cv.set(n),r.uniformMatrix4fv(this.addr,!1,cv),gn(t,n)}}function mA(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function gA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(mn(t,e))return;r.uniform2iv(this.addr,e),gn(t,e)}}function vA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(mn(t,e))return;r.uniform3iv(this.addr,e),gn(t,e)}}function _A(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(mn(t,e))return;r.uniform4iv(this.addr,e),gn(t,e)}}function xA(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function yA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(mn(t,e))return;r.uniform2uiv(this.addr,e),gn(t,e)}}function SA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(mn(t,e))return;r.uniform3uiv(this.addr,e),gn(t,e)}}function MA(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(mn(t,e))return;r.uniform4uiv(this.addr,e),gn(t,e)}}function wA(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);let s;this.type===r.SAMPLER_2D_SHADOW?(ov.compareFunction=kp,s=ov):s=ay,t.setTexture2D(e||s,i)}function EA(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||cy,i)}function TA(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||uy,i)}function bA(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||ly,i)}function AA(r){switch(r){case 5126:return lA;case 35664:return cA;case 35665:return uA;case 35666:return hA;case 35674:return fA;case 35675:return dA;case 35676:return pA;case 5124:case 35670:return mA;case 35667:case 35671:return gA;case 35668:case 35672:return vA;case 35669:case 35673:return _A;case 5125:return xA;case 36294:return yA;case 36295:return SA;case 36296:return MA;case 35678:case 36198:case 36298:case 36306:case 35682:return wA;case 35679:case 36299:case 36307:return EA;case 35680:case 36300:case 36308:case 36293:return TA;case 36289:case 36303:case 36311:case 36292:return bA}}function CA(r,e){r.uniform1fv(this.addr,e)}function RA(r,e){const t=Jo(e,this.size,2);r.uniform2fv(this.addr,t)}function PA(r,e){const t=Jo(e,this.size,3);r.uniform3fv(this.addr,t)}function IA(r,e){const t=Jo(e,this.size,4);r.uniform4fv(this.addr,t)}function LA(r,e){const t=Jo(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function DA(r,e){const t=Jo(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function UA(r,e){const t=Jo(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function NA(r,e){r.uniform1iv(this.addr,e)}function FA(r,e){r.uniform2iv(this.addr,e)}function OA(r,e){r.uniform3iv(this.addr,e)}function BA(r,e){r.uniform4iv(this.addr,e)}function zA(r,e){r.uniform1uiv(this.addr,e)}function kA(r,e){r.uniform2uiv(this.addr,e)}function VA(r,e){r.uniform3uiv(this.addr,e)}function HA(r,e){r.uniform4uiv(this.addr,e)}function GA(r,e,t){const n=this.cache,i=e.length,s=Hh(t,i);mn(n,s)||(r.uniform1iv(this.addr,s),gn(n,s));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||ay,s[a])}function WA(r,e,t){const n=this.cache,i=e.length,s=Hh(t,i);mn(n,s)||(r.uniform1iv(this.addr,s),gn(n,s));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||cy,s[a])}function XA(r,e,t){const n=this.cache,i=e.length,s=Hh(t,i);mn(n,s)||(r.uniform1iv(this.addr,s),gn(n,s));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||uy,s[a])}function jA(r,e,t){const n=this.cache,i=e.length,s=Hh(t,i);mn(n,s)||(r.uniform1iv(this.addr,s),gn(n,s));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||ly,s[a])}function qA(r){switch(r){case 5126:return CA;case 35664:return RA;case 35665:return PA;case 35666:return IA;case 35674:return LA;case 35675:return DA;case 35676:return UA;case 5124:case 35670:return NA;case 35667:case 35671:return FA;case 35668:case 35672:return OA;case 35669:case 35673:return BA;case 5125:return zA;case 36294:return kA;case 36295:return VA;case 36296:return HA;case 35678:case 36198:case 36298:case 36306:case 35682:return GA;case 35679:case 36299:case 36307:return WA;case 35680:case 36300:case 36308:case 36293:return XA;case 36289:case 36303:case 36311:case 36292:return jA}}class YA{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=AA(t.type)}}class ZA{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=qA(t.type)}}class JA{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,a=i.length;s!==a;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const kd=/(\w+)(\])?(\[|\.)?/g;function fv(r,e){r.seq.push(e),r.map[e.id]=e}function KA(r,e,t){const n=r.name,i=n.length;for(kd.lastIndex=0;;){const s=kd.exec(n),a=kd.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&a+2===i){fv(t,h===void 0?new YA(c,r,e):new ZA(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new JA(c),fv(t,p)),t=p}}}class _u{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),a=e.getUniformLocation(t,s.name);KA(s,a,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,a=t.length;s!==a;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const a=e[i];a.id in t&&n.push(a)}return n}}function dv(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const QA=37297;let $A=0;function eC(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let a=i;a<s;a++){const c=a+1;n.push(`${c===e?">":" "} ${c}: ${t[a]}`)}return n.join(`
`)}const pv=new _t;function tC(r){Nt._getMatrix(pv,Nt.workingColorSpace,r);const e=`mat3( ${pv.elements.map(t=>t.toFixed(4))} )`;switch(Nt.getTransfer(r)){case Ja:return[e,"LinearTransferOETF"];case Gt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",r),[e,"LinearTransferOETF"]}}function mv(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const a=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+eC(r.getShaderSource(e),a)}else return i}function nC(r,e){const t=tC(e);return[`vec4 ${r}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function iC(r,e){let t;switch(e){case B_:t="Linear";break;case z_:t="Reinhard";break;case k_:t="Cineon";break;case Cp:t="ACESFilmic";break;case H_:t="AgX";break;case G_:t="Neutral";break;case V_:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const cu=new I;function rC(){Nt.getLuminanceCoefficients(cu);const r=cu.x.toFixed(4),e=cu.y.toFixed(4),t=cu.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${r}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function sC(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(La).join(`
`)}function oC(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function aC(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),a=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[a]={type:s.type,location:r.getAttribLocation(e,a),locationSize:c}}return t}function La(r){return r!==""}function gv(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function vv(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const lC=/^[ \t]*#include +<([\w\d./]+)>/gm;function Tp(r){return r.replace(lC,uC)}const cC=new Map;function uC(r,e){let t=St[e];if(t===void 0){const n=cC.get(e);if(n!==void 0)t=St[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Tp(t)}const hC=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function _v(r){return r.replace(hC,fC)}function fC(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function xv(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function dC(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===uh?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===Ua?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Di&&(e="SHADOWMAP_TYPE_VSM"),e}function pC(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case yr:case Yr:e="ENVMAP_TYPE_CUBE";break;case jo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function mC(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Yr:e="ENVMAP_MODE_REFRACTION";break}return e}function gC(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case cl:e="ENVMAP_BLENDING_MULTIPLY";break;case F_:e="ENVMAP_BLENDING_MIX";break;case O_:e="ENVMAP_BLENDING_ADD";break}return e}function vC(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function _C(r,e,t,n){const i=r.getContext(),s=t.defines;let a=t.vertexShader,c=t.fragmentShader;const u=dC(t),h=pC(t),f=mC(t),p=gC(t),m=vC(t),g=sC(t),x=oC(s),M=i.createProgram();let y,_,E=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(y=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x].filter(La).join(`
`),y.length>0&&(y+=`
`),_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x].filter(La).join(`
`),_.length>0&&(_+=`
`)):(y=[xv(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(La).join(`
`),_=[xv(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==bi?"#define TONE_MAPPING":"",t.toneMapping!==bi?St.tonemapping_pars_fragment:"",t.toneMapping!==bi?iC("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",St.colorspace_pars_fragment,nC("linearToOutputTexel",t.outputColorSpace),rC(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(La).join(`
`)),a=Tp(a),a=gv(a,t),a=vv(a,t),c=Tp(c),c=gv(c,t),c=vv(c,t),a=_v(a),c=_v(c),t.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,y=[g,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,_=["#define varying in",t.glslVersion===mp?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===mp?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const w=E+y+a,T=E+_+c,L=dv(i,i.VERTEX_SHADER,w),R=dv(i,i.FRAGMENT_SHADER,T);i.attachShader(M,L),i.attachShader(M,R),t.index0AttributeName!==void 0?i.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(M,0,"position"),i.linkProgram(M);function U(F){if(r.debug.checkShaderErrors){const q=i.getProgramInfoLog(M).trim(),W=i.getShaderInfoLog(L).trim(),$=i.getShaderInfoLog(R).trim();let oe=!0,ee=!0;if(i.getProgramParameter(M,i.LINK_STATUS)===!1)if(oe=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,M,L,R);else{const ge=mv(i,L,"vertex"),O=mv(i,R,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(M,i.VALIDATE_STATUS)+`

Material Name: `+F.name+`
Material Type: `+F.type+`

Program Info Log: `+q+`
`+ge+`
`+O)}else q!==""?console.warn("THREE.WebGLProgram: Program Info Log:",q):(W===""||$==="")&&(ee=!1);ee&&(F.diagnostics={runnable:oe,programLog:q,vertexShader:{log:W,prefix:y},fragmentShader:{log:$,prefix:_}})}i.deleteShader(L),i.deleteShader(R),N=new _u(i,M),C=aC(i,M)}let N;this.getUniforms=function(){return N===void 0&&U(this),N};let C;this.getAttributes=function(){return C===void 0&&U(this),C};let A=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return A===!1&&(A=i.getProgramParameter(M,QA)),A},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(M),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=$A++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=L,this.fragmentShader=R,this}let xC=0;class yC{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new SC(e),t.set(e,n)),n}}class SC{constructor(e){this.id=xC++,this.code=e,this.usedTimes=0}}function MC(r,e,t,n,i,s,a){const c=new zs,u=new yC,h=new Set,f=[],p=i.logarithmicDepthBuffer,m=i.vertexTextures;let g=i.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(C){return h.add(C),C===0?"uv":`uv${C}`}function y(C,A,F,q,W){const $=q.fog,oe=W.geometry,ee=C.isMeshStandardMaterial?q.environment:null,ge=(C.isMeshStandardMaterial?t:e).get(C.envMap||ee),O=ge&&ge.mapping===jo?ge.image.height:null,Y=x[C.type];C.precision!==null&&(g=i.getMaxPrecision(C.precision),g!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",g,"instead."));const X=oe.morphAttributes.position||oe.morphAttributes.normal||oe.morphAttributes.color,Z=X!==void 0?X.length:0;let fe=0;oe.morphAttributes.position!==void 0&&(fe=1),oe.morphAttributes.normal!==void 0&&(fe=2),oe.morphAttributes.color!==void 0&&(fe=3);let Ee,ne,Se,Pe;if(Y){const At=Ui[Y];Ee=At.vertexShader,ne=At.fragmentShader}else Ee=C.vertexShader,ne=C.fragmentShader,u.update(C),Se=u.getVertexShaderID(C),Pe=u.getFragmentShaderID(C);const Me=r.getRenderTarget(),tt=r.state.buffers.depth.getReversed(),lt=W.isInstancedMesh===!0,it=W.isBatchedMesh===!0,pt=!!C.map,ve=!!C.matcap,ye=!!ge,z=!!C.aoMap,Je=!!C.lightMap,we=!!C.bumpMap,He=!!C.normalMap,Ce=!!C.displacementMap,st=!!C.emissiveMap,De=!!C.metalnessMap,B=!!C.roughnessMap,P=C.anisotropy>0,te=C.clearcoat>0,he=C.dispersion>0,xe=C.iridescence>0,pe=C.sheen>0,Ze=C.transmission>0,Le=P&&!!C.anisotropyMap,Ge=te&&!!C.clearcoatMap,Mt=te&&!!C.clearcoatNormalMap,be=te&&!!C.clearcoatRoughnessMap,Xe=xe&&!!C.iridescenceMap,ot=xe&&!!C.iridescenceThicknessMap,dt=pe&&!!C.sheenColorMap,We=pe&&!!C.sheenRoughnessMap,H=!!C.specularMap,de=!!C.specularColorMap,Be=!!C.specularIntensityMap,V=Ze&&!!C.transmissionMap,Ae=Ze&&!!C.thicknessMap,ae=!!C.gradientMap,me=!!C.alphaMap,ke=C.alphaTest>0,Ne=!!C.alphaHash,rt=!!C.extensions;let Ut=bi;C.toneMapped&&(Me===null||Me.isXRRenderTarget===!0)&&(Ut=r.toneMapping);const jt={shaderID:Y,shaderType:C.type,shaderName:C.name,vertexShader:Ee,fragmentShader:ne,defines:C.defines,customVertexShaderID:Se,customFragmentShaderID:Pe,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:g,batching:it,batchingColor:it&&W._colorsTexture!==null,instancing:lt,instancingColor:lt&&W.instanceColor!==null,instancingMorph:lt&&W.morphTexture!==null,supportsVertexTextures:m,outputColorSpace:Me===null?r.outputColorSpace:Me.isXRRenderTarget===!0?Me.texture.colorSpace:Xs,alphaToCoverage:!!C.alphaToCoverage,map:pt,matcap:ve,envMap:ye,envMapMode:ye&&ge.mapping,envMapCubeUVHeight:O,aoMap:z,lightMap:Je,bumpMap:we,normalMap:He,displacementMap:m&&Ce,emissiveMap:st,normalMapObjectSpace:He&&C.normalMapType===J_,normalMapTangentSpace:He&&C.normalMapType===Kr,metalnessMap:De,roughnessMap:B,anisotropy:P,anisotropyMap:Le,clearcoat:te,clearcoatMap:Ge,clearcoatNormalMap:Mt,clearcoatRoughnessMap:be,dispersion:he,iridescence:xe,iridescenceMap:Xe,iridescenceThicknessMap:ot,sheen:pe,sheenColorMap:dt,sheenRoughnessMap:We,specularMap:H,specularColorMap:de,specularIntensityMap:Be,transmission:Ze,transmissionMap:V,thicknessMap:Ae,gradientMap:ae,opaque:C.transparent===!1&&C.blending===Os&&C.alphaToCoverage===!1,alphaMap:me,alphaTest:ke,alphaHash:Ne,combine:C.combine,mapUv:pt&&M(C.map.channel),aoMapUv:z&&M(C.aoMap.channel),lightMapUv:Je&&M(C.lightMap.channel),bumpMapUv:we&&M(C.bumpMap.channel),normalMapUv:He&&M(C.normalMap.channel),displacementMapUv:Ce&&M(C.displacementMap.channel),emissiveMapUv:st&&M(C.emissiveMap.channel),metalnessMapUv:De&&M(C.metalnessMap.channel),roughnessMapUv:B&&M(C.roughnessMap.channel),anisotropyMapUv:Le&&M(C.anisotropyMap.channel),clearcoatMapUv:Ge&&M(C.clearcoatMap.channel),clearcoatNormalMapUv:Mt&&M(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:be&&M(C.clearcoatRoughnessMap.channel),iridescenceMapUv:Xe&&M(C.iridescenceMap.channel),iridescenceThicknessMapUv:ot&&M(C.iridescenceThicknessMap.channel),sheenColorMapUv:dt&&M(C.sheenColorMap.channel),sheenRoughnessMapUv:We&&M(C.sheenRoughnessMap.channel),specularMapUv:H&&M(C.specularMap.channel),specularColorMapUv:de&&M(C.specularColorMap.channel),specularIntensityMapUv:Be&&M(C.specularIntensityMap.channel),transmissionMapUv:V&&M(C.transmissionMap.channel),thicknessMapUv:Ae&&M(C.thicknessMap.channel),alphaMapUv:me&&M(C.alphaMap.channel),vertexTangents:!!oe.attributes.tangent&&(He||P),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!oe.attributes.color&&oe.attributes.color.itemSize===4,pointsUvs:W.isPoints===!0&&!!oe.attributes.uv&&(pt||me),fog:!!$,useFog:C.fog===!0,fogExp2:!!$&&$.isFogExp2,flatShading:C.flatShading===!0,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:p,reverseDepthBuffer:tt,skinning:W.isSkinnedMesh===!0,morphTargets:oe.morphAttributes.position!==void 0,morphNormals:oe.morphAttributes.normal!==void 0,morphColors:oe.morphAttributes.color!==void 0,morphTargetsCount:Z,morphTextureStride:fe,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numSpotLightMaps:A.spotLightMap.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numSpotLightShadowsWithMaps:A.numSpotLightShadowsWithMaps,numLightProbes:A.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:C.dithering,shadowMapEnabled:r.shadowMap.enabled&&F.length>0,shadowMapType:r.shadowMap.type,toneMapping:Ut,decodeVideoTexture:pt&&C.map.isVideoTexture===!0&&Nt.getTransfer(C.map.colorSpace)===Gt,decodeVideoTextureEmissive:st&&C.emissiveMap.isVideoTexture===!0&&Nt.getTransfer(C.emissiveMap.colorSpace)===Gt,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===Vt,flipSided:C.side===Gn,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionClipCullDistance:rt&&C.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(rt&&C.extensions.multiDraw===!0||it)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:C.customProgramCacheKey()};return jt.vertexUv1s=h.has(1),jt.vertexUv2s=h.has(2),jt.vertexUv3s=h.has(3),h.clear(),jt}function _(C){const A=[];if(C.shaderID?A.push(C.shaderID):(A.push(C.customVertexShaderID),A.push(C.customFragmentShaderID)),C.defines!==void 0)for(const F in C.defines)A.push(F),A.push(C.defines[F]);return C.isRawShaderMaterial===!1&&(E(A,C),w(A,C),A.push(r.outputColorSpace)),A.push(C.customProgramCacheKey),A.join()}function E(C,A){C.push(A.precision),C.push(A.outputColorSpace),C.push(A.envMapMode),C.push(A.envMapCubeUVHeight),C.push(A.mapUv),C.push(A.alphaMapUv),C.push(A.lightMapUv),C.push(A.aoMapUv),C.push(A.bumpMapUv),C.push(A.normalMapUv),C.push(A.displacementMapUv),C.push(A.emissiveMapUv),C.push(A.metalnessMapUv),C.push(A.roughnessMapUv),C.push(A.anisotropyMapUv),C.push(A.clearcoatMapUv),C.push(A.clearcoatNormalMapUv),C.push(A.clearcoatRoughnessMapUv),C.push(A.iridescenceMapUv),C.push(A.iridescenceThicknessMapUv),C.push(A.sheenColorMapUv),C.push(A.sheenRoughnessMapUv),C.push(A.specularMapUv),C.push(A.specularColorMapUv),C.push(A.specularIntensityMapUv),C.push(A.transmissionMapUv),C.push(A.thicknessMapUv),C.push(A.combine),C.push(A.fogExp2),C.push(A.sizeAttenuation),C.push(A.morphTargetsCount),C.push(A.morphAttributeCount),C.push(A.numDirLights),C.push(A.numPointLights),C.push(A.numSpotLights),C.push(A.numSpotLightMaps),C.push(A.numHemiLights),C.push(A.numRectAreaLights),C.push(A.numDirLightShadows),C.push(A.numPointLightShadows),C.push(A.numSpotLightShadows),C.push(A.numSpotLightShadowsWithMaps),C.push(A.numLightProbes),C.push(A.shadowMapType),C.push(A.toneMapping),C.push(A.numClippingPlanes),C.push(A.numClipIntersection),C.push(A.depthPacking)}function w(C,A){c.disableAll(),A.supportsVertexTextures&&c.enable(0),A.instancing&&c.enable(1),A.instancingColor&&c.enable(2),A.instancingMorph&&c.enable(3),A.matcap&&c.enable(4),A.envMap&&c.enable(5),A.normalMapObjectSpace&&c.enable(6),A.normalMapTangentSpace&&c.enable(7),A.clearcoat&&c.enable(8),A.iridescence&&c.enable(9),A.alphaTest&&c.enable(10),A.vertexColors&&c.enable(11),A.vertexAlphas&&c.enable(12),A.vertexUv1s&&c.enable(13),A.vertexUv2s&&c.enable(14),A.vertexUv3s&&c.enable(15),A.vertexTangents&&c.enable(16),A.anisotropy&&c.enable(17),A.alphaHash&&c.enable(18),A.batching&&c.enable(19),A.dispersion&&c.enable(20),A.batchingColor&&c.enable(21),C.push(c.mask),c.disableAll(),A.fog&&c.enable(0),A.useFog&&c.enable(1),A.flatShading&&c.enable(2),A.logarithmicDepthBuffer&&c.enable(3),A.reverseDepthBuffer&&c.enable(4),A.skinning&&c.enable(5),A.morphTargets&&c.enable(6),A.morphNormals&&c.enable(7),A.morphColors&&c.enable(8),A.premultipliedAlpha&&c.enable(9),A.shadowMapEnabled&&c.enable(10),A.doubleSided&&c.enable(11),A.flipSided&&c.enable(12),A.useDepthPacking&&c.enable(13),A.dithering&&c.enable(14),A.transmission&&c.enable(15),A.sheen&&c.enable(16),A.opaque&&c.enable(17),A.pointsUvs&&c.enable(18),A.decodeVideoTexture&&c.enable(19),A.decodeVideoTextureEmissive&&c.enable(20),A.alphaToCoverage&&c.enable(21),C.push(c.mask)}function T(C){const A=x[C.type];let F;if(A){const q=Ui[A];F=cx.clone(q.uniforms)}else F=C.uniforms;return F}function L(C,A){let F;for(let q=0,W=f.length;q<W;q++){const $=f[q];if($.cacheKey===A){F=$,++F.usedTimes;break}}return F===void 0&&(F=new _C(r,A,C,s),f.push(F)),F}function R(C){if(--C.usedTimes===0){const A=f.indexOf(C);f[A]=f[f.length-1],f.pop(),C.destroy()}}function U(C){u.remove(C)}function N(){u.dispose()}return{getParameters:y,getProgramCacheKey:_,getUniforms:T,acquireProgram:L,releaseProgram:R,releaseShaderCache:U,programs:f,dispose:N}}function wC(){let r=new WeakMap;function e(a){return r.has(a)}function t(a){let c=r.get(a);return c===void 0&&(c={},r.set(a,c)),c}function n(a){r.delete(a)}function i(a,c,u){r.get(a)[c]=u}function s(){r=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:s}}function EC(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function yv(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Sv(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function a(p,m,g,x,M,y){let _=r[e];return _===void 0?(_={id:p.id,object:p,geometry:m,material:g,groupOrder:x,renderOrder:p.renderOrder,z:M,group:y},r[e]=_):(_.id=p.id,_.object=p,_.geometry=m,_.material=g,_.groupOrder=x,_.renderOrder=p.renderOrder,_.z=M,_.group=y),e++,_}function c(p,m,g,x,M,y){const _=a(p,m,g,x,M,y);g.transmission>0?n.push(_):g.transparent===!0?i.push(_):t.push(_)}function u(p,m,g,x,M,y){const _=a(p,m,g,x,M,y);g.transmission>0?n.unshift(_):g.transparent===!0?i.unshift(_):t.unshift(_)}function h(p,m){t.length>1&&t.sort(p||EC),n.length>1&&n.sort(m||yv),i.length>1&&i.sort(m||yv)}function f(){for(let p=e,m=r.length;p<m;p++){const g=r[p];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:f,sort:h}}function TC(){let r=new WeakMap;function e(n,i){const s=r.get(n);let a;return s===void 0?(a=new Sv,r.set(n,[a])):i>=s.length?(a=new Sv,s.push(a)):a=s[i],a}function t(){r=new WeakMap}return{get:e,dispose:t}}function bC(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new I,color:new Ie};break;case"SpotLight":t={position:new I,direction:new I,color:new Ie,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new I,color:new Ie,distance:0,decay:0};break;case"HemisphereLight":t={direction:new I,skyColor:new Ie,groundColor:new Ie};break;case"RectAreaLight":t={color:new Ie,position:new I,halfWidth:new I,halfHeight:new I};break}return r[e.id]=t,t}}}function AC(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let CC=0;function RC(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function PC(r){const e=new bC,t=AC(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)n.probe.push(new I);const i=new I,s=new ft,a=new ft;function c(h){let f=0,p=0,m=0;for(let C=0;C<9;C++)n.probe[C].set(0,0,0);let g=0,x=0,M=0,y=0,_=0,E=0,w=0,T=0,L=0,R=0,U=0;h.sort(RC);for(let C=0,A=h.length;C<A;C++){const F=h[C],q=F.color,W=F.intensity,$=F.distance,oe=F.shadow&&F.shadow.map?F.shadow.map.texture:null;if(F.isAmbientLight)f+=q.r*W,p+=q.g*W,m+=q.b*W;else if(F.isLightProbe){for(let ee=0;ee<9;ee++)n.probe[ee].addScaledVector(F.sh.coefficients[ee],W);U++}else if(F.isDirectionalLight){const ee=e.get(F);if(ee.color.copy(F.color).multiplyScalar(F.intensity),F.castShadow){const ge=F.shadow,O=t.get(F);O.shadowIntensity=ge.intensity,O.shadowBias=ge.bias,O.shadowNormalBias=ge.normalBias,O.shadowRadius=ge.radius,O.shadowMapSize=ge.mapSize,n.directionalShadow[g]=O,n.directionalShadowMap[g]=oe,n.directionalShadowMatrix[g]=F.shadow.matrix,E++}n.directional[g]=ee,g++}else if(F.isSpotLight){const ee=e.get(F);ee.position.setFromMatrixPosition(F.matrixWorld),ee.color.copy(q).multiplyScalar(W),ee.distance=$,ee.coneCos=Math.cos(F.angle),ee.penumbraCos=Math.cos(F.angle*(1-F.penumbra)),ee.decay=F.decay,n.spot[M]=ee;const ge=F.shadow;if(F.map&&(n.spotLightMap[L]=F.map,L++,ge.updateMatrices(F),F.castShadow&&R++),n.spotLightMatrix[M]=ge.matrix,F.castShadow){const O=t.get(F);O.shadowIntensity=ge.intensity,O.shadowBias=ge.bias,O.shadowNormalBias=ge.normalBias,O.shadowRadius=ge.radius,O.shadowMapSize=ge.mapSize,n.spotShadow[M]=O,n.spotShadowMap[M]=oe,T++}M++}else if(F.isRectAreaLight){const ee=e.get(F);ee.color.copy(q).multiplyScalar(W),ee.halfWidth.set(F.width*.5,0,0),ee.halfHeight.set(0,F.height*.5,0),n.rectArea[y]=ee,y++}else if(F.isPointLight){const ee=e.get(F);if(ee.color.copy(F.color).multiplyScalar(F.intensity),ee.distance=F.distance,ee.decay=F.decay,F.castShadow){const ge=F.shadow,O=t.get(F);O.shadowIntensity=ge.intensity,O.shadowBias=ge.bias,O.shadowNormalBias=ge.normalBias,O.shadowRadius=ge.radius,O.shadowMapSize=ge.mapSize,O.shadowCameraNear=ge.camera.near,O.shadowCameraFar=ge.camera.far,n.pointShadow[x]=O,n.pointShadowMap[x]=oe,n.pointShadowMatrix[x]=F.shadow.matrix,w++}n.point[x]=ee,x++}else if(F.isHemisphereLight){const ee=e.get(F);ee.skyColor.copy(F.color).multiplyScalar(W),ee.groundColor.copy(F.groundColor).multiplyScalar(W),n.hemi[_]=ee,_++}}y>0&&(r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Oe.LTC_FLOAT_1,n.rectAreaLTC2=Oe.LTC_FLOAT_2):(n.rectAreaLTC1=Oe.LTC_HALF_1,n.rectAreaLTC2=Oe.LTC_HALF_2)),n.ambient[0]=f,n.ambient[1]=p,n.ambient[2]=m;const N=n.hash;(N.directionalLength!==g||N.pointLength!==x||N.spotLength!==M||N.rectAreaLength!==y||N.hemiLength!==_||N.numDirectionalShadows!==E||N.numPointShadows!==w||N.numSpotShadows!==T||N.numSpotMaps!==L||N.numLightProbes!==U)&&(n.directional.length=g,n.spot.length=M,n.rectArea.length=y,n.point.length=x,n.hemi.length=_,n.directionalShadow.length=E,n.directionalShadowMap.length=E,n.pointShadow.length=w,n.pointShadowMap.length=w,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=E,n.pointShadowMatrix.length=w,n.spotLightMatrix.length=T+L-R,n.spotLightMap.length=L,n.numSpotLightShadowsWithMaps=R,n.numLightProbes=U,N.directionalLength=g,N.pointLength=x,N.spotLength=M,N.rectAreaLength=y,N.hemiLength=_,N.numDirectionalShadows=E,N.numPointShadows=w,N.numSpotShadows=T,N.numSpotMaps=L,N.numLightProbes=U,n.version=CC++)}function u(h,f){let p=0,m=0,g=0,x=0,M=0;const y=f.matrixWorldInverse;for(let _=0,E=h.length;_<E;_++){const w=h[_];if(w.isDirectionalLight){const T=n.directional[p];T.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(y),p++}else if(w.isSpotLight){const T=n.spot[g];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(y),T.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(y),g++}else if(w.isRectAreaLight){const T=n.rectArea[x];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(y),a.identity(),s.copy(w.matrixWorld),s.premultiply(y),a.extractRotation(s),T.halfWidth.set(w.width*.5,0,0),T.halfHeight.set(0,w.height*.5,0),T.halfWidth.applyMatrix4(a),T.halfHeight.applyMatrix4(a),x++}else if(w.isPointLight){const T=n.point[m];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(y),m++}else if(w.isHemisphereLight){const T=n.hemi[M];T.direction.setFromMatrixPosition(w.matrixWorld),T.direction.transformDirection(y),M++}}}return{setup:c,setupView:u,state:n}}function Mv(r){const e=new PC(r),t=[],n=[];function i(f){h.camera=f,t.length=0,n.length=0}function s(f){t.push(f)}function a(f){n.push(f)}function c(){e.setup(t)}function u(f){e.setupView(t,f)}const h={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:h,setupLights:c,setupLightsView:u,pushLight:s,pushShadow:a}}function IC(r){let e=new WeakMap;function t(i,s=0){const a=e.get(i);let c;return a===void 0?(c=new Mv(r),e.set(i,[c])):s>=a.length?(c=new Mv(r),a.push(c)):c=a[s],c}function n(){e=new WeakMap}return{get:t,dispose:n}}const LC=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,DC=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function UC(r,e,t){let n=new pl;const i=new ue,s=new ue,a=new Dt,c=new $p({depthPacking:Z_}),u=new em,h={},f=t.maxTextureSize,p={[xr]:Gn,[Gn]:xr,[Vt]:Vt},m=new ii({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ue},radius:{value:4}},vertexShader:LC,fragmentShader:DC}),g=m.clone();g.defines.HORIZONTAL_PASS=1;const x=new yt;x.setAttribute("position",new Ht(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new sn(x,m),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=uh;let _=this.type;this.render=function(R,U,N){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||R.length===0)return;const C=r.getRenderTarget(),A=r.getActiveCubeFace(),F=r.getActiveMipmapLevel(),q=r.state;q.setBlending(Ji),q.buffers.color.setClear(1,1,1,1),q.buffers.depth.setTest(!0),q.setScissorTest(!1);const W=_!==Di&&this.type===Di,$=_===Di&&this.type!==Di;for(let oe=0,ee=R.length;oe<ee;oe++){const ge=R[oe],O=ge.shadow;if(O===void 0){console.warn("THREE.WebGLShadowMap:",ge,"has no shadow.");continue}if(O.autoUpdate===!1&&O.needsUpdate===!1)continue;i.copy(O.mapSize);const Y=O.getFrameExtents();if(i.multiply(Y),s.copy(O.mapSize),(i.x>f||i.y>f)&&(i.x>f&&(s.x=Math.floor(f/Y.x),i.x=s.x*Y.x,O.mapSize.x=s.x),i.y>f&&(s.y=Math.floor(f/Y.y),i.y=s.y*Y.y,O.mapSize.y=s.y)),O.map===null||W===!0||$===!0){const Z=this.type!==Di?{minFilter:on,magFilter:on}:{};O.map!==null&&O.map.dispose(),O.map=new di(i.x,i.y,Z),O.map.texture.name=ge.name+".shadowMap",O.camera.updateProjectionMatrix()}r.setRenderTarget(O.map),r.clear();const X=O.getViewportCount();for(let Z=0;Z<X;Z++){const fe=O.getViewport(Z);a.set(s.x*fe.x,s.y*fe.y,s.x*fe.z,s.y*fe.w),q.viewport(a),O.updateMatrices(ge,Z),n=O.getFrustum(),T(U,N,O.camera,ge,this.type)}O.isPointLightShadow!==!0&&this.type===Di&&E(O,N),O.needsUpdate=!1}_=this.type,y.needsUpdate=!1,r.setRenderTarget(C,A,F)};function E(R,U){const N=e.update(M);m.defines.VSM_SAMPLES!==R.blurSamples&&(m.defines.VSM_SAMPLES=R.blurSamples,g.defines.VSM_SAMPLES=R.blurSamples,m.needsUpdate=!0,g.needsUpdate=!0),R.mapPass===null&&(R.mapPass=new di(i.x,i.y)),m.uniforms.shadow_pass.value=R.map.texture,m.uniforms.resolution.value=R.mapSize,m.uniforms.radius.value=R.radius,r.setRenderTarget(R.mapPass),r.clear(),r.renderBufferDirect(U,null,N,m,M,null),g.uniforms.shadow_pass.value=R.mapPass.texture,g.uniforms.resolution.value=R.mapSize,g.uniforms.radius.value=R.radius,r.setRenderTarget(R.map),r.clear(),r.renderBufferDirect(U,null,N,g,M,null)}function w(R,U,N,C){let A=null;const F=N.isPointLight===!0?R.customDistanceMaterial:R.customDepthMaterial;if(F!==void 0)A=F;else if(A=N.isPointLight===!0?u:c,r.localClippingEnabled&&U.clipShadows===!0&&Array.isArray(U.clippingPlanes)&&U.clippingPlanes.length!==0||U.displacementMap&&U.displacementScale!==0||U.alphaMap&&U.alphaTest>0||U.map&&U.alphaTest>0){const q=A.uuid,W=U.uuid;let $=h[q];$===void 0&&($={},h[q]=$);let oe=$[W];oe===void 0&&(oe=A.clone(),$[W]=oe,U.addEventListener("dispose",L)),A=oe}if(A.visible=U.visible,A.wireframe=U.wireframe,C===Di?A.side=U.shadowSide!==null?U.shadowSide:U.side:A.side=U.shadowSide!==null?U.shadowSide:p[U.side],A.alphaMap=U.alphaMap,A.alphaTest=U.alphaTest,A.map=U.map,A.clipShadows=U.clipShadows,A.clippingPlanes=U.clippingPlanes,A.clipIntersection=U.clipIntersection,A.displacementMap=U.displacementMap,A.displacementScale=U.displacementScale,A.displacementBias=U.displacementBias,A.wireframeLinewidth=U.wireframeLinewidth,A.linewidth=U.linewidth,N.isPointLight===!0&&A.isMeshDistanceMaterial===!0){const q=r.properties.get(A);q.light=N}return A}function T(R,U,N,C,A){if(R.visible===!1)return;if(R.layers.test(U.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&A===Di)&&(!R.frustumCulled||n.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,R.matrixWorld);const W=e.update(R),$=R.material;if(Array.isArray($)){const oe=W.groups;for(let ee=0,ge=oe.length;ee<ge;ee++){const O=oe[ee],Y=$[O.materialIndex];if(Y&&Y.visible){const X=w(R,Y,C,A);R.onBeforeShadow(r,R,U,N,W,X,O),r.renderBufferDirect(N,null,W,X,R,O),R.onAfterShadow(r,R,U,N,W,X,O)}}}else if($.visible){const oe=w(R,$,C,A);R.onBeforeShadow(r,R,U,N,W,oe,null),r.renderBufferDirect(N,null,W,oe,R,null),R.onAfterShadow(r,R,U,N,W,oe,null)}}const q=R.children;for(let W=0,$=q.length;W<$;W++)T(q[W],U,N,C,A)}function L(R){R.target.removeEventListener("dispose",L);for(const N in h){const C=h[N],A=R.target.uuid;A in C&&(C[A].dispose(),delete C[A])}}}const NC={[wu]:Eu,[Tu]:Cu,[bu]:Ru,[Vs]:Au,[Eu]:wu,[Cu]:Tu,[Ru]:bu,[Au]:Vs};function FC(r,e){function t(){let V=!1;const Ae=new Dt;let ae=null;const me=new Dt(0,0,0,0);return{setMask:function(ke){ae!==ke&&!V&&(r.colorMask(ke,ke,ke,ke),ae=ke)},setLocked:function(ke){V=ke},setClear:function(ke,Ne,rt,Ut,jt){jt===!0&&(ke*=Ut,Ne*=Ut,rt*=Ut),Ae.set(ke,Ne,rt,Ut),me.equals(Ae)===!1&&(r.clearColor(ke,Ne,rt,Ut),me.copy(Ae))},reset:function(){V=!1,ae=null,me.set(-1,0,0,0)}}}function n(){let V=!1,Ae=!1,ae=null,me=null,ke=null;return{setReversed:function(Ne){if(Ae!==Ne){const rt=e.get("EXT_clip_control");Ae?rt.clipControlEXT(rt.LOWER_LEFT_EXT,rt.ZERO_TO_ONE_EXT):rt.clipControlEXT(rt.LOWER_LEFT_EXT,rt.NEGATIVE_ONE_TO_ONE_EXT);const Ut=ke;ke=null,this.setClear(Ut)}Ae=Ne},getReversed:function(){return Ae},setTest:function(Ne){Ne?Me(r.DEPTH_TEST):tt(r.DEPTH_TEST)},setMask:function(Ne){ae!==Ne&&!V&&(r.depthMask(Ne),ae=Ne)},setFunc:function(Ne){if(Ae&&(Ne=NC[Ne]),me!==Ne){switch(Ne){case wu:r.depthFunc(r.NEVER);break;case Eu:r.depthFunc(r.ALWAYS);break;case Tu:r.depthFunc(r.LESS);break;case Vs:r.depthFunc(r.LEQUAL);break;case bu:r.depthFunc(r.EQUAL);break;case Au:r.depthFunc(r.GEQUAL);break;case Cu:r.depthFunc(r.GREATER);break;case Ru:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}me=Ne}},setLocked:function(Ne){V=Ne},setClear:function(Ne){ke!==Ne&&(Ae&&(Ne=1-Ne),r.clearDepth(Ne),ke=Ne)},reset:function(){V=!1,ae=null,me=null,ke=null,Ae=!1}}}function i(){let V=!1,Ae=null,ae=null,me=null,ke=null,Ne=null,rt=null,Ut=null,jt=null;return{setTest:function(At){V||(At?Me(r.STENCIL_TEST):tt(r.STENCIL_TEST))},setMask:function(At){Ae!==At&&!V&&(r.stencilMask(At),Ae=At)},setFunc:function(At,an,Tn){(ae!==At||me!==an||ke!==Tn)&&(r.stencilFunc(At,an,Tn),ae=At,me=an,ke=Tn)},setOp:function(At,an,Tn){(Ne!==At||rt!==an||Ut!==Tn)&&(r.stencilOp(At,an,Tn),Ne=At,rt=an,Ut=Tn)},setLocked:function(At){V=At},setClear:function(At){jt!==At&&(r.clearStencil(At),jt=At)},reset:function(){V=!1,Ae=null,ae=null,me=null,ke=null,Ne=null,rt=null,Ut=null,jt=null}}}const s=new t,a=new n,c=new i,u=new WeakMap,h=new WeakMap;let f={},p={},m=new WeakMap,g=[],x=null,M=!1,y=null,_=null,E=null,w=null,T=null,L=null,R=null,U=new Ie(0,0,0),N=0,C=!1,A=null,F=null,q=null,W=null,$=null;const oe=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let ee=!1,ge=0;const O=r.getParameter(r.VERSION);O.indexOf("WebGL")!==-1?(ge=parseFloat(/^WebGL (\d)/.exec(O)[1]),ee=ge>=1):O.indexOf("OpenGL ES")!==-1&&(ge=parseFloat(/^OpenGL ES (\d)/.exec(O)[1]),ee=ge>=2);let Y=null,X={};const Z=r.getParameter(r.SCISSOR_BOX),fe=r.getParameter(r.VIEWPORT),Ee=new Dt().fromArray(Z),ne=new Dt().fromArray(fe);function Se(V,Ae,ae,me){const ke=new Uint8Array(4),Ne=r.createTexture();r.bindTexture(V,Ne),r.texParameteri(V,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(V,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let rt=0;rt<ae;rt++)V===r.TEXTURE_3D||V===r.TEXTURE_2D_ARRAY?r.texImage3D(Ae,0,r.RGBA,1,1,me,0,r.RGBA,r.UNSIGNED_BYTE,ke):r.texImage2D(Ae+rt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,ke);return Ne}const Pe={};Pe[r.TEXTURE_2D]=Se(r.TEXTURE_2D,r.TEXTURE_2D,1),Pe[r.TEXTURE_CUBE_MAP]=Se(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),Pe[r.TEXTURE_2D_ARRAY]=Se(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Pe[r.TEXTURE_3D]=Se(r.TEXTURE_3D,r.TEXTURE_3D,1,1),s.setClear(0,0,0,1),a.setClear(1),c.setClear(0),Me(r.DEPTH_TEST),a.setFunc(Vs),we(!1),He(cp),Me(r.CULL_FACE),z(Ji);function Me(V){f[V]!==!0&&(r.enable(V),f[V]=!0)}function tt(V){f[V]!==!1&&(r.disable(V),f[V]=!1)}function lt(V,Ae){return p[V]!==Ae?(r.bindFramebuffer(V,Ae),p[V]=Ae,V===r.DRAW_FRAMEBUFFER&&(p[r.FRAMEBUFFER]=Ae),V===r.FRAMEBUFFER&&(p[r.DRAW_FRAMEBUFFER]=Ae),!0):!1}function it(V,Ae){let ae=g,me=!1;if(V){ae=m.get(Ae),ae===void 0&&(ae=[],m.set(Ae,ae));const ke=V.textures;if(ae.length!==ke.length||ae[0]!==r.COLOR_ATTACHMENT0){for(let Ne=0,rt=ke.length;Ne<rt;Ne++)ae[Ne]=r.COLOR_ATTACHMENT0+Ne;ae.length=ke.length,me=!0}}else ae[0]!==r.BACK&&(ae[0]=r.BACK,me=!0);me&&r.drawBuffers(ae)}function pt(V){return x!==V?(r.useProgram(V),x=V,!0):!1}const ve={[Wr]:r.FUNC_ADD,[x_]:r.FUNC_SUBTRACT,[y_]:r.FUNC_REVERSE_SUBTRACT};ve[S_]=r.MIN,ve[M_]=r.MAX;const ye={[w_]:r.ZERO,[E_]:r.ONE,[T_]:r.SRC_COLOR,[Su]:r.SRC_ALPHA,[I_]:r.SRC_ALPHA_SATURATE,[R_]:r.DST_COLOR,[A_]:r.DST_ALPHA,[b_]:r.ONE_MINUS_SRC_COLOR,[Mu]:r.ONE_MINUS_SRC_ALPHA,[P_]:r.ONE_MINUS_DST_COLOR,[C_]:r.ONE_MINUS_DST_ALPHA,[L_]:r.CONSTANT_COLOR,[D_]:r.ONE_MINUS_CONSTANT_COLOR,[U_]:r.CONSTANT_ALPHA,[N_]:r.ONE_MINUS_CONSTANT_ALPHA};function z(V,Ae,ae,me,ke,Ne,rt,Ut,jt,At){if(V===Ji){M===!0&&(tt(r.BLEND),M=!1);return}if(M===!1&&(Me(r.BLEND),M=!0),V!==__){if(V!==y||At!==C){if((_!==Wr||T!==Wr)&&(r.blendEquation(r.FUNC_ADD),_=Wr,T=Wr),At)switch(V){case Os:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case up:r.blendFunc(r.ONE,r.ONE);break;case hp:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case fp:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}else switch(V){case Os:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case up:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case hp:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case fp:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}E=null,w=null,L=null,R=null,U.set(0,0,0),N=0,y=V,C=At}return}ke=ke||Ae,Ne=Ne||ae,rt=rt||me,(Ae!==_||ke!==T)&&(r.blendEquationSeparate(ve[Ae],ve[ke]),_=Ae,T=ke),(ae!==E||me!==w||Ne!==L||rt!==R)&&(r.blendFuncSeparate(ye[ae],ye[me],ye[Ne],ye[rt]),E=ae,w=me,L=Ne,R=rt),(Ut.equals(U)===!1||jt!==N)&&(r.blendColor(Ut.r,Ut.g,Ut.b,jt),U.copy(Ut),N=jt),y=V,C=!1}function Je(V,Ae){V.side===Vt?tt(r.CULL_FACE):Me(r.CULL_FACE);let ae=V.side===Gn;Ae&&(ae=!ae),we(ae),V.blending===Os&&V.transparent===!1?z(Ji):z(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.blendColor,V.blendAlpha,V.premultipliedAlpha),a.setFunc(V.depthFunc),a.setTest(V.depthTest),a.setMask(V.depthWrite),s.setMask(V.colorWrite);const me=V.stencilWrite;c.setTest(me),me&&(c.setMask(V.stencilWriteMask),c.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),c.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),st(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?Me(r.SAMPLE_ALPHA_TO_COVERAGE):tt(r.SAMPLE_ALPHA_TO_COVERAGE)}function we(V){A!==V&&(V?r.frontFace(r.CW):r.frontFace(r.CCW),A=V)}function He(V){V!==m_?(Me(r.CULL_FACE),V!==F&&(V===cp?r.cullFace(r.BACK):V===g_?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):tt(r.CULL_FACE),F=V}function Ce(V){V!==q&&(ee&&r.lineWidth(V),q=V)}function st(V,Ae,ae){V?(Me(r.POLYGON_OFFSET_FILL),(W!==Ae||$!==ae)&&(r.polygonOffset(Ae,ae),W=Ae,$=ae)):tt(r.POLYGON_OFFSET_FILL)}function De(V){V?Me(r.SCISSOR_TEST):tt(r.SCISSOR_TEST)}function B(V){V===void 0&&(V=r.TEXTURE0+oe-1),Y!==V&&(r.activeTexture(V),Y=V)}function P(V,Ae,ae){ae===void 0&&(Y===null?ae=r.TEXTURE0+oe-1:ae=Y);let me=X[ae];me===void 0&&(me={type:void 0,texture:void 0},X[ae]=me),(me.type!==V||me.texture!==Ae)&&(Y!==ae&&(r.activeTexture(ae),Y=ae),r.bindTexture(V,Ae||Pe[V]),me.type=V,me.texture=Ae)}function te(){const V=X[Y];V!==void 0&&V.type!==void 0&&(r.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}function he(){try{r.compressedTexImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function xe(){try{r.compressedTexImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function pe(){try{r.texSubImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Ze(){try{r.texSubImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Le(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Ge(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Mt(){try{r.texStorage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function be(){try{r.texStorage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Xe(){try{r.texImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function ot(){try{r.texImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function dt(V){Ee.equals(V)===!1&&(r.scissor(V.x,V.y,V.z,V.w),Ee.copy(V))}function We(V){ne.equals(V)===!1&&(r.viewport(V.x,V.y,V.z,V.w),ne.copy(V))}function H(V,Ae){let ae=h.get(Ae);ae===void 0&&(ae=new WeakMap,h.set(Ae,ae));let me=ae.get(V);me===void 0&&(me=r.getUniformBlockIndex(Ae,V.name),ae.set(V,me))}function de(V,Ae){const me=h.get(Ae).get(V);u.get(Ae)!==me&&(r.uniformBlockBinding(Ae,me,V.__bindingPointIndex),u.set(Ae,me))}function Be(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),a.setReversed(!1),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),f={},Y=null,X={},p={},m=new WeakMap,g=[],x=null,M=!1,y=null,_=null,E=null,w=null,T=null,L=null,R=null,U=new Ie(0,0,0),N=0,C=!1,A=null,F=null,q=null,W=null,$=null,Ee.set(0,0,r.canvas.width,r.canvas.height),ne.set(0,0,r.canvas.width,r.canvas.height),s.reset(),a.reset(),c.reset()}return{buffers:{color:s,depth:a,stencil:c},enable:Me,disable:tt,bindFramebuffer:lt,drawBuffers:it,useProgram:pt,setBlending:z,setMaterial:Je,setFlipSided:we,setCullFace:He,setLineWidth:Ce,setPolygonOffset:st,setScissorTest:De,activeTexture:B,bindTexture:P,unbindTexture:te,compressedTexImage2D:he,compressedTexImage3D:xe,texImage2D:Xe,texImage3D:ot,updateUBOMapping:H,uniformBlockBinding:de,texStorage2D:Mt,texStorage3D:be,texSubImage2D:pe,texSubImage3D:Ze,compressedTexSubImage2D:Le,compressedTexSubImage3D:Ge,scissor:dt,viewport:We,reset:Be}}function OC(r,e,t,n,i,s,a){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new ue,f=new WeakMap;let p;const m=new WeakMap;let g=!1;try{g=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(B,P){return g?new OffscreenCanvas(B,P):$a("canvas")}function M(B,P,te){let he=1;const xe=De(B);if((xe.width>te||xe.height>te)&&(he=te/Math.max(xe.width,xe.height)),he<1)if(typeof HTMLImageElement<"u"&&B instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&B instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&B instanceof ImageBitmap||typeof VideoFrame<"u"&&B instanceof VideoFrame){const pe=Math.floor(he*xe.width),Ze=Math.floor(he*xe.height);p===void 0&&(p=x(pe,Ze));const Le=P?x(pe,Ze):p;return Le.width=pe,Le.height=Ze,Le.getContext("2d").drawImage(B,0,0,pe,Ze),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+xe.width+"x"+xe.height+") to ("+pe+"x"+Ze+")."),Le}else return"data"in B&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+xe.width+"x"+xe.height+")."),B;return B}function y(B){return B.generateMipmaps}function _(B){r.generateMipmap(B)}function E(B){return B.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:B.isWebGL3DRenderTarget?r.TEXTURE_3D:B.isWebGLArrayRenderTarget||B.isCompressedArrayTexture?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D}function w(B,P,te,he,xe=!1){if(B!==null){if(r[B]!==void 0)return r[B];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+B+"'")}let pe=P;if(P===r.RED&&(te===r.FLOAT&&(pe=r.R32F),te===r.HALF_FLOAT&&(pe=r.R16F),te===r.UNSIGNED_BYTE&&(pe=r.R8)),P===r.RED_INTEGER&&(te===r.UNSIGNED_BYTE&&(pe=r.R8UI),te===r.UNSIGNED_SHORT&&(pe=r.R16UI),te===r.UNSIGNED_INT&&(pe=r.R32UI),te===r.BYTE&&(pe=r.R8I),te===r.SHORT&&(pe=r.R16I),te===r.INT&&(pe=r.R32I)),P===r.RG&&(te===r.FLOAT&&(pe=r.RG32F),te===r.HALF_FLOAT&&(pe=r.RG16F),te===r.UNSIGNED_BYTE&&(pe=r.RG8)),P===r.RG_INTEGER&&(te===r.UNSIGNED_BYTE&&(pe=r.RG8UI),te===r.UNSIGNED_SHORT&&(pe=r.RG16UI),te===r.UNSIGNED_INT&&(pe=r.RG32UI),te===r.BYTE&&(pe=r.RG8I),te===r.SHORT&&(pe=r.RG16I),te===r.INT&&(pe=r.RG32I)),P===r.RGB_INTEGER&&(te===r.UNSIGNED_BYTE&&(pe=r.RGB8UI),te===r.UNSIGNED_SHORT&&(pe=r.RGB16UI),te===r.UNSIGNED_INT&&(pe=r.RGB32UI),te===r.BYTE&&(pe=r.RGB8I),te===r.SHORT&&(pe=r.RGB16I),te===r.INT&&(pe=r.RGB32I)),P===r.RGBA_INTEGER&&(te===r.UNSIGNED_BYTE&&(pe=r.RGBA8UI),te===r.UNSIGNED_SHORT&&(pe=r.RGBA16UI),te===r.UNSIGNED_INT&&(pe=r.RGBA32UI),te===r.BYTE&&(pe=r.RGBA8I),te===r.SHORT&&(pe=r.RGBA16I),te===r.INT&&(pe=r.RGBA32I)),P===r.RGB&&te===r.UNSIGNED_INT_5_9_9_9_REV&&(pe=r.RGB9_E5),P===r.RGBA){const Ze=xe?Ja:Nt.getTransfer(he);te===r.FLOAT&&(pe=r.RGBA32F),te===r.HALF_FLOAT&&(pe=r.RGBA16F),te===r.UNSIGNED_BYTE&&(pe=Ze===Gt?r.SRGB8_ALPHA8:r.RGBA8),te===r.UNSIGNED_SHORT_4_4_4_4&&(pe=r.RGBA4),te===r.UNSIGNED_SHORT_5_5_5_1&&(pe=r.RGB5_A1)}return(pe===r.R16F||pe===r.R32F||pe===r.RG16F||pe===r.RG32F||pe===r.RGBA16F||pe===r.RGBA32F)&&e.get("EXT_color_buffer_float"),pe}function T(B,P){let te;return B?P===null||P===Sr||P===Gs?te=r.DEPTH24_STENCIL8:P===ni?te=r.DEPTH32F_STENCIL8:P===Hs&&(te=r.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):P===null||P===Sr||P===Gs?te=r.DEPTH_COMPONENT24:P===ni?te=r.DEPTH_COMPONENT32F:P===Hs&&(te=r.DEPTH_COMPONENT16),te}function L(B,P){return y(B)===!0||B.isFramebufferTexture&&B.minFilter!==on&&B.minFilter!==Kt?Math.log2(Math.max(P.width,P.height))+1:B.mipmaps!==void 0&&B.mipmaps.length>0?B.mipmaps.length:B.isCompressedTexture&&Array.isArray(B.image)?P.mipmaps.length:1}function R(B){const P=B.target;P.removeEventListener("dispose",R),N(P),P.isVideoTexture&&f.delete(P)}function U(B){const P=B.target;P.removeEventListener("dispose",U),A(P)}function N(B){const P=n.get(B);if(P.__webglInit===void 0)return;const te=B.source,he=m.get(te);if(he){const xe=he[P.__cacheKey];xe.usedTimes--,xe.usedTimes===0&&C(B),Object.keys(he).length===0&&m.delete(te)}n.remove(B)}function C(B){const P=n.get(B);r.deleteTexture(P.__webglTexture);const te=B.source,he=m.get(te);delete he[P.__cacheKey],a.memory.textures--}function A(B){const P=n.get(B);if(B.depthTexture&&(B.depthTexture.dispose(),n.remove(B.depthTexture)),B.isWebGLCubeRenderTarget)for(let he=0;he<6;he++){if(Array.isArray(P.__webglFramebuffer[he]))for(let xe=0;xe<P.__webglFramebuffer[he].length;xe++)r.deleteFramebuffer(P.__webglFramebuffer[he][xe]);else r.deleteFramebuffer(P.__webglFramebuffer[he]);P.__webglDepthbuffer&&r.deleteRenderbuffer(P.__webglDepthbuffer[he])}else{if(Array.isArray(P.__webglFramebuffer))for(let he=0;he<P.__webglFramebuffer.length;he++)r.deleteFramebuffer(P.__webglFramebuffer[he]);else r.deleteFramebuffer(P.__webglFramebuffer);if(P.__webglDepthbuffer&&r.deleteRenderbuffer(P.__webglDepthbuffer),P.__webglMultisampledFramebuffer&&r.deleteFramebuffer(P.__webglMultisampledFramebuffer),P.__webglColorRenderbuffer)for(let he=0;he<P.__webglColorRenderbuffer.length;he++)P.__webglColorRenderbuffer[he]&&r.deleteRenderbuffer(P.__webglColorRenderbuffer[he]);P.__webglDepthRenderbuffer&&r.deleteRenderbuffer(P.__webglDepthRenderbuffer)}const te=B.textures;for(let he=0,xe=te.length;he<xe;he++){const pe=n.get(te[he]);pe.__webglTexture&&(r.deleteTexture(pe.__webglTexture),a.memory.textures--),n.remove(te[he])}n.remove(B)}let F=0;function q(){F=0}function W(){const B=F;return B>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+B+" texture units while this GPU supports only "+i.maxTextures),F+=1,B}function $(B){const P=[];return P.push(B.wrapS),P.push(B.wrapT),P.push(B.wrapR||0),P.push(B.magFilter),P.push(B.minFilter),P.push(B.anisotropy),P.push(B.internalFormat),P.push(B.format),P.push(B.type),P.push(B.generateMipmaps),P.push(B.premultiplyAlpha),P.push(B.flipY),P.push(B.unpackAlignment),P.push(B.colorSpace),P.join()}function oe(B,P){const te=n.get(B);if(B.isVideoTexture&&Ce(B),B.isRenderTargetTexture===!1&&B.version>0&&te.__version!==B.version){const he=B.image;if(he===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(he.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ne(te,B,P);return}}t.bindTexture(r.TEXTURE_2D,te.__webglTexture,r.TEXTURE0+P)}function ee(B,P){const te=n.get(B);if(B.version>0&&te.__version!==B.version){ne(te,B,P);return}t.bindTexture(r.TEXTURE_2D_ARRAY,te.__webglTexture,r.TEXTURE0+P)}function ge(B,P){const te=n.get(B);if(B.version>0&&te.__version!==B.version){ne(te,B,P);return}t.bindTexture(r.TEXTURE_3D,te.__webglTexture,r.TEXTURE0+P)}function O(B,P){const te=n.get(B);if(B.version>0&&te.__version!==B.version){Se(te,B,P);return}t.bindTexture(r.TEXTURE_CUBE_MAP,te.__webglTexture,r.TEXTURE0+P)}const Y={[ja]:r.REPEAT,[Ti]:r.CLAMP_TO_EDGE,[qa]:r.MIRRORED_REPEAT},X={[on]:r.NEAREST,[Rp]:r.NEAREST_MIPMAP_NEAREST,[Fo]:r.NEAREST_MIPMAP_LINEAR,[Kt]:r.LINEAR,[Na]:r.LINEAR_MIPMAP_NEAREST,[Zi]:r.LINEAR_MIPMAP_LINEAR},Z={[K_]:r.NEVER,[ix]:r.ALWAYS,[Q_]:r.LESS,[kp]:r.LEQUAL,[$_]:r.EQUAL,[nx]:r.GEQUAL,[ex]:r.GREATER,[tx]:r.NOTEQUAL};function fe(B,P){if(P.type===ni&&e.has("OES_texture_float_linear")===!1&&(P.magFilter===Kt||P.magFilter===Na||P.magFilter===Fo||P.magFilter===Zi||P.minFilter===Kt||P.minFilter===Na||P.minFilter===Fo||P.minFilter===Zi)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(B,r.TEXTURE_WRAP_S,Y[P.wrapS]),r.texParameteri(B,r.TEXTURE_WRAP_T,Y[P.wrapT]),(B===r.TEXTURE_3D||B===r.TEXTURE_2D_ARRAY)&&r.texParameteri(B,r.TEXTURE_WRAP_R,Y[P.wrapR]),r.texParameteri(B,r.TEXTURE_MAG_FILTER,X[P.magFilter]),r.texParameteri(B,r.TEXTURE_MIN_FILTER,X[P.minFilter]),P.compareFunction&&(r.texParameteri(B,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(B,r.TEXTURE_COMPARE_FUNC,Z[P.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(P.magFilter===on||P.minFilter!==Fo&&P.minFilter!==Zi||P.type===ni&&e.has("OES_texture_float_linear")===!1)return;if(P.anisotropy>1||n.get(P).__currentAnisotropy){const te=e.get("EXT_texture_filter_anisotropic");r.texParameterf(B,te.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy}}}function Ee(B,P){let te=!1;B.__webglInit===void 0&&(B.__webglInit=!0,P.addEventListener("dispose",R));const he=P.source;let xe=m.get(he);xe===void 0&&(xe={},m.set(he,xe));const pe=$(P);if(pe!==B.__cacheKey){xe[pe]===void 0&&(xe[pe]={texture:r.createTexture(),usedTimes:0},a.memory.textures++,te=!0),xe[pe].usedTimes++;const Ze=xe[B.__cacheKey];Ze!==void 0&&(xe[B.__cacheKey].usedTimes--,Ze.usedTimes===0&&C(P)),B.__cacheKey=pe,B.__webglTexture=xe[pe].texture}return te}function ne(B,P,te){let he=r.TEXTURE_2D;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(he=r.TEXTURE_2D_ARRAY),P.isData3DTexture&&(he=r.TEXTURE_3D);const xe=Ee(B,P),pe=P.source;t.bindTexture(he,B.__webglTexture,r.TEXTURE0+te);const Ze=n.get(pe);if(pe.version!==Ze.__version||xe===!0){t.activeTexture(r.TEXTURE0+te);const Le=Nt.getPrimaries(Nt.workingColorSpace),Ge=P.colorSpace===mr?null:Nt.getPrimaries(P.colorSpace),Mt=P.colorSpace===mr||Le===Ge?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Mt);let be=M(P.image,!1,i.maxTextureSize);be=st(P,be);const Xe=s.convert(P.format,P.colorSpace),ot=s.convert(P.type);let dt=w(P.internalFormat,Xe,ot,P.colorSpace,P.isVideoTexture);fe(he,P);let We;const H=P.mipmaps,de=P.isVideoTexture!==!0,Be=Ze.__version===void 0||xe===!0,V=pe.dataReady,Ae=L(P,be);if(P.isDepthTexture)dt=T(P.format===Ws,P.type),Be&&(de?t.texStorage2D(r.TEXTURE_2D,1,dt,be.width,be.height):t.texImage2D(r.TEXTURE_2D,0,dt,be.width,be.height,0,Xe,ot,null));else if(P.isDataTexture)if(H.length>0){de&&Be&&t.texStorage2D(r.TEXTURE_2D,Ae,dt,H[0].width,H[0].height);for(let ae=0,me=H.length;ae<me;ae++)We=H[ae],de?V&&t.texSubImage2D(r.TEXTURE_2D,ae,0,0,We.width,We.height,Xe,ot,We.data):t.texImage2D(r.TEXTURE_2D,ae,dt,We.width,We.height,0,Xe,ot,We.data);P.generateMipmaps=!1}else de?(Be&&t.texStorage2D(r.TEXTURE_2D,Ae,dt,be.width,be.height),V&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,be.width,be.height,Xe,ot,be.data)):t.texImage2D(r.TEXTURE_2D,0,dt,be.width,be.height,0,Xe,ot,be.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){de&&Be&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ae,dt,H[0].width,H[0].height,be.depth);for(let ae=0,me=H.length;ae<me;ae++)if(We=H[ae],P.format!==Un)if(Xe!==null)if(de){if(V)if(P.layerUpdates.size>0){const ke=wp(We.width,We.height,P.format,P.type);for(const Ne of P.layerUpdates){const rt=We.data.subarray(Ne*ke/We.data.BYTES_PER_ELEMENT,(Ne+1)*ke/We.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,ae,0,0,Ne,We.width,We.height,1,Xe,rt)}P.clearLayerUpdates()}else t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,ae,0,0,0,We.width,We.height,be.depth,Xe,We.data)}else t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,ae,dt,We.width,We.height,be.depth,0,We.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else de?V&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,ae,0,0,0,We.width,We.height,be.depth,Xe,ot,We.data):t.texImage3D(r.TEXTURE_2D_ARRAY,ae,dt,We.width,We.height,be.depth,0,Xe,ot,We.data)}else{de&&Be&&t.texStorage2D(r.TEXTURE_2D,Ae,dt,H[0].width,H[0].height);for(let ae=0,me=H.length;ae<me;ae++)We=H[ae],P.format!==Un?Xe!==null?de?V&&t.compressedTexSubImage2D(r.TEXTURE_2D,ae,0,0,We.width,We.height,Xe,We.data):t.compressedTexImage2D(r.TEXTURE_2D,ae,dt,We.width,We.height,0,We.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):de?V&&t.texSubImage2D(r.TEXTURE_2D,ae,0,0,We.width,We.height,Xe,ot,We.data):t.texImage2D(r.TEXTURE_2D,ae,dt,We.width,We.height,0,Xe,ot,We.data)}else if(P.isDataArrayTexture)if(de){if(Be&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ae,dt,be.width,be.height,be.depth),V)if(P.layerUpdates.size>0){const ae=wp(be.width,be.height,P.format,P.type);for(const me of P.layerUpdates){const ke=be.data.subarray(me*ae/be.data.BYTES_PER_ELEMENT,(me+1)*ae/be.data.BYTES_PER_ELEMENT);t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,me,be.width,be.height,1,Xe,ot,ke)}P.clearLayerUpdates()}else t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,be.width,be.height,be.depth,Xe,ot,be.data)}else t.texImage3D(r.TEXTURE_2D_ARRAY,0,dt,be.width,be.height,be.depth,0,Xe,ot,be.data);else if(P.isData3DTexture)de?(Be&&t.texStorage3D(r.TEXTURE_3D,Ae,dt,be.width,be.height,be.depth),V&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,be.width,be.height,be.depth,Xe,ot,be.data)):t.texImage3D(r.TEXTURE_3D,0,dt,be.width,be.height,be.depth,0,Xe,ot,be.data);else if(P.isFramebufferTexture){if(Be)if(de)t.texStorage2D(r.TEXTURE_2D,Ae,dt,be.width,be.height);else{let ae=be.width,me=be.height;for(let ke=0;ke<Ae;ke++)t.texImage2D(r.TEXTURE_2D,ke,dt,ae,me,0,Xe,ot,null),ae>>=1,me>>=1}}else if(H.length>0){if(de&&Be){const ae=De(H[0]);t.texStorage2D(r.TEXTURE_2D,Ae,dt,ae.width,ae.height)}for(let ae=0,me=H.length;ae<me;ae++)We=H[ae],de?V&&t.texSubImage2D(r.TEXTURE_2D,ae,0,0,Xe,ot,We):t.texImage2D(r.TEXTURE_2D,ae,dt,Xe,ot,We);P.generateMipmaps=!1}else if(de){if(Be){const ae=De(be);t.texStorage2D(r.TEXTURE_2D,Ae,dt,ae.width,ae.height)}V&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Xe,ot,be)}else t.texImage2D(r.TEXTURE_2D,0,dt,Xe,ot,be);y(P)&&_(he),Ze.__version=pe.version,P.onUpdate&&P.onUpdate(P)}B.__version=P.version}function Se(B,P,te){if(P.image.length!==6)return;const he=Ee(B,P),xe=P.source;t.bindTexture(r.TEXTURE_CUBE_MAP,B.__webglTexture,r.TEXTURE0+te);const pe=n.get(xe);if(xe.version!==pe.__version||he===!0){t.activeTexture(r.TEXTURE0+te);const Ze=Nt.getPrimaries(Nt.workingColorSpace),Le=P.colorSpace===mr?null:Nt.getPrimaries(P.colorSpace),Ge=P.colorSpace===mr||Ze===Le?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ge);const Mt=P.isCompressedTexture||P.image[0].isCompressedTexture,be=P.image[0]&&P.image[0].isDataTexture,Xe=[];for(let me=0;me<6;me++)!Mt&&!be?Xe[me]=M(P.image[me],!0,i.maxCubemapSize):Xe[me]=be?P.image[me].image:P.image[me],Xe[me]=st(P,Xe[me]);const ot=Xe[0],dt=s.convert(P.format,P.colorSpace),We=s.convert(P.type),H=w(P.internalFormat,dt,We,P.colorSpace),de=P.isVideoTexture!==!0,Be=pe.__version===void 0||he===!0,V=xe.dataReady;let Ae=L(P,ot);fe(r.TEXTURE_CUBE_MAP,P);let ae;if(Mt){de&&Be&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Ae,H,ot.width,ot.height);for(let me=0;me<6;me++){ae=Xe[me].mipmaps;for(let ke=0;ke<ae.length;ke++){const Ne=ae[ke];P.format!==Un?dt!==null?de?V&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,ke,0,0,Ne.width,Ne.height,dt,Ne.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,ke,H,Ne.width,Ne.height,0,Ne.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):de?V&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,ke,0,0,Ne.width,Ne.height,dt,We,Ne.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,ke,H,Ne.width,Ne.height,0,dt,We,Ne.data)}}}else{if(ae=P.mipmaps,de&&Be){ae.length>0&&Ae++;const me=De(Xe[0]);t.texStorage2D(r.TEXTURE_CUBE_MAP,Ae,H,me.width,me.height)}for(let me=0;me<6;me++)if(be){de?V&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,0,0,0,Xe[me].width,Xe[me].height,dt,We,Xe[me].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,0,H,Xe[me].width,Xe[me].height,0,dt,We,Xe[me].data);for(let ke=0;ke<ae.length;ke++){const rt=ae[ke].image[me].image;de?V&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,ke+1,0,0,rt.width,rt.height,dt,We,rt.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,ke+1,H,rt.width,rt.height,0,dt,We,rt.data)}}else{de?V&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,0,0,0,dt,We,Xe[me]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,0,H,dt,We,Xe[me]);for(let ke=0;ke<ae.length;ke++){const Ne=ae[ke];de?V&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,ke+1,0,0,dt,We,Ne.image[me]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+me,ke+1,H,dt,We,Ne.image[me])}}}y(P)&&_(r.TEXTURE_CUBE_MAP),pe.__version=xe.version,P.onUpdate&&P.onUpdate(P)}B.__version=P.version}function Pe(B,P,te,he,xe,pe){const Ze=s.convert(te.format,te.colorSpace),Le=s.convert(te.type),Ge=w(te.internalFormat,Ze,Le,te.colorSpace),Mt=n.get(P),be=n.get(te);if(be.__renderTarget=P,!Mt.__hasExternalTextures){const Xe=Math.max(1,P.width>>pe),ot=Math.max(1,P.height>>pe);xe===r.TEXTURE_3D||xe===r.TEXTURE_2D_ARRAY?t.texImage3D(xe,pe,Ge,Xe,ot,P.depth,0,Ze,Le,null):t.texImage2D(xe,pe,Ge,Xe,ot,0,Ze,Le,null)}t.bindFramebuffer(r.FRAMEBUFFER,B),He(P)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,he,xe,be.__webglTexture,0,we(P)):(xe===r.TEXTURE_2D||xe>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&xe<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,he,xe,be.__webglTexture,pe),t.bindFramebuffer(r.FRAMEBUFFER,null)}function Me(B,P,te){if(r.bindRenderbuffer(r.RENDERBUFFER,B),P.depthBuffer){const he=P.depthTexture,xe=he&&he.isDepthTexture?he.type:null,pe=T(P.stencilBuffer,xe),Ze=P.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Le=we(P);He(P)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Le,pe,P.width,P.height):te?r.renderbufferStorageMultisample(r.RENDERBUFFER,Le,pe,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,pe,P.width,P.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,Ze,r.RENDERBUFFER,B)}else{const he=P.textures;for(let xe=0;xe<he.length;xe++){const pe=he[xe],Ze=s.convert(pe.format,pe.colorSpace),Le=s.convert(pe.type),Ge=w(pe.internalFormat,Ze,Le,pe.colorSpace),Mt=we(P);te&&He(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Mt,Ge,P.width,P.height):He(P)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Mt,Ge,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,Ge,P.width,P.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function tt(B,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,B),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const he=n.get(P.depthTexture);he.__renderTarget=P,(!he.__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),oe(P.depthTexture,0);const xe=he.__webglTexture,pe=we(P);if(P.depthTexture.format===jr)He(P)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,xe,0,pe):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,xe,0);else if(P.depthTexture.format===Ws)He(P)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,xe,0,pe):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,xe,0);else throw new Error("Unknown depthTexture format")}function lt(B){const P=n.get(B),te=B.isWebGLCubeRenderTarget===!0;if(P.__boundDepthTexture!==B.depthTexture){const he=B.depthTexture;if(P.__depthDisposeCallback&&P.__depthDisposeCallback(),he){const xe=()=>{delete P.__boundDepthTexture,delete P.__depthDisposeCallback,he.removeEventListener("dispose",xe)};he.addEventListener("dispose",xe),P.__depthDisposeCallback=xe}P.__boundDepthTexture=he}if(B.depthTexture&&!P.__autoAllocateDepthBuffer){if(te)throw new Error("target.depthTexture not supported in Cube render targets");tt(P.__webglFramebuffer,B)}else if(te){P.__webglDepthbuffer=[];for(let he=0;he<6;he++)if(t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer[he]),P.__webglDepthbuffer[he]===void 0)P.__webglDepthbuffer[he]=r.createRenderbuffer(),Me(P.__webglDepthbuffer[he],B,!1);else{const xe=B.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,pe=P.__webglDepthbuffer[he];r.bindRenderbuffer(r.RENDERBUFFER,pe),r.framebufferRenderbuffer(r.FRAMEBUFFER,xe,r.RENDERBUFFER,pe)}}else if(t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer),P.__webglDepthbuffer===void 0)P.__webglDepthbuffer=r.createRenderbuffer(),Me(P.__webglDepthbuffer,B,!1);else{const he=B.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,xe=P.__webglDepthbuffer;r.bindRenderbuffer(r.RENDERBUFFER,xe),r.framebufferRenderbuffer(r.FRAMEBUFFER,he,r.RENDERBUFFER,xe)}t.bindFramebuffer(r.FRAMEBUFFER,null)}function it(B,P,te){const he=n.get(B);P!==void 0&&Pe(he.__webglFramebuffer,B,B.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),te!==void 0&&lt(B)}function pt(B){const P=B.texture,te=n.get(B),he=n.get(P);B.addEventListener("dispose",U);const xe=B.textures,pe=B.isWebGLCubeRenderTarget===!0,Ze=xe.length>1;if(Ze||(he.__webglTexture===void 0&&(he.__webglTexture=r.createTexture()),he.__version=P.version,a.memory.textures++),pe){te.__webglFramebuffer=[];for(let Le=0;Le<6;Le++)if(P.mipmaps&&P.mipmaps.length>0){te.__webglFramebuffer[Le]=[];for(let Ge=0;Ge<P.mipmaps.length;Ge++)te.__webglFramebuffer[Le][Ge]=r.createFramebuffer()}else te.__webglFramebuffer[Le]=r.createFramebuffer()}else{if(P.mipmaps&&P.mipmaps.length>0){te.__webglFramebuffer=[];for(let Le=0;Le<P.mipmaps.length;Le++)te.__webglFramebuffer[Le]=r.createFramebuffer()}else te.__webglFramebuffer=r.createFramebuffer();if(Ze)for(let Le=0,Ge=xe.length;Le<Ge;Le++){const Mt=n.get(xe[Le]);Mt.__webglTexture===void 0&&(Mt.__webglTexture=r.createTexture(),a.memory.textures++)}if(B.samples>0&&He(B)===!1){te.__webglMultisampledFramebuffer=r.createFramebuffer(),te.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,te.__webglMultisampledFramebuffer);for(let Le=0;Le<xe.length;Le++){const Ge=xe[Le];te.__webglColorRenderbuffer[Le]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,te.__webglColorRenderbuffer[Le]);const Mt=s.convert(Ge.format,Ge.colorSpace),be=s.convert(Ge.type),Xe=w(Ge.internalFormat,Mt,be,Ge.colorSpace,B.isXRRenderTarget===!0),ot=we(B);r.renderbufferStorageMultisample(r.RENDERBUFFER,ot,Xe,B.width,B.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Le,r.RENDERBUFFER,te.__webglColorRenderbuffer[Le])}r.bindRenderbuffer(r.RENDERBUFFER,null),B.depthBuffer&&(te.__webglDepthRenderbuffer=r.createRenderbuffer(),Me(te.__webglDepthRenderbuffer,B,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(pe){t.bindTexture(r.TEXTURE_CUBE_MAP,he.__webglTexture),fe(r.TEXTURE_CUBE_MAP,P);for(let Le=0;Le<6;Le++)if(P.mipmaps&&P.mipmaps.length>0)for(let Ge=0;Ge<P.mipmaps.length;Ge++)Pe(te.__webglFramebuffer[Le][Ge],B,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Le,Ge);else Pe(te.__webglFramebuffer[Le],B,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Le,0);y(P)&&_(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ze){for(let Le=0,Ge=xe.length;Le<Ge;Le++){const Mt=xe[Le],be=n.get(Mt);t.bindTexture(r.TEXTURE_2D,be.__webglTexture),fe(r.TEXTURE_2D,Mt),Pe(te.__webglFramebuffer,B,Mt,r.COLOR_ATTACHMENT0+Le,r.TEXTURE_2D,0),y(Mt)&&_(r.TEXTURE_2D)}t.unbindTexture()}else{let Le=r.TEXTURE_2D;if((B.isWebGL3DRenderTarget||B.isWebGLArrayRenderTarget)&&(Le=B.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),t.bindTexture(Le,he.__webglTexture),fe(Le,P),P.mipmaps&&P.mipmaps.length>0)for(let Ge=0;Ge<P.mipmaps.length;Ge++)Pe(te.__webglFramebuffer[Ge],B,P,r.COLOR_ATTACHMENT0,Le,Ge);else Pe(te.__webglFramebuffer,B,P,r.COLOR_ATTACHMENT0,Le,0);y(P)&&_(Le),t.unbindTexture()}B.depthBuffer&&lt(B)}function ve(B){const P=B.textures;for(let te=0,he=P.length;te<he;te++){const xe=P[te];if(y(xe)){const pe=E(B),Ze=n.get(xe).__webglTexture;t.bindTexture(pe,Ze),_(pe),t.unbindTexture()}}}const ye=[],z=[];function Je(B){if(B.samples>0){if(He(B)===!1){const P=B.textures,te=B.width,he=B.height;let xe=r.COLOR_BUFFER_BIT;const pe=B.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Ze=n.get(B),Le=P.length>1;if(Le)for(let Ge=0;Ge<P.length;Ge++)t.bindFramebuffer(r.FRAMEBUFFER,Ze.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ge,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,Ze.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ge,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,Ze.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ze.__webglFramebuffer);for(let Ge=0;Ge<P.length;Ge++){if(B.resolveDepthBuffer&&(B.depthBuffer&&(xe|=r.DEPTH_BUFFER_BIT),B.stencilBuffer&&B.resolveStencilBuffer&&(xe|=r.STENCIL_BUFFER_BIT)),Le){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Ze.__webglColorRenderbuffer[Ge]);const Mt=n.get(P[Ge]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,Mt,0)}r.blitFramebuffer(0,0,te,he,0,0,te,he,xe,r.NEAREST),u===!0&&(ye.length=0,z.length=0,ye.push(r.COLOR_ATTACHMENT0+Ge),B.depthBuffer&&B.resolveDepthBuffer===!1&&(ye.push(pe),z.push(pe),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,z)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,ye))}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Le)for(let Ge=0;Ge<P.length;Ge++){t.bindFramebuffer(r.FRAMEBUFFER,Ze.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ge,r.RENDERBUFFER,Ze.__webglColorRenderbuffer[Ge]);const Mt=n.get(P[Ge]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,Ze.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ge,r.TEXTURE_2D,Mt,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ze.__webglMultisampledFramebuffer)}else if(B.depthBuffer&&B.resolveDepthBuffer===!1&&u){const P=B.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[P])}}}function we(B){return Math.min(i.maxSamples,B.samples)}function He(B){const P=n.get(B);return B.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function Ce(B){const P=a.render.frame;f.get(B)!==P&&(f.set(B,P),B.update())}function st(B,P){const te=B.colorSpace,he=B.format,xe=B.type;return B.isCompressedTexture===!0||B.isVideoTexture===!0||te!==Xs&&te!==mr&&(Nt.getTransfer(te)===Gt?(he!==Un||xe!==Fi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",te)),P}function De(B){return typeof HTMLImageElement<"u"&&B instanceof HTMLImageElement?(h.width=B.naturalWidth||B.width,h.height=B.naturalHeight||B.height):typeof VideoFrame<"u"&&B instanceof VideoFrame?(h.width=B.displayWidth,h.height=B.displayHeight):(h.width=B.width,h.height=B.height),h}this.allocateTextureUnit=W,this.resetTextureUnits=q,this.setTexture2D=oe,this.setTexture2DArray=ee,this.setTexture3D=ge,this.setTextureCube=O,this.rebindTextures=it,this.setupRenderTarget=pt,this.updateRenderTargetMipmap=ve,this.updateMultisampleRenderTarget=Je,this.setupDepthRenderbuffer=lt,this.setupFrameBufferTexture=Pe,this.useMultisampledRTT=He}function hy(r,e){function t(n,i=mr){let s;const a=Nt.getTransfer(i);if(n===Fi)return r.UNSIGNED_BYTE;if(n===dh)return r.UNSIGNED_SHORT_4_4_4_4;if(n===ph)return r.UNSIGNED_SHORT_5_5_5_1;if(n===Lp)return r.UNSIGNED_INT_5_9_9_9_REV;if(n===Pp)return r.BYTE;if(n===Ip)return r.SHORT;if(n===Hs)return r.UNSIGNED_SHORT;if(n===fh)return r.INT;if(n===Sr)return r.UNSIGNED_INT;if(n===ni)return r.FLOAT;if(n===Jr)return r.HALF_FLOAT;if(n===Dp)return r.ALPHA;if(n===Up)return r.RGB;if(n===Un)return r.RGBA;if(n===Np)return r.LUMINANCE;if(n===Fp)return r.LUMINANCE_ALPHA;if(n===jr)return r.DEPTH_COMPONENT;if(n===Ws)return r.DEPTH_STENCIL;if(n===mh)return r.RED;if(n===ul)return r.RED_INTEGER;if(n===Op)return r.RG;if(n===gh)return r.RG_INTEGER;if(n===vh)return r.RGBA_INTEGER;if(n===Fa||n===Oa||n===Ba||n===za)if(a===Gt)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===Fa)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Oa)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Ba)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===za)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===Fa)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Oa)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Ba)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===za)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Pu||n===Iu||n===Lu||n===Du)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===Pu)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Iu)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Lu)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Du)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Uu||n===Nu||n===Fu)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===Uu||n===Nu)return a===Gt?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===Fu)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Ou||n===Bu||n===zu||n===ku||n===Vu||n===Hu||n===Gu||n===Wu||n===Xu||n===ju||n===qu||n===Yu||n===Zu||n===Ju)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===Ou)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Bu)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===zu)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===ku)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Vu)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Hu)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Gu)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Wu)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Xu)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===ju)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===qu)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Yu)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Zu)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Ju)return a===Gt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===ka||n===Ku||n===Qu)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===ka)return a===Gt?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Ku)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Qu)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Bp||n===$u||n===eh||n===th)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===ka)return s.COMPRESSED_RED_RGTC1_EXT;if(n===$u)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===eh)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===th)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Gs?r.UNSIGNED_INT_24_8:r[n]!==void 0?r[n]:null}return{convert:t}}const BC={type:"move"};class Vd{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Bo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Bo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new I,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new I),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Bo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new I,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new I),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,a=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){a=!0;for(const M of e.hand.values()){const y=t.getJointPose(M,n),_=this._getHandJoint(h,M);y!==null&&(_.matrix.fromArray(y.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=y.radius),_.visible=y!==null}const f=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=f.position.distanceTo(p.position),g=.02,x=.005;h.inputState.pinching&&m>g+x?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=g-x&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(BC)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Bo;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const zC=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,kC=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class VC{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new tn,s=e.properties.get(i);s.__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new ii({vertexShader:zC,fragmentShader:kC,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new sn(new es(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class HC extends $i{constructor(e,t){super();const n=this;let i=null,s=1,a=null,c="local-floor",u=1,h=null,f=null,p=null,m=null,g=null,x=null;const M=new VC,y=t.getContextAttributes();let _=null,E=null;const w=[],T=[],L=new ue;let R=null;const U=new en;U.viewport=new Dt;const N=new en;N.viewport=new Dt;const C=[U,N],A=new ey;let F=null,q=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ne){let Se=w[ne];return Se===void 0&&(Se=new Vd,w[ne]=Se),Se.getTargetRaySpace()},this.getControllerGrip=function(ne){let Se=w[ne];return Se===void 0&&(Se=new Vd,w[ne]=Se),Se.getGripSpace()},this.getHand=function(ne){let Se=w[ne];return Se===void 0&&(Se=new Vd,w[ne]=Se),Se.getHandSpace()};function W(ne){const Se=T.indexOf(ne.inputSource);if(Se===-1)return;const Pe=w[Se];Pe!==void 0&&(Pe.update(ne.inputSource,ne.frame,h||a),Pe.dispatchEvent({type:ne.type,data:ne.inputSource}))}function $(){i.removeEventListener("select",W),i.removeEventListener("selectstart",W),i.removeEventListener("selectend",W),i.removeEventListener("squeeze",W),i.removeEventListener("squeezestart",W),i.removeEventListener("squeezeend",W),i.removeEventListener("end",$),i.removeEventListener("inputsourceschange",oe);for(let ne=0;ne<w.length;ne++){const Se=T[ne];Se!==null&&(T[ne]=null,w[ne].disconnect(Se))}F=null,q=null,M.reset(),e.setRenderTarget(_),g=null,m=null,p=null,i=null,E=null,Ee.stop(),n.isPresenting=!1,e.setPixelRatio(R),e.setSize(L.width,L.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ne){s=ne,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ne){c=ne,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||a},this.setReferenceSpace=function(ne){h=ne},this.getBaseLayer=function(){return m!==null?m:g},this.getBinding=function(){return p},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=async function(ne){if(i=ne,i!==null){if(_=e.getRenderTarget(),i.addEventListener("select",W),i.addEventListener("selectstart",W),i.addEventListener("selectend",W),i.addEventListener("squeeze",W),i.addEventListener("squeezestart",W),i.addEventListener("squeezeend",W),i.addEventListener("end",$),i.addEventListener("inputsourceschange",oe),y.xrCompatible!==!0&&await t.makeXRCompatible(),R=e.getPixelRatio(),e.getSize(L),i.enabledFeatures!==void 0&&i.enabledFeatures.includes("layers")){let Pe=null,Me=null,tt=null;y.depth&&(tt=y.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Pe=y.stencil?Ws:jr,Me=y.stencil?Gs:Sr);const lt={colorFormat:t.RGBA8,depthFormat:tt,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(lt),i.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),E=new di(m.textureWidth,m.textureHeight,{format:Un,type:Fi,depthTexture:new bh(m.textureWidth,m.textureHeight,Me,void 0,void 0,void 0,void 0,void 0,void 0,Pe),stencilBuffer:y.stencil,colorSpace:e.outputColorSpace,samples:y.antialias?4:0,resolveDepthBuffer:m.ignoreDepthValues===!1})}else{const Pe={antialias:y.antialias,alpha:!0,depth:y.depth,stencil:y.stencil,framebufferScaleFactor:s};g=new XRWebGLLayer(i,t,Pe),i.updateRenderState({baseLayer:g}),e.setPixelRatio(1),e.setSize(g.framebufferWidth,g.framebufferHeight,!1),E=new di(g.framebufferWidth,g.framebufferHeight,{format:Un,type:Fi,colorSpace:e.outputColorSpace,stencilBuffer:y.stencil})}E.isXRRenderTarget=!0,this.setFoveation(u),h=null,a=await i.requestReferenceSpace(c),Ee.setContext(i),Ee.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return M.getDepthTexture()};function oe(ne){for(let Se=0;Se<ne.removed.length;Se++){const Pe=ne.removed[Se],Me=T.indexOf(Pe);Me>=0&&(T[Me]=null,w[Me].disconnect(Pe))}for(let Se=0;Se<ne.added.length;Se++){const Pe=ne.added[Se];let Me=T.indexOf(Pe);if(Me===-1){for(let lt=0;lt<w.length;lt++)if(lt>=T.length){T.push(Pe),Me=lt;break}else if(T[lt]===null){T[lt]=Pe,Me=lt;break}if(Me===-1)break}const tt=w[Me];tt&&tt.connect(Pe)}}const ee=new I,ge=new I;function O(ne,Se,Pe){ee.setFromMatrixPosition(Se.matrixWorld),ge.setFromMatrixPosition(Pe.matrixWorld);const Me=ee.distanceTo(ge),tt=Se.projectionMatrix.elements,lt=Pe.projectionMatrix.elements,it=tt[14]/(tt[10]-1),pt=tt[14]/(tt[10]+1),ve=(tt[9]+1)/tt[5],ye=(tt[9]-1)/tt[5],z=(tt[8]-1)/tt[0],Je=(lt[8]+1)/lt[0],we=it*z,He=it*Je,Ce=Me/(-z+Je),st=Ce*-z;if(Se.matrixWorld.decompose(ne.position,ne.quaternion,ne.scale),ne.translateX(st),ne.translateZ(Ce),ne.matrixWorld.compose(ne.position,ne.quaternion,ne.scale),ne.matrixWorldInverse.copy(ne.matrixWorld).invert(),tt[10]===-1)ne.projectionMatrix.copy(Se.projectionMatrix),ne.projectionMatrixInverse.copy(Se.projectionMatrixInverse);else{const De=it+Ce,B=pt+Ce,P=we-st,te=He+(Me-st),he=ve*pt/B*De,xe=ye*pt/B*De;ne.projectionMatrix.makePerspective(P,te,he,xe,De,B),ne.projectionMatrixInverse.copy(ne.projectionMatrix).invert()}}function Y(ne,Se){Se===null?ne.matrixWorld.copy(ne.matrix):ne.matrixWorld.multiplyMatrices(Se.matrixWorld,ne.matrix),ne.matrixWorldInverse.copy(ne.matrixWorld).invert()}this.updateCamera=function(ne){if(i===null)return;let Se=ne.near,Pe=ne.far;M.texture!==null&&(M.depthNear>0&&(Se=M.depthNear),M.depthFar>0&&(Pe=M.depthFar)),A.near=N.near=U.near=Se,A.far=N.far=U.far=Pe,(F!==A.near||q!==A.far)&&(i.updateRenderState({depthNear:A.near,depthFar:A.far}),F=A.near,q=A.far),U.layers.mask=ne.layers.mask|2,N.layers.mask=ne.layers.mask|4,A.layers.mask=U.layers.mask|N.layers.mask;const Me=ne.parent,tt=A.cameras;Y(A,Me);for(let lt=0;lt<tt.length;lt++)Y(tt[lt],Me);tt.length===2?O(A,U,N):A.projectionMatrix.copy(U.projectionMatrix),X(ne,A,Me)};function X(ne,Se,Pe){Pe===null?ne.matrix.copy(Se.matrixWorld):(ne.matrix.copy(Pe.matrixWorld),ne.matrix.invert(),ne.matrix.multiply(Se.matrixWorld)),ne.matrix.decompose(ne.position,ne.quaternion,ne.scale),ne.updateMatrixWorld(!0),ne.projectionMatrix.copy(Se.projectionMatrix),ne.projectionMatrixInverse.copy(Se.projectionMatrixInverse),ne.isPerspectiveCamera&&(ne.fov=Ho*2*Math.atan(1/ne.projectionMatrix.elements[5]),ne.zoom=1)}this.getCamera=function(){return A},this.getFoveation=function(){if(!(m===null&&g===null))return u},this.setFoveation=function(ne){u=ne,m!==null&&(m.fixedFoveation=ne),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=ne)},this.hasDepthSensing=function(){return M.texture!==null},this.getDepthSensingMesh=function(){return M.getMesh(A)};let Z=null;function fe(ne,Se){if(f=Se.getViewerPose(h||a),x=Se,f!==null){const Pe=f.views;g!==null&&(e.setRenderTargetFramebuffer(E,g.framebuffer),e.setRenderTarget(E));let Me=!1;Pe.length!==A.cameras.length&&(A.cameras.length=0,Me=!0);for(let lt=0;lt<Pe.length;lt++){const it=Pe[lt];let pt=null;if(g!==null)pt=g.getViewport(it);else{const ye=p.getViewSubImage(m,it);pt=ye.viewport,lt===0&&(e.setRenderTargetTextures(E,ye.colorTexture,m.ignoreDepthValues?void 0:ye.depthStencilTexture),e.setRenderTarget(E))}let ve=C[lt];ve===void 0&&(ve=new en,ve.layers.enable(lt),ve.viewport=new Dt,C[lt]=ve),ve.matrix.fromArray(it.transform.matrix),ve.matrix.decompose(ve.position,ve.quaternion,ve.scale),ve.projectionMatrix.fromArray(it.projectionMatrix),ve.projectionMatrixInverse.copy(ve.projectionMatrix).invert(),ve.viewport.set(pt.x,pt.y,pt.width,pt.height),lt===0&&(A.matrix.copy(ve.matrix),A.matrix.decompose(A.position,A.quaternion,A.scale)),Me===!0&&A.cameras.push(ve)}const tt=i.enabledFeatures;if(tt&&tt.includes("depth-sensing")){const lt=p.getDepthInformation(Pe[0]);lt&&lt.isValid&&lt.texture&&M.init(e,lt,i.renderState)}}for(let Pe=0;Pe<w.length;Pe++){const Me=T[Pe],tt=w[Pe];Me!==null&&tt!==void 0&&tt.update(Me,Se,h||a)}Z&&Z(ne,Se),Se.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:Se}),x=null}const Ee=new oy;Ee.setAnimationLoop(fe),this.setAnimationLoop=function(ne){Z=ne},this.dispose=function(){}}}const bs=new Yt,GC=new ft;function WC(r,e){function t(y,_){y.matrixAutoUpdate===!0&&y.updateMatrix(),_.value.copy(y.matrix)}function n(y,_){_.color.getRGB(y.fogColor.value,lx(r)),_.isFog?(y.fogNear.value=_.near,y.fogFar.value=_.far):_.isFogExp2&&(y.fogDensity.value=_.density)}function i(y,_,E,w,T){_.isMeshBasicMaterial||_.isMeshLambertMaterial?s(y,_):_.isMeshToonMaterial?(s(y,_),p(y,_)):_.isMeshPhongMaterial?(s(y,_),f(y,_)):_.isMeshStandardMaterial?(s(y,_),m(y,_),_.isMeshPhysicalMaterial&&g(y,_,T)):_.isMeshMatcapMaterial?(s(y,_),x(y,_)):_.isMeshDepthMaterial?s(y,_):_.isMeshDistanceMaterial?(s(y,_),M(y,_)):_.isMeshNormalMaterial?s(y,_):_.isLineBasicMaterial?(a(y,_),_.isLineDashedMaterial&&c(y,_)):_.isPointsMaterial?u(y,_,E,w):_.isSpriteMaterial?h(y,_):_.isShadowMaterial?(y.color.value.copy(_.color),y.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function s(y,_){y.opacity.value=_.opacity,_.color&&y.diffuse.value.copy(_.color),_.emissive&&y.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(y.map.value=_.map,t(_.map,y.mapTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.bumpMap&&(y.bumpMap.value=_.bumpMap,t(_.bumpMap,y.bumpMapTransform),y.bumpScale.value=_.bumpScale,_.side===Gn&&(y.bumpScale.value*=-1)),_.normalMap&&(y.normalMap.value=_.normalMap,t(_.normalMap,y.normalMapTransform),y.normalScale.value.copy(_.normalScale),_.side===Gn&&y.normalScale.value.negate()),_.displacementMap&&(y.displacementMap.value=_.displacementMap,t(_.displacementMap,y.displacementMapTransform),y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias),_.emissiveMap&&(y.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,y.emissiveMapTransform)),_.specularMap&&(y.specularMap.value=_.specularMap,t(_.specularMap,y.specularMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest);const E=e.get(_),w=E.envMap,T=E.envMapRotation;w&&(y.envMap.value=w,bs.copy(T),bs.x*=-1,bs.y*=-1,bs.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(bs.y*=-1,bs.z*=-1),y.envMapRotation.value.setFromMatrix4(GC.makeRotationFromEuler(bs)),y.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,y.reflectivity.value=_.reflectivity,y.ior.value=_.ior,y.refractionRatio.value=_.refractionRatio),_.lightMap&&(y.lightMap.value=_.lightMap,y.lightMapIntensity.value=_.lightMapIntensity,t(_.lightMap,y.lightMapTransform)),_.aoMap&&(y.aoMap.value=_.aoMap,y.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,y.aoMapTransform))}function a(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,_.map&&(y.map.value=_.map,t(_.map,y.mapTransform))}function c(y,_){y.dashSize.value=_.dashSize,y.totalSize.value=_.dashSize+_.gapSize,y.scale.value=_.scale}function u(y,_,E,w){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.size.value=_.size*E,y.scale.value=w*.5,_.map&&(y.map.value=_.map,t(_.map,y.uvTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest)}function h(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.rotation.value=_.rotation,_.map&&(y.map.value=_.map,t(_.map,y.mapTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest)}function f(y,_){y.specular.value.copy(_.specular),y.shininess.value=Math.max(_.shininess,1e-4)}function p(y,_){_.gradientMap&&(y.gradientMap.value=_.gradientMap)}function m(y,_){y.metalness.value=_.metalness,_.metalnessMap&&(y.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,y.metalnessMapTransform)),y.roughness.value=_.roughness,_.roughnessMap&&(y.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,y.roughnessMapTransform)),_.envMap&&(y.envMapIntensity.value=_.envMapIntensity)}function g(y,_,E){y.ior.value=_.ior,_.sheen>0&&(y.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),y.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(y.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,y.sheenColorMapTransform)),_.sheenRoughnessMap&&(y.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,y.sheenRoughnessMapTransform))),_.clearcoat>0&&(y.clearcoat.value=_.clearcoat,y.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(y.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,y.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(y.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,y.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(y.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,y.clearcoatNormalMapTransform),y.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Gn&&y.clearcoatNormalScale.value.negate())),_.dispersion>0&&(y.dispersion.value=_.dispersion),_.iridescence>0&&(y.iridescence.value=_.iridescence,y.iridescenceIOR.value=_.iridescenceIOR,y.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],y.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(y.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,y.iridescenceMapTransform)),_.iridescenceThicknessMap&&(y.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,y.iridescenceThicknessMapTransform))),_.transmission>0&&(y.transmission.value=_.transmission,y.transmissionSamplerMap.value=E.texture,y.transmissionSamplerSize.value.set(E.width,E.height),_.transmissionMap&&(y.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,y.transmissionMapTransform)),y.thickness.value=_.thickness,_.thicknessMap&&(y.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,y.thicknessMapTransform)),y.attenuationDistance.value=_.attenuationDistance,y.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(y.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(y.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,y.anisotropyMapTransform))),y.specularIntensity.value=_.specularIntensity,y.specularColor.value.copy(_.specularColor),_.specularColorMap&&(y.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,y.specularColorMapTransform)),_.specularIntensityMap&&(y.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,y.specularIntensityMapTransform))}function x(y,_){_.matcap&&(y.matcap.value=_.matcap)}function M(y,_){const E=e.get(_).light;y.referencePosition.value.setFromMatrixPosition(E.matrixWorld),y.nearDistance.value=E.shadow.camera.near,y.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function XC(r,e,t,n){let i={},s={},a=[];const c=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function u(E,w){const T=w.program;n.uniformBlockBinding(E,T)}function h(E,w){let T=i[E.id];T===void 0&&(x(E),T=f(E),i[E.id]=T,E.addEventListener("dispose",y));const L=w.program;n.updateUBOMapping(E,L);const R=e.render.frame;s[E.id]!==R&&(m(E),s[E.id]=R)}function f(E){const w=p();E.__bindingPointIndex=w;const T=r.createBuffer(),L=E.__size,R=E.usage;return r.bindBuffer(r.UNIFORM_BUFFER,T),r.bufferData(r.UNIFORM_BUFFER,L,R),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,w,T),T}function p(){for(let E=0;E<c;E++)if(a.indexOf(E)===-1)return a.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(E){const w=i[E.id],T=E.uniforms,L=E.__cache;r.bindBuffer(r.UNIFORM_BUFFER,w);for(let R=0,U=T.length;R<U;R++){const N=Array.isArray(T[R])?T[R]:[T[R]];for(let C=0,A=N.length;C<A;C++){const F=N[C];if(g(F,R,C,L)===!0){const q=F.__offset,W=Array.isArray(F.value)?F.value:[F.value];let $=0;for(let oe=0;oe<W.length;oe++){const ee=W[oe],ge=M(ee);typeof ee=="number"||typeof ee=="boolean"?(F.__data[0]=ee,r.bufferSubData(r.UNIFORM_BUFFER,q+$,F.__data)):ee.isMatrix3?(F.__data[0]=ee.elements[0],F.__data[1]=ee.elements[1],F.__data[2]=ee.elements[2],F.__data[3]=0,F.__data[4]=ee.elements[3],F.__data[5]=ee.elements[4],F.__data[6]=ee.elements[5],F.__data[7]=0,F.__data[8]=ee.elements[6],F.__data[9]=ee.elements[7],F.__data[10]=ee.elements[8],F.__data[11]=0):(ee.toArray(F.__data,$),$+=ge.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,q,F.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function g(E,w,T,L){const R=E.value,U=w+"_"+T;if(L[U]===void 0)return typeof R=="number"||typeof R=="boolean"?L[U]=R:L[U]=R.clone(),!0;{const N=L[U];if(typeof R=="number"||typeof R=="boolean"){if(N!==R)return L[U]=R,!0}else if(N.equals(R)===!1)return N.copy(R),!0}return!1}function x(E){const w=E.uniforms;let T=0;const L=16;for(let U=0,N=w.length;U<N;U++){const C=Array.isArray(w[U])?w[U]:[w[U]];for(let A=0,F=C.length;A<F;A++){const q=C[A],W=Array.isArray(q.value)?q.value:[q.value];for(let $=0,oe=W.length;$<oe;$++){const ee=W[$],ge=M(ee),O=T%L,Y=O%ge.boundary,X=O+Y;T+=Y,X!==0&&L-X<ge.storage&&(T+=L-X),q.__data=new Float32Array(ge.storage/Float32Array.BYTES_PER_ELEMENT),q.__offset=T,T+=ge.storage}}}const R=T%L;return R>0&&(T+=L-R),E.__size=T,E.__cache={},this}function M(E){const w={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(w.boundary=4,w.storage=4):E.isVector2?(w.boundary=8,w.storage=8):E.isVector3||E.isColor?(w.boundary=16,w.storage=12):E.isVector4?(w.boundary=16,w.storage=16):E.isMatrix3?(w.boundary=48,w.storage=48):E.isMatrix4?(w.boundary=64,w.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),w}function y(E){const w=E.target;w.removeEventListener("dispose",y);const T=a.indexOf(w.__bindingPointIndex);a.splice(T,1),r.deleteBuffer(i[w.id]),delete i[w.id],delete s[w.id]}function _(){for(const E in i)r.deleteBuffer(i[E]);a=[],i={},s={}}return{bind:u,update:h,dispose:_}}class fy{constructor(e={}){const{canvas:t=sx(),context:n=null,depth:i=!0,stencil:s=!1,alpha:a=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:p=!1,reverseDepthBuffer:m=!1}=e;this.isWebGLRenderer=!0;let g;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");g=n.getContextAttributes().alpha}else g=a;const x=new Uint32Array(4),M=new Int32Array(4);let y=null,_=null;const E=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=ei,this.toneMapping=bi,this.toneMappingExposure=1;const T=this;let L=!1,R=0,U=0,N=null,C=-1,A=null;const F=new Dt,q=new Dt;let W=null;const $=new Ie(0);let oe=0,ee=t.width,ge=t.height,O=1,Y=null,X=null;const Z=new Dt(0,0,ee,ge),fe=new Dt(0,0,ee,ge);let Ee=!1;const ne=new pl;let Se=!1,Pe=!1;this.transmissionResolutionScale=1;const Me=new ft,tt=new ft,lt=new I,it=new Dt,pt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ve=!1;function ye(){return N===null?O:1}let z=n;function Je(D,J){return t.getContext(D,J)}try{const D={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:f,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${ll}`),t.addEventListener("webglcontextlost",me,!1),t.addEventListener("webglcontextrestored",ke,!1),t.addEventListener("webglcontextcreationerror",Ne,!1),z===null){const J="webgl2";if(z=Je(J,D),z===null)throw Je(J)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(D){throw console.error("THREE.WebGLRenderer: "+D.message),D}let we,He,Ce,st,De,B,P,te,he,xe,pe,Ze,Le,Ge,Mt,be,Xe,ot,dt,We,H,de,Be,V;function Ae(){we=new nA(z),we.init(),de=new hy(z,we),He=new Jb(z,we,e,de),Ce=new FC(z,we),He.reverseDepthBuffer&&m&&Ce.buffers.depth.setReversed(!0),st=new sA(z),De=new wC,B=new OC(z,we,Ce,De,He,de,st),P=new Qb(T),te=new tA(T),he=new fE(z),Be=new Yb(z,he),xe=new iA(z,he,st,Be),pe=new aA(z,xe,he,st),dt=new oA(z,He,B),be=new Kb(De),Ze=new MC(T,P,te,we,He,Be,be),Le=new WC(T,De),Ge=new TC,Mt=new IC(we),ot=new qb(T,P,te,Ce,pe,g,u),Xe=new UC(T,pe,He),V=new XC(z,st,He,Ce),We=new Zb(z,we,st),H=new rA(z,we,st),st.programs=Ze.programs,T.capabilities=He,T.extensions=we,T.properties=De,T.renderLists=Ge,T.shadowMap=Xe,T.state=Ce,T.info=st}Ae();const ae=new HC(T,z);this.xr=ae,this.getContext=function(){return z},this.getContextAttributes=function(){return z.getContextAttributes()},this.forceContextLoss=function(){const D=we.get("WEBGL_lose_context");D&&D.loseContext()},this.forceContextRestore=function(){const D=we.get("WEBGL_lose_context");D&&D.restoreContext()},this.getPixelRatio=function(){return O},this.setPixelRatio=function(D){D!==void 0&&(O=D,this.setSize(ee,ge,!1))},this.getSize=function(D){return D.set(ee,ge)},this.setSize=function(D,J,re=!0){if(ae.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}ee=D,ge=J,t.width=Math.floor(D*O),t.height=Math.floor(J*O),re===!0&&(t.style.width=D+"px",t.style.height=J+"px"),this.setViewport(0,0,D,J)},this.getDrawingBufferSize=function(D){return D.set(ee*O,ge*O).floor()},this.setDrawingBufferSize=function(D,J,re){ee=D,ge=J,O=re,t.width=Math.floor(D*re),t.height=Math.floor(J*re),this.setViewport(0,0,D,J)},this.getCurrentViewport=function(D){return D.copy(F)},this.getViewport=function(D){return D.copy(Z)},this.setViewport=function(D,J,re,se){D.isVector4?Z.set(D.x,D.y,D.z,D.w):Z.set(D,J,re,se),Ce.viewport(F.copy(Z).multiplyScalar(O).round())},this.getScissor=function(D){return D.copy(fe)},this.setScissor=function(D,J,re,se){D.isVector4?fe.set(D.x,D.y,D.z,D.w):fe.set(D,J,re,se),Ce.scissor(q.copy(fe).multiplyScalar(O).round())},this.getScissorTest=function(){return Ee},this.setScissorTest=function(D){Ce.setScissorTest(Ee=D)},this.setOpaqueSort=function(D){Y=D},this.setTransparentSort=function(D){X=D},this.getClearColor=function(D){return D.copy(ot.getClearColor())},this.setClearColor=function(){ot.setClearColor.apply(ot,arguments)},this.getClearAlpha=function(){return ot.getClearAlpha()},this.setClearAlpha=function(){ot.setClearAlpha.apply(ot,arguments)},this.clear=function(D=!0,J=!0,re=!0){let se=0;if(D){let K=!1;if(N!==null){const Te=N.texture.format;K=Te===vh||Te===gh||Te===ul}if(K){const Te=N.texture.type,Fe=Te===Fi||Te===Sr||Te===Hs||Te===Gs||Te===dh||Te===ph,je=ot.getClearColor(),qe=ot.getClearAlpha(),ct=je.r,at=je.g,Ue=je.b;Fe?(x[0]=ct,x[1]=at,x[2]=Ue,x[3]=qe,z.clearBufferuiv(z.COLOR,0,x)):(M[0]=ct,M[1]=at,M[2]=Ue,M[3]=qe,z.clearBufferiv(z.COLOR,0,M))}else se|=z.COLOR_BUFFER_BIT}J&&(se|=z.DEPTH_BUFFER_BIT),re&&(se|=z.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),z.clear(se)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",me,!1),t.removeEventListener("webglcontextrestored",ke,!1),t.removeEventListener("webglcontextcreationerror",Ne,!1),ot.dispose(),Ge.dispose(),Mt.dispose(),De.dispose(),P.dispose(),te.dispose(),pe.dispose(),Be.dispose(),V.dispose(),Ze.dispose(),ae.dispose(),ae.removeEventListener("sessionstart",Ml),ae.removeEventListener("sessionend",wl),zi.stop()};function me(D){D.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),L=!0}function ke(){console.log("THREE.WebGLRenderer: Context Restored."),L=!1;const D=st.autoReset,J=Xe.enabled,re=Xe.autoUpdate,se=Xe.needsUpdate,K=Xe.type;Ae(),st.autoReset=D,Xe.enabled=J,Xe.autoUpdate=re,Xe.needsUpdate=se,Xe.type=K}function Ne(D){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",D.statusMessage)}function rt(D){const J=D.target;J.removeEventListener("dispose",rt),Ut(J)}function Ut(D){jt(D),De.remove(D)}function jt(D){const J=De.get(D).programs;J!==void 0&&(J.forEach(function(re){Ze.releaseProgram(re)}),D.isShaderMaterial&&Ze.releaseShaderCache(D))}this.renderBufferDirect=function(D,J,re,se,K,Te){J===null&&(J=pt);const Fe=K.isMesh&&K.matrixWorld.determinant()<0,je=Wh(D,J,re,se,K);Ce.setMaterial(se,Fe);let qe=re.index,ct=1;if(se.wireframe===!0){if(qe=xe.getWireframeAttribute(re),qe===void 0)return;ct=2}const at=re.drawRange,Ue=re.attributes.position;let Qe=at.start*ct,Tt=(at.start+at.count)*ct;Te!==null&&(Qe=Math.max(Qe,Te.start*ct),Tt=Math.min(Tt,(Te.start+Te.count)*ct)),qe!==null?(Qe=Math.max(Qe,0),Tt=Math.min(Tt,qe.count)):Ue!=null&&(Qe=Math.max(Qe,0),Tt=Math.min(Tt,Ue.count));const Ct=Tt-Qe;if(Ct<0||Ct===1/0)return;Be.setup(K,se,je,re,qe);let Rt,wt=We;if(qe!==null&&(Rt=he.get(qe),wt=H,wt.setIndex(Rt)),K.isMesh)se.wireframe===!0?(Ce.setLineWidth(se.wireframeLinewidth*ye()),wt.setMode(z.LINES)):wt.setMode(z.TRIANGLES);else if(K.isLine){let $e=se.linewidth;$e===void 0&&($e=1),Ce.setLineWidth($e*ye()),K.isLineSegments?wt.setMode(z.LINES):K.isLineLoop?wt.setMode(z.LINE_LOOP):wt.setMode(z.LINE_STRIP)}else K.isPoints?wt.setMode(z.POINTS):K.isSprite&&wt.setMode(z.TRIANGLES);if(K.isBatchedMesh)if(K._multiDrawInstances!==null)wt.renderMultiDrawInstances(K._multiDrawStarts,K._multiDrawCounts,K._multiDrawCount,K._multiDrawInstances);else if(we.get("WEBGL_multi_draw"))wt.renderMultiDraw(K._multiDrawStarts,K._multiDrawCounts,K._multiDrawCount);else{const $e=K._multiDrawStarts,Ot=K._multiDrawCounts,Lt=K._multiDrawCount,jn=qe?he.get(qe).bytesPerElement:1,nr=De.get(se).currentProgram.getUniforms();for(let vn=0;vn<Lt;vn++)nr.setValue(z,"_gl_DrawID",vn),wt.render($e[vn]/jn,Ot[vn])}else if(K.isInstancedMesh)wt.renderInstances(Qe,Ct,K.count);else if(re.isInstancedBufferGeometry){const $e=re._maxInstanceCount!==void 0?re._maxInstanceCount:1/0,Ot=Math.min(re.instanceCount,$e);wt.renderInstances(Qe,Ct,Ot)}else wt.render(Qe,Ct)};function At(D,J,re){D.transparent===!0&&D.side===Vt&&D.forceSinglePass===!1?(D.side=Gn,D.needsUpdate=!0,Qs(D,J,re),D.side=xr,D.needsUpdate=!0,Qs(D,J,re),D.side=Vt):Qs(D,J,re)}this.compile=function(D,J,re=null){re===null&&(re=D),_=Mt.get(re),_.init(J),w.push(_),re.traverseVisible(function(K){K.isLight&&K.layers.test(J.layers)&&(_.pushLight(K),K.castShadow&&_.pushShadow(K))}),D!==re&&D.traverseVisible(function(K){K.isLight&&K.layers.test(J.layers)&&(_.pushLight(K),K.castShadow&&_.pushShadow(K))}),_.setupLights();const se=new Set;return D.traverse(function(K){if(!(K.isMesh||K.isPoints||K.isLine||K.isSprite))return;const Te=K.material;if(Te)if(Array.isArray(Te))for(let Fe=0;Fe<Te.length;Fe++){const je=Te[Fe];At(je,re,K),se.add(je)}else At(Te,re,K),se.add(Te)}),w.pop(),_=null,se},this.compileAsync=function(D,J,re=null){const se=this.compile(D,J,re);return new Promise(K=>{function Te(){if(se.forEach(function(Fe){De.get(Fe).currentProgram.isReady()&&se.delete(Fe)}),se.size===0){K(D);return}setTimeout(Te,10)}we.get("KHR_parallel_shader_compile")!==null?Te():setTimeout(Te,10)})};let an=null;function Tn(D){an&&an(D)}function Ml(){zi.stop()}function wl(){zi.start()}const zi=new oy;zi.setAnimationLoop(Tn),typeof self<"u"&&zi.setContext(self),this.setAnimationLoop=function(D){an=D,ae.setAnimationLoop(D),D===null?zi.stop():zi.start()},ae.addEventListener("sessionstart",Ml),ae.addEventListener("sessionend",wl),this.render=function(D,J){if(J!==void 0&&J.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(L===!0)return;if(D.matrixWorldAutoUpdate===!0&&D.updateMatrixWorld(),J.parent===null&&J.matrixWorldAutoUpdate===!0&&J.updateMatrixWorld(),ae.enabled===!0&&ae.isPresenting===!0&&(ae.cameraAutoUpdate===!0&&ae.updateCamera(J),J=ae.getCamera()),D.isScene===!0&&D.onBeforeRender(T,D,J,N),_=Mt.get(D,w.length),_.init(J),w.push(_),tt.multiplyMatrices(J.projectionMatrix,J.matrixWorldInverse),ne.setFromProjectionMatrix(tt),Pe=this.localClippingEnabled,Se=be.init(this.clippingPlanes,Pe),y=Ge.get(D,E.length),y.init(),E.push(y),ae.enabled===!0&&ae.isPresenting===!0){const Te=T.xr.getDepthSensingMesh();Te!==null&&rs(Te,J,-1/0,T.sortObjects)}rs(D,J,0,T.sortObjects),y.finish(),T.sortObjects===!0&&y.sort(Y,X),ve=ae.enabled===!1||ae.isPresenting===!1||ae.hasDepthSensing()===!1,ve&&ot.addToRenderList(y,D),this.info.render.frame++,Se===!0&&be.beginShadows();const re=_.state.shadowsArray;Xe.render(re,D,J),Se===!0&&be.endShadows(),this.info.autoReset===!0&&this.info.reset();const se=y.opaque,K=y.transmissive;if(_.setupLights(),J.isArrayCamera){const Te=J.cameras;if(K.length>0)for(let Fe=0,je=Te.length;Fe<je;Fe++){const qe=Te[Fe];wr(se,K,D,qe)}ve&&ot.render(D);for(let Fe=0,je=Te.length;Fe<je;Fe++){const qe=Te[Fe];El(y,D,qe,qe.viewport)}}else K.length>0&&wr(se,K,D,J),ve&&ot.render(D),El(y,D,J);N!==null&&U===0&&(B.updateMultisampleRenderTarget(N),B.updateRenderTargetMipmap(N)),D.isScene===!0&&D.onAfterRender(T,D,J),Be.resetDefaultState(),C=-1,A=null,w.pop(),w.length>0?(_=w[w.length-1],Se===!0&&be.setGlobalState(T.clippingPlanes,_.state.camera)):_=null,E.pop(),E.length>0?y=E[E.length-1]:y=null};function rs(D,J,re,se){if(D.visible===!1)return;if(D.layers.test(J.layers)){if(D.isGroup)re=D.renderOrder;else if(D.isLOD)D.autoUpdate===!0&&D.update(J);else if(D.isLight)_.pushLight(D),D.castShadow&&_.pushShadow(D);else if(D.isSprite){if(!D.frustumCulled||ne.intersectsSprite(D)){se&&it.setFromMatrixPosition(D.matrixWorld).applyMatrix4(tt);const Fe=pe.update(D),je=D.material;je.visible&&y.push(D,Fe,je,re,it.z,null)}}else if((D.isMesh||D.isLine||D.isPoints)&&(!D.frustumCulled||ne.intersectsObject(D))){const Fe=pe.update(D),je=D.material;if(se&&(D.boundingSphere!==void 0?(D.boundingSphere===null&&D.computeBoundingSphere(),it.copy(D.boundingSphere.center)):(Fe.boundingSphere===null&&Fe.computeBoundingSphere(),it.copy(Fe.boundingSphere.center)),it.applyMatrix4(D.matrixWorld).applyMatrix4(tt)),Array.isArray(je)){const qe=Fe.groups;for(let ct=0,at=qe.length;ct<at;ct++){const Ue=qe[ct],Qe=je[Ue.materialIndex];Qe&&Qe.visible&&y.push(D,Fe,Qe,re,it.z,Ue)}}else je.visible&&y.push(D,Fe,je,re,it.z,null)}}const Te=D.children;for(let Fe=0,je=Te.length;Fe<je;Fe++)rs(Te[Fe],J,re,se)}function El(D,J,re,se){const K=D.opaque,Te=D.transmissive,Fe=D.transparent;_.setupLightsView(re),Se===!0&&be.setGlobalState(T.clippingPlanes,re),se&&Ce.viewport(F.copy(se)),K.length>0&&Ks(K,J,re),Te.length>0&&Ks(Te,J,re),Fe.length>0&&Ks(Fe,J,re),Ce.buffers.depth.setTest(!0),Ce.buffers.depth.setMask(!0),Ce.buffers.color.setMask(!0),Ce.setPolygonOffset(!1)}function wr(D,J,re,se){if((re.isScene===!0?re.overrideMaterial:null)!==null)return;_.state.transmissionRenderTarget[se.id]===void 0&&(_.state.transmissionRenderTarget[se.id]=new di(1,1,{generateMipmaps:!0,type:we.has("EXT_color_buffer_half_float")||we.has("EXT_color_buffer_float")?Jr:Fi,minFilter:Zi,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Nt.workingColorSpace}));const Te=_.state.transmissionRenderTarget[se.id],Fe=se.viewport||F;Te.setSize(Fe.z*T.transmissionResolutionScale,Fe.w*T.transmissionResolutionScale);const je=T.getRenderTarget();T.setRenderTarget(Te),T.getClearColor($),oe=T.getClearAlpha(),oe<1&&T.setClearColor(16777215,.5),T.clear(),ve&&ot.render(re);const qe=T.toneMapping;T.toneMapping=bi;const ct=se.viewport;if(se.viewport!==void 0&&(se.viewport=void 0),_.setupLightsView(se),Se===!0&&be.setGlobalState(T.clippingPlanes,se),Ks(D,re,se),B.updateMultisampleRenderTarget(Te),B.updateRenderTargetMipmap(Te),we.has("WEBGL_multisampled_render_to_texture")===!1){let at=!1;for(let Ue=0,Qe=J.length;Ue<Qe;Ue++){const Tt=J[Ue],Ct=Tt.object,Rt=Tt.geometry,wt=Tt.material,$e=Tt.group;if(wt.side===Vt&&Ct.layers.test(se.layers)){const Ot=wt.side;wt.side=Gn,wt.needsUpdate=!0,Tl(Ct,re,se,Rt,wt,$e),wt.side=Ot,wt.needsUpdate=!0,at=!0}}at===!0&&(B.updateMultisampleRenderTarget(Te),B.updateRenderTargetMipmap(Te))}T.setRenderTarget(je),T.setClearColor($,oe),ct!==void 0&&(se.viewport=ct),T.toneMapping=qe}function Ks(D,J,re){const se=J.isScene===!0?J.overrideMaterial:null;for(let K=0,Te=D.length;K<Te;K++){const Fe=D[K],je=Fe.object,qe=Fe.geometry,ct=se===null?Fe.material:se,at=Fe.group;je.layers.test(re.layers)&&Tl(je,J,re,qe,ct,at)}}function Tl(D,J,re,se,K,Te){D.onBeforeRender(T,J,re,se,K,Te),D.modelViewMatrix.multiplyMatrices(re.matrixWorldInverse,D.matrixWorld),D.normalMatrix.getNormalMatrix(D.modelViewMatrix),K.onBeforeRender(T,J,re,se,D,Te),K.transparent===!0&&K.side===Vt&&K.forceSinglePass===!1?(K.side=Gn,K.needsUpdate=!0,T.renderBufferDirect(re,J,se,K,D,Te),K.side=xr,K.needsUpdate=!0,T.renderBufferDirect(re,J,se,K,D,Te),K.side=Vt):T.renderBufferDirect(re,J,se,K,D,Te),D.onAfterRender(T,J,re,se,K,Te)}function Qs(D,J,re){J.isScene!==!0&&(J=pt);const se=De.get(D),K=_.state.lights,Te=_.state.shadowsArray,Fe=K.state.version,je=Ze.getParameters(D,K.state,Te,J,re),qe=Ze.getProgramCacheKey(je);let ct=se.programs;se.environment=D.isMeshStandardMaterial?J.environment:null,se.fog=J.fog,se.envMap=(D.isMeshStandardMaterial?te:P).get(D.envMap||se.environment),se.envMapRotation=se.environment!==null&&D.envMap===null?J.environmentRotation:D.envMapRotation,ct===void 0&&(D.addEventListener("dispose",rt),ct=new Map,se.programs=ct);let at=ct.get(qe);if(at!==void 0){if(se.currentProgram===at&&se.lightsStateVersion===Fe)return Al(D,je),at}else je.uniforms=Ze.getUniforms(D),D.onBeforeCompile(je,T),at=Ze.acquireProgram(je,qe),ct.set(qe,at),se.uniforms=je.uniforms;const Ue=se.uniforms;return(!D.isShaderMaterial&&!D.isRawShaderMaterial||D.clipping===!0)&&(Ue.clippingPlanes=be.uniform),Al(D,je),se.needsLights=Cl(D),se.lightsStateVersion=Fe,se.needsLights&&(Ue.ambientLightColor.value=K.state.ambient,Ue.lightProbe.value=K.state.probe,Ue.directionalLights.value=K.state.directional,Ue.directionalLightShadows.value=K.state.directionalShadow,Ue.spotLights.value=K.state.spot,Ue.spotLightShadows.value=K.state.spotShadow,Ue.rectAreaLights.value=K.state.rectArea,Ue.ltc_1.value=K.state.rectAreaLTC1,Ue.ltc_2.value=K.state.rectAreaLTC2,Ue.pointLights.value=K.state.point,Ue.pointLightShadows.value=K.state.pointShadow,Ue.hemisphereLights.value=K.state.hemi,Ue.directionalShadowMap.value=K.state.directionalShadowMap,Ue.directionalShadowMatrix.value=K.state.directionalShadowMatrix,Ue.spotShadowMap.value=K.state.spotShadowMap,Ue.spotLightMatrix.value=K.state.spotLightMatrix,Ue.spotLightMap.value=K.state.spotLightMap,Ue.pointShadowMap.value=K.state.pointShadowMap,Ue.pointShadowMatrix.value=K.state.pointShadowMatrix),se.currentProgram=at,se.uniformsList=null,at}function bl(D){if(D.uniformsList===null){const J=D.currentProgram.getUniforms();D.uniformsList=_u.seqWithValue(J.seq,D.uniforms)}return D.uniformsList}function Al(D,J){const re=De.get(D);re.outputColorSpace=J.outputColorSpace,re.batching=J.batching,re.batchingColor=J.batchingColor,re.instancing=J.instancing,re.instancingColor=J.instancingColor,re.instancingMorph=J.instancingMorph,re.skinning=J.skinning,re.morphTargets=J.morphTargets,re.morphNormals=J.morphNormals,re.morphColors=J.morphColors,re.morphTargetsCount=J.morphTargetsCount,re.numClippingPlanes=J.numClippingPlanes,re.numIntersection=J.numClipIntersection,re.vertexAlphas=J.vertexAlphas,re.vertexTangents=J.vertexTangents,re.toneMapping=J.toneMapping}function Wh(D,J,re,se,K){J.isScene!==!0&&(J=pt),B.resetTextureUnits();const Te=J.fog,Fe=se.isMeshStandardMaterial?J.environment:null,je=N===null?T.outputColorSpace:N.isXRRenderTarget===!0?N.texture.colorSpace:Xs,qe=(se.isMeshStandardMaterial?te:P).get(se.envMap||Fe),ct=se.vertexColors===!0&&!!re.attributes.color&&re.attributes.color.itemSize===4,at=!!re.attributes.tangent&&(!!se.normalMap||se.anisotropy>0),Ue=!!re.morphAttributes.position,Qe=!!re.morphAttributes.normal,Tt=!!re.morphAttributes.color;let Ct=bi;se.toneMapped&&(N===null||N.isXRRenderTarget===!0)&&(Ct=T.toneMapping);const Rt=re.morphAttributes.position||re.morphAttributes.normal||re.morphAttributes.color,wt=Rt!==void 0?Rt.length:0,$e=De.get(se),Ot=_.state.lights;if(Se===!0&&(Pe===!0||D!==A)){const Mn=D===A&&se.id===C;be.setState(se,D,Mn)}let Lt=!1;se.version===$e.__version?($e.needsLights&&$e.lightsStateVersion!==Ot.state.version||$e.outputColorSpace!==je||K.isBatchedMesh&&$e.batching===!1||!K.isBatchedMesh&&$e.batching===!0||K.isBatchedMesh&&$e.batchingColor===!0&&K.colorTexture===null||K.isBatchedMesh&&$e.batchingColor===!1&&K.colorTexture!==null||K.isInstancedMesh&&$e.instancing===!1||!K.isInstancedMesh&&$e.instancing===!0||K.isSkinnedMesh&&$e.skinning===!1||!K.isSkinnedMesh&&$e.skinning===!0||K.isInstancedMesh&&$e.instancingColor===!0&&K.instanceColor===null||K.isInstancedMesh&&$e.instancingColor===!1&&K.instanceColor!==null||K.isInstancedMesh&&$e.instancingMorph===!0&&K.morphTexture===null||K.isInstancedMesh&&$e.instancingMorph===!1&&K.morphTexture!==null||$e.envMap!==qe||se.fog===!0&&$e.fog!==Te||$e.numClippingPlanes!==void 0&&($e.numClippingPlanes!==be.numPlanes||$e.numIntersection!==be.numIntersection)||$e.vertexAlphas!==ct||$e.vertexTangents!==at||$e.morphTargets!==Ue||$e.morphNormals!==Qe||$e.morphColors!==Tt||$e.toneMapping!==Ct||$e.morphTargetsCount!==wt)&&(Lt=!0):(Lt=!0,$e.__version=se.version);let jn=$e.currentProgram;Lt===!0&&(jn=Qs(se,J,K));let nr=!1,vn=!1,Er=!1;const It=jn.getUniforms(),qn=$e.uniforms;if(Ce.useProgram(jn.program)&&(nr=!0,vn=!0,Er=!0),se.id!==C&&(C=se.id,vn=!0),nr||A!==D){Ce.buffers.depth.getReversed()?(Me.copy(D.projectionMatrix),BM(Me),zM(Me),It.setValue(z,"projectionMatrix",Me)):It.setValue(z,"projectionMatrix",D.projectionMatrix),It.setValue(z,"viewMatrix",D.matrixWorldInverse);const hn=It.map.cameraPosition;hn!==void 0&&hn.setValue(z,lt.setFromMatrixPosition(D.matrixWorld)),He.logarithmicDepthBuffer&&It.setValue(z,"logDepthBufFC",2/(Math.log(D.far+1)/Math.LN2)),(se.isMeshPhongMaterial||se.isMeshToonMaterial||se.isMeshLambertMaterial||se.isMeshBasicMaterial||se.isMeshStandardMaterial||se.isShaderMaterial)&&It.setValue(z,"isOrthographic",D.isOrthographicCamera===!0),A!==D&&(A=D,vn=!0,Er=!0)}if(K.isSkinnedMesh){It.setOptional(z,K,"bindMatrix"),It.setOptional(z,K,"bindMatrixInverse");const Mn=K.skeleton;Mn&&(Mn.boneTexture===null&&Mn.computeBoneTexture(),It.setValue(z,"boneTexture",Mn.boneTexture,B))}K.isBatchedMesh&&(It.setOptional(z,K,"batchingTexture"),It.setValue(z,"batchingTexture",K._matricesTexture,B),It.setOptional(z,K,"batchingIdTexture"),It.setValue(z,"batchingIdTexture",K._indirectTexture,B),It.setOptional(z,K,"batchingColorTexture"),K._colorsTexture!==null&&It.setValue(z,"batchingColorTexture",K._colorsTexture,B));const Yn=re.morphAttributes;if((Yn.position!==void 0||Yn.normal!==void 0||Yn.color!==void 0)&&dt.update(K,re,jn),(vn||$e.receiveShadow!==K.receiveShadow)&&($e.receiveShadow=K.receiveShadow,It.setValue(z,"receiveShadow",K.receiveShadow)),se.isMeshGouraudMaterial&&se.envMap!==null&&(qn.envMap.value=qe,qn.flipEnvMap.value=qe.isCubeTexture&&qe.isRenderTargetTexture===!1?-1:1),se.isMeshStandardMaterial&&se.envMap===null&&J.environment!==null&&(qn.envMapIntensity.value=J.environmentIntensity),vn&&(It.setValue(z,"toneMappingExposure",T.toneMappingExposure),$e.needsLights&&Xh(qn,Er),Te&&se.fog===!0&&Le.refreshFogUniforms(qn,Te),Le.refreshMaterialUniforms(qn,se,O,ge,_.state.transmissionRenderTarget[D.id]),_u.upload(z,bl($e),qn,B)),se.isShaderMaterial&&se.uniformsNeedUpdate===!0&&(_u.upload(z,bl($e),qn,B),se.uniformsNeedUpdate=!1),se.isSpriteMaterial&&It.setValue(z,"center",K.center),It.setValue(z,"modelViewMatrix",K.modelViewMatrix),It.setValue(z,"normalMatrix",K.normalMatrix),It.setValue(z,"modelMatrix",K.matrixWorld),se.isShaderMaterial||se.isRawShaderMaterial){const Mn=se.uniformsGroups;for(let hn=0,Tr=Mn.length;hn<Tr;hn++){const si=Mn[hn];V.update(si,jn),V.bind(si,jn)}}return jn}function Xh(D,J){D.ambientLightColor.needsUpdate=J,D.lightProbe.needsUpdate=J,D.directionalLights.needsUpdate=J,D.directionalLightShadows.needsUpdate=J,D.pointLights.needsUpdate=J,D.pointLightShadows.needsUpdate=J,D.spotLights.needsUpdate=J,D.spotLightShadows.needsUpdate=J,D.rectAreaLights.needsUpdate=J,D.hemisphereLights.needsUpdate=J}function Cl(D){return D.isMeshLambertMaterial||D.isMeshToonMaterial||D.isMeshPhongMaterial||D.isMeshStandardMaterial||D.isShadowMaterial||D.isShaderMaterial&&D.lights===!0}this.getActiveCubeFace=function(){return R},this.getActiveMipmapLevel=function(){return U},this.getRenderTarget=function(){return N},this.setRenderTargetTextures=function(D,J,re){De.get(D.texture).__webglTexture=J,De.get(D.depthTexture).__webglTexture=re;const se=De.get(D);se.__hasExternalTextures=!0,se.__autoAllocateDepthBuffer=re===void 0,se.__autoAllocateDepthBuffer||we.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),se.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(D,J){const re=De.get(D);re.__webglFramebuffer=J,re.__useDefaultFramebuffer=J===void 0};const jh=z.createFramebuffer();this.setRenderTarget=function(D,J=0,re=0){N=D,R=J,U=re;let se=!0,K=null,Te=!1,Fe=!1;if(D){const qe=De.get(D);if(qe.__useDefaultFramebuffer!==void 0)Ce.bindFramebuffer(z.FRAMEBUFFER,null),se=!1;else if(qe.__webglFramebuffer===void 0)B.setupRenderTarget(D);else if(qe.__hasExternalTextures)B.rebindTextures(D,De.get(D.texture).__webglTexture,De.get(D.depthTexture).__webglTexture);else if(D.depthBuffer){const Ue=D.depthTexture;if(qe.__boundDepthTexture!==Ue){if(Ue!==null&&De.has(Ue)&&(D.width!==Ue.image.width||D.height!==Ue.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");B.setupDepthRenderbuffer(D)}}const ct=D.texture;(ct.isData3DTexture||ct.isDataArrayTexture||ct.isCompressedArrayTexture)&&(Fe=!0);const at=De.get(D).__webglFramebuffer;D.isWebGLCubeRenderTarget?(Array.isArray(at[J])?K=at[J][re]:K=at[J],Te=!0):D.samples>0&&B.useMultisampledRTT(D)===!1?K=De.get(D).__webglMultisampledFramebuffer:Array.isArray(at)?K=at[re]:K=at,F.copy(D.viewport),q.copy(D.scissor),W=D.scissorTest}else F.copy(Z).multiplyScalar(O).floor(),q.copy(fe).multiplyScalar(O).floor(),W=Ee;if(re!==0&&(K=jh),Ce.bindFramebuffer(z.FRAMEBUFFER,K)&&se&&Ce.drawBuffers(D,K),Ce.viewport(F),Ce.scissor(q),Ce.setScissorTest(W),Te){const qe=De.get(D.texture);z.framebufferTexture2D(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_CUBE_MAP_POSITIVE_X+J,qe.__webglTexture,re)}else if(Fe){const qe=De.get(D.texture),ct=J;z.framebufferTextureLayer(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,qe.__webglTexture,re,ct)}else if(D!==null&&re!==0){const qe=De.get(D.texture);z.framebufferTexture2D(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_2D,qe.__webglTexture,re)}C=-1},this.readRenderTargetPixels=function(D,J,re,se,K,Te,Fe){if(!(D&&D.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let je=De.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&Fe!==void 0&&(je=je[Fe]),je){Ce.bindFramebuffer(z.FRAMEBUFFER,je);try{const qe=D.texture,ct=qe.format,at=qe.type;if(!He.textureFormatReadable(ct)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!He.textureTypeReadable(at)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}J>=0&&J<=D.width-se&&re>=0&&re<=D.height-K&&z.readPixels(J,re,se,K,de.convert(ct),de.convert(at),Te)}finally{const qe=N!==null?De.get(N).__webglFramebuffer:null;Ce.bindFramebuffer(z.FRAMEBUFFER,qe)}}},this.readRenderTargetPixelsAsync=async function(D,J,re,se,K,Te,Fe){if(!(D&&D.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let je=De.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&Fe!==void 0&&(je=je[Fe]),je){const qe=D.texture,ct=qe.format,at=qe.type;if(!He.textureFormatReadable(ct))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!He.textureTypeReadable(at))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(J>=0&&J<=D.width-se&&re>=0&&re<=D.height-K){Ce.bindFramebuffer(z.FRAMEBUFFER,je);const Ue=z.createBuffer();z.bindBuffer(z.PIXEL_PACK_BUFFER,Ue),z.bufferData(z.PIXEL_PACK_BUFFER,Te.byteLength,z.STREAM_READ),z.readPixels(J,re,se,K,de.convert(ct),de.convert(at),0);const Qe=N!==null?De.get(N).__webglFramebuffer:null;Ce.bindFramebuffer(z.FRAMEBUFFER,Qe);const Tt=z.fenceSync(z.SYNC_GPU_COMMANDS_COMPLETE,0);return z.flush(),await OM(z,Tt,4),z.bindBuffer(z.PIXEL_PACK_BUFFER,Ue),z.getBufferSubData(z.PIXEL_PACK_BUFFER,0,Te),z.deleteBuffer(Ue),z.deleteSync(Tt),Te}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(D,J=null,re=0){D.isTexture!==!0&&(Do("WebGLRenderer: copyFramebufferToTexture function signature has changed."),J=arguments[0]||null,D=arguments[1]);const se=Math.pow(2,-re),K=Math.floor(D.image.width*se),Te=Math.floor(D.image.height*se),Fe=J!==null?J.x:0,je=J!==null?J.y:0;B.setTexture2D(D,0),z.copyTexSubImage2D(z.TEXTURE_2D,re,0,0,Fe,je,K,Te),Ce.unbindTexture()};const qh=z.createFramebuffer(),Yh=z.createFramebuffer();this.copyTextureToTexture=function(D,J,re=null,se=null,K=0,Te=null){D.isTexture!==!0&&(Do("WebGLRenderer: copyTextureToTexture function signature has changed."),se=arguments[0]||null,D=arguments[1],J=arguments[2],Te=arguments[3]||0,re=null),Te===null&&(K!==0?(Do("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Te=K,K=0):Te=0);let Fe,je,qe,ct,at,Ue,Qe,Tt,Ct;const Rt=D.isCompressedTexture?D.mipmaps[Te]:D.image;if(re!==null)Fe=re.max.x-re.min.x,je=re.max.y-re.min.y,qe=re.isBox3?re.max.z-re.min.z:1,ct=re.min.x,at=re.min.y,Ue=re.isBox3?re.min.z:0;else{const Yn=Math.pow(2,-K);Fe=Math.floor(Rt.width*Yn),je=Math.floor(Rt.height*Yn),D.isDataArrayTexture?qe=Rt.depth:D.isData3DTexture?qe=Math.floor(Rt.depth*Yn):qe=1,ct=0,at=0,Ue=0}se!==null?(Qe=se.x,Tt=se.y,Ct=se.z):(Qe=0,Tt=0,Ct=0);const wt=de.convert(J.format),$e=de.convert(J.type);let Ot;J.isData3DTexture?(B.setTexture3D(J,0),Ot=z.TEXTURE_3D):J.isDataArrayTexture||J.isCompressedArrayTexture?(B.setTexture2DArray(J,0),Ot=z.TEXTURE_2D_ARRAY):(B.setTexture2D(J,0),Ot=z.TEXTURE_2D),z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,J.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,J.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,J.unpackAlignment);const Lt=z.getParameter(z.UNPACK_ROW_LENGTH),jn=z.getParameter(z.UNPACK_IMAGE_HEIGHT),nr=z.getParameter(z.UNPACK_SKIP_PIXELS),vn=z.getParameter(z.UNPACK_SKIP_ROWS),Er=z.getParameter(z.UNPACK_SKIP_IMAGES);z.pixelStorei(z.UNPACK_ROW_LENGTH,Rt.width),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,Rt.height),z.pixelStorei(z.UNPACK_SKIP_PIXELS,ct),z.pixelStorei(z.UNPACK_SKIP_ROWS,at),z.pixelStorei(z.UNPACK_SKIP_IMAGES,Ue);const It=D.isDataArrayTexture||D.isData3DTexture,qn=J.isDataArrayTexture||J.isData3DTexture;if(D.isDepthTexture){const Yn=De.get(D),Mn=De.get(J),hn=De.get(Yn.__renderTarget),Tr=De.get(Mn.__renderTarget);Ce.bindFramebuffer(z.READ_FRAMEBUFFER,hn.__webglFramebuffer),Ce.bindFramebuffer(z.DRAW_FRAMEBUFFER,Tr.__webglFramebuffer);for(let si=0;si<qe;si++)It&&(z.framebufferTextureLayer(z.READ_FRAMEBUFFER,z.COLOR_ATTACHMENT0,De.get(D).__webglTexture,K,Ue+si),z.framebufferTextureLayer(z.DRAW_FRAMEBUFFER,z.COLOR_ATTACHMENT0,De.get(J).__webglTexture,Te,Ct+si)),z.blitFramebuffer(ct,at,Fe,je,Qe,Tt,Fe,je,z.DEPTH_BUFFER_BIT,z.NEAREST);Ce.bindFramebuffer(z.READ_FRAMEBUFFER,null),Ce.bindFramebuffer(z.DRAW_FRAMEBUFFER,null)}else if(K!==0||D.isRenderTargetTexture||De.has(D)){const Yn=De.get(D),Mn=De.get(J);Ce.bindFramebuffer(z.READ_FRAMEBUFFER,qh),Ce.bindFramebuffer(z.DRAW_FRAMEBUFFER,Yh);for(let hn=0;hn<qe;hn++)It?z.framebufferTextureLayer(z.READ_FRAMEBUFFER,z.COLOR_ATTACHMENT0,Yn.__webglTexture,K,Ue+hn):z.framebufferTexture2D(z.READ_FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_2D,Yn.__webglTexture,K),qn?z.framebufferTextureLayer(z.DRAW_FRAMEBUFFER,z.COLOR_ATTACHMENT0,Mn.__webglTexture,Te,Ct+hn):z.framebufferTexture2D(z.DRAW_FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_2D,Mn.__webglTexture,Te),K!==0?z.blitFramebuffer(ct,at,Fe,je,Qe,Tt,Fe,je,z.COLOR_BUFFER_BIT,z.NEAREST):qn?z.copyTexSubImage3D(Ot,Te,Qe,Tt,Ct+hn,ct,at,Fe,je):z.copyTexSubImage2D(Ot,Te,Qe,Tt,ct,at,Fe,je);Ce.bindFramebuffer(z.READ_FRAMEBUFFER,null),Ce.bindFramebuffer(z.DRAW_FRAMEBUFFER,null)}else qn?D.isDataTexture||D.isData3DTexture?z.texSubImage3D(Ot,Te,Qe,Tt,Ct,Fe,je,qe,wt,$e,Rt.data):J.isCompressedArrayTexture?z.compressedTexSubImage3D(Ot,Te,Qe,Tt,Ct,Fe,je,qe,wt,Rt.data):z.texSubImage3D(Ot,Te,Qe,Tt,Ct,Fe,je,qe,wt,$e,Rt):D.isDataTexture?z.texSubImage2D(z.TEXTURE_2D,Te,Qe,Tt,Fe,je,wt,$e,Rt.data):D.isCompressedTexture?z.compressedTexSubImage2D(z.TEXTURE_2D,Te,Qe,Tt,Rt.width,Rt.height,wt,Rt.data):z.texSubImage2D(z.TEXTURE_2D,Te,Qe,Tt,Fe,je,wt,$e,Rt);z.pixelStorei(z.UNPACK_ROW_LENGTH,Lt),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,jn),z.pixelStorei(z.UNPACK_SKIP_PIXELS,nr),z.pixelStorei(z.UNPACK_SKIP_ROWS,vn),z.pixelStorei(z.UNPACK_SKIP_IMAGES,Er),Te===0&&J.generateMipmaps&&z.generateMipmap(Ot),Ce.unbindTexture()},this.copyTextureToTexture3D=function(D,J,re=null,se=null,K=0){return D.isTexture!==!0&&(Do("WebGLRenderer: copyTextureToTexture3D function signature has changed."),re=arguments[0]||null,se=arguments[1]||null,D=arguments[2],J=arguments[3],K=arguments[4]||0),Do('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(D,J,re,se,K)},this.initRenderTarget=function(D){De.get(D).__webglFramebuffer===void 0&&B.setupRenderTarget(D)},this.initTexture=function(D){D.isCubeTexture?B.setTextureCube(D,0):D.isData3DTexture?B.setTexture3D(D,0):D.isDataArrayTexture||D.isCompressedArrayTexture?B.setTexture2DArray(D,0):B.setTexture2D(D,0),Ce.unbindTexture()},this.resetState=function(){R=0,U=0,N=null,Ce.reset(),Be.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ni}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorspace=Nt._getDrawingBufferColorSpace(e),t.unpackColorSpace=Nt._getUnpackColorSpace()}}const jC=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Cp,AddEquation:Wr,AddOperation:O_,AdditiveAnimationBlendMode:zp,AdditiveBlending:up,AgXToneMapping:H_,AlphaFormat:Dp,AlwaysCompare:ix,AlwaysDepth:Eu,AlwaysStencilFunc:pp,AmbientLight:Yx,AnimationAction:iy,AnimationClip:ol,AnimationLoader:aw,AnimationMixer:Nw,AnimationObjectGroup:Dw,AnimationUtils:iw,ArcCurve:xx,ArrayCamera:ey,ArrowHelper:iE,AttachedBindMode:dp,Audio:ty,AudioAnalyser:ww,AudioContext:om,AudioListener:yw,AudioLoader:vw,AxesHelper:rE,BackSide:Gn,BasicDepthPacking:Y_,BasicShadowMap:v_,BatchedMesh:gx,Bone:Xp,BooleanKeyframeTrack:Zs,Box2:Gw,Box3:Wn,Box3Helper:tE,BoxGeometry:Qr,BoxHelper:eE,BufferAttribute:Ht,BufferGeometry:yt,BufferGeometryLoader:$x,ByteType:Pp,Cache:vr,Camera:qo,CameraHelper:$w,CanvasTexture:A1,CapsuleGeometry:Ch,CatmullRomCurve3:yx,CineonToneMapping:k_,CircleGeometry:gl,ClampToEdgeWrapping:Ti,Clock:am,Color:Ie,ColorKeyframeTrack:im,ColorManagement:Nt,CompressedArrayTexture:T1,CompressedCubeTexture:b1,CompressedTexture:Th,CompressedTextureLoader:lw,ConeGeometry:Rh,ConstantAlphaFactor:U_,ConstantColorFactor:L_,Controls:oE,CubeCamera:ux,CubeReflectionMapping:yr,CubeRefractionMapping:Yr,CubeTexture:fl,CubeTextureLoader:cw,CubeUVReflectionMapping:jo,CubicBezierCurve:Yp,CubicBezierCurve3:Sx,CubicInterpolant:kx,CullFaceBack:cp,CullFaceFront:g_,CullFaceFrontBack:zS,CullFaceNone:m_,Curve:Oi,CurvePath:wx,CustomBlending:__,CustomToneMapping:V_,CylinderGeometry:Zo,Cylindrical:Hw,Data3DTexture:yh,DataArrayTexture:hl,DataTexture:Ki,DataTextureLoader:uw,DataUtils:e1,DecrementStencilOp:$S,DecrementWrapStencilOp:tM,DefaultLoadingManager:Gx,DepthFormat:jr,DepthStencilFormat:Ws,DepthTexture:bh,DetachedBindMode:W_,DirectionalLight:qx,DirectionalLightHelper:Qw,DiscreteInterpolant:Vx,DodecahedronGeometry:Ph,DoubleSide:Vt,DstAlphaFactor:A_,DstColorFactor:R_,DynamicCopyUsage:gM,DynamicDrawUsage:uM,DynamicReadUsage:dM,EdgesGeometry:Ex,EllipseCurve:Ah,EqualCompare:$_,EqualDepth:bu,EqualStencilFunc:sM,EquirectangularReflectionMapping:Wa,EquirectangularRefractionMapping:Xa,Euler:Yt,EventDispatcher:$i,ExtrudeGeometry:Lh,FileLoader:Mr,Float16BufferAttribute:o1,Float32BufferAttribute:Ke,FloatType:ni,Fog:dl,FogExp2:Sh,FramebufferTexture:E1,FrontSide:xr,Frustum:pl,GLBufferAttribute:Vw,GLSL1:_M,GLSL3:mp,GreaterCompare:ex,GreaterDepth:Cu,GreaterEqualCompare:nx,GreaterEqualDepth:Au,GreaterEqualStencilFunc:cM,GreaterStencilFunc:aM,GridHelper:Jw,Group:Bo,HalfFloatType:Jr,HemisphereLight:Wx,HemisphereLightHelper:Zw,IcosahedronGeometry:Dh,ImageBitmapLoader:gw,ImageLoader:al,ImageUtils:ox,IncrementStencilOp:QS,IncrementWrapStencilOp:eM,InstancedBufferAttribute:Wo,InstancedBufferGeometry:Qx,InstancedInterleavedBuffer:kw,InstancedMesh:Yo,Int16BufferAttribute:r1,Int32BufferAttribute:s1,Int8BufferAttribute:t1,IntType:fh,InterleavedBuffer:wh,InterleavedBufferAttribute:js,Interpolant:xl,InterpolateDiscrete:Ya,InterpolateLinear:nh,InterpolateSmooth:vu,InvertStencilOp:nM,KeepStencilOp:Rs,KeyframeTrack:Bi,LOD:px,LatheGeometry:ml,Layers:zs,LessCompare:Q_,LessDepth:Tu,LessEqualCompare:kp,LessEqualDepth:Vs,LessEqualStencilFunc:oM,LessStencilFunc:rM,Light:ts,LightProbe:Kx,Line:Zr,Line3:Ww,LineBasicMaterial:Xn,LineCurve:Zp,LineCurve3:Mx,LineDashedMaterial:Ox,LineLoop:vx,LineSegments:tr,LinearFilter:Kt,LinearInterpolant:nm,LinearMipMapLinearFilter:GS,LinearMipMapNearestFilter:HS,LinearMipmapLinearFilter:Zi,LinearMipmapNearestFilter:Na,LinearSRGBColorSpace:Xs,LinearToneMapping:B_,LinearTransfer:Ja,Loader:ri,LoaderUtils:yp,LoadingManager:rm,LoopOnce:X_,LoopPingPong:q_,LoopRepeat:j_,LuminanceAlphaFormat:Fp,LuminanceFormat:Np,MOUSE:As,Material:On,MaterialLoader:Vh,MathUtils:NM,Matrix2:um,Matrix3:_t,Matrix4:ft,MaxEquation:M_,Mesh:sn,MeshBasicMaterial:er,MeshDepthMaterial:$p,MeshDistanceMaterial:em,MeshLambertMaterial:Nx,MeshMatcapMaterial:Fx,MeshNormalMaterial:Ux,MeshPhongMaterial:Lx,MeshPhysicalMaterial:Ix,MeshStandardMaterial:kh,MeshToonMaterial:Dx,MinEquation:S_,MirroredRepeatWrapping:qa,MixOperation:F_,MultiplyBlending:fp,MultiplyOperation:cl,NearestFilter:on,NearestMipMapLinearFilter:VS,NearestMipMapNearestFilter:kS,NearestMipmapLinearFilter:Fo,NearestMipmapNearestFilter:Rp,NeutralToneMapping:G_,NeverCompare:K_,NeverDepth:wu,NeverStencilFunc:iM,NoBlending:Ji,NoColorSpace:mr,NoToneMapping:bi,NormalAnimationBlendMode:_h,NormalBlending:Os,NotEqualCompare:tx,NotEqualDepth:Ru,NotEqualStencilFunc:lM,NumberKeyframeTrack:rl,Object3D:Pt,ObjectLoader:pw,ObjectSpaceNormalMap:J_,OctahedronGeometry:vl,OneFactor:E_,OneMinusConstantAlphaFactor:N_,OneMinusConstantColorFactor:D_,OneMinusDstAlphaFactor:C_,OneMinusDstColorFactor:P_,OneMinusSrcAlphaFactor:Mu,OneMinusSrcColorFactor:b_,OrthographicCamera:qr,PCFShadowMap:uh,PCFSoftShadowMap:Ua,PMREMGenerator:Ep,Path:el,PerspectiveCamera:en,Plane:Yi,PlaneGeometry:es,PlaneHelper:nE,PointLight:jx,PointLightHelper:qw,Points:_x,PointsMaterial:jp,PolarGridHelper:Kw,PolyhedronGeometry:$r,PositionalAudio:Mw,PropertyBinding:Ft,PropertyMixer:ny,QuadraticBezierCurve:Jp,QuadraticBezierCurve3:Kp,Quaternion:pn,QuaternionKeyframeTrack:yl,QuaternionLinearInterpolant:Hx,RED_GREEN_RGTC2_Format:eh,RED_RGTC1_Format:Bp,REVISION:ll,RGBADepthPacking:Z_,RGBAFormat:Un,RGBAIntegerFormat:vh,RGBA_ASTC_10x10_Format:Yu,RGBA_ASTC_10x5_Format:Xu,RGBA_ASTC_10x6_Format:ju,RGBA_ASTC_10x8_Format:qu,RGBA_ASTC_12x10_Format:Zu,RGBA_ASTC_12x12_Format:Ju,RGBA_ASTC_4x4_Format:Ou,RGBA_ASTC_5x4_Format:Bu,RGBA_ASTC_5x5_Format:zu,RGBA_ASTC_6x5_Format:ku,RGBA_ASTC_6x6_Format:Vu,RGBA_ASTC_8x5_Format:Hu,RGBA_ASTC_8x6_Format:Gu,RGBA_ASTC_8x8_Format:Wu,RGBA_BPTC_Format:ka,RGBA_ETC2_EAC_Format:Fu,RGBA_PVRTC_2BPPV1_Format:Du,RGBA_PVRTC_4BPPV1_Format:Lu,RGBA_S3TC_DXT1_Format:Oa,RGBA_S3TC_DXT3_Format:Ba,RGBA_S3TC_DXT5_Format:za,RGBDepthPacking:YS,RGBFormat:Up,RGBIntegerFormat:WS,RGB_BPTC_SIGNED_Format:Ku,RGB_BPTC_UNSIGNED_Format:Qu,RGB_ETC1_Format:Uu,RGB_ETC2_Format:Nu,RGB_PVRTC_2BPPV1_Format:Iu,RGB_PVRTC_4BPPV1_Format:Pu,RGB_S3TC_DXT1_Format:Fa,RGDepthPacking:ZS,RGFormat:Op,RGIntegerFormat:gh,RawShaderMaterial:Px,Ray:Ys,Raycaster:ry,RectAreaLight:Zx,RedFormat:mh,RedIntegerFormat:ul,ReinhardToneMapping:z_,RenderTarget:xh,RenderTarget3D:Fw,RenderTargetArray:Ow,RepeatWrapping:ja,ReplaceStencilOp:KS,ReverseSubtractEquation:y_,RingGeometry:Uh,SIGNED_RED_GREEN_RGTC2_Format:th,SIGNED_RED_RGTC1_Format:$u,SRGBColorSpace:ei,SRGBTransfer:Gt,Scene:Mh,ShaderChunk:St,ShaderLib:Ui,ShaderMaterial:ii,ShadowMaterial:Rx,Shape:ks,ShapeGeometry:Nh,ShapePath:sE,ShapeUtils:Qi,ShortType:Ip,Skeleton:Eh,SkeletonHelper:jw,SkinnedMesh:mx,Source:Us,Sphere:Nn,SphereGeometry:_l,Spherical:Mp,SphericalHarmonics3:Jx,SplineCurve:Qp,SpotLight:Xx,SpotLightHelper:Xw,Sprite:dx,SpriteMaterial:Wp,SrcAlphaFactor:Su,SrcAlphaSaturateFactor:I_,SrcColorFactor:T_,StaticCopyUsage:mM,StaticDrawUsage:Ka,StaticReadUsage:fM,StereoCamera:_w,StreamCopyUsage:vM,StreamDrawUsage:hM,StreamReadUsage:pM,StringKeyframeTrack:Js,SubtractEquation:x_,SubtractiveBlending:hp,TOUCH:Cs,TangentSpaceNormalMap:Kr,TetrahedronGeometry:Fh,Texture:tn,TextureLoader:Fn,TextureUtils:hE,TorusGeometry:Oh,TorusKnotGeometry:Bh,Triangle:ti,TriangleFanDrawMode:qS,TriangleStripDrawMode:jS,TrianglesDrawMode:XS,TubeGeometry:zh,UVMapping:hh,Uint16BufferAttribute:Hp,Uint32BufferAttribute:Gp,Uint8BufferAttribute:n1,Uint8ClampedBufferAttribute:i1,Uniform:Dn,UniformsGroup:zw,UniformsLib:Oe,UniformsUtils:cx,UnsignedByteType:Fi,UnsignedInt248Type:Gs,UnsignedInt5999Type:Lp,UnsignedIntType:Sr,UnsignedShort4444Type:dh,UnsignedShort5551Type:ph,UnsignedShortType:Hs,VSMShadowMap:Di,Vector2:ue,Vector3:I,Vector4:Dt,VectorKeyframeTrack:sl,VideoTexture:w1,WebGL3DRenderTarget:WM,WebGLArrayRenderTarget:GM,WebGLCoordinateSystem:Ni,WebGLCubeRenderTarget:hx,WebGLRenderTarget:di,WebGLRenderer:fy,WebGLUtils:hy,WebGPUCoordinateSystem:Qa,WireframeGeometry:Cx,WrapAroundEnding:Za,ZeroCurvatureEnding:Ls,ZeroFactor:w_,ZeroSlopeEnding:Ds,ZeroStencilOp:JS,createCanvasElement:sx},Symbol.toStringTag,{value:"Module"}));var Hd={exports:{}},Vr={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var wv;function qC(){return wv||(wv=1,Vr.ConcurrentRoot=1,Vr.ContinuousEventPriority=4,Vr.DefaultEventPriority=16,Vr.DiscreteEventPriority=1,Vr.IdleEventPriority=536870912,Vr.LegacyRoot=0),Vr}var Ev;function YC(){return Ev||(Ev=1,Hd.exports=qC()),Hd.exports}var Da=YC();function ZC(r){let e;const t=new Set,n=(h,f)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=f?p:Object.assign({},e,p),t.forEach(g=>g(e,m))}},i=()=>e,s=(h,f=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=f(e);function g(){const x=f(e);if(!p(m,x)){const M=m;h(m=x,M)}}return t.add(g),()=>t.delete(g)},u={setState:n,getState:i,subscribe:(h,f,p)=>f||p?s(h,f,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const JC=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),Tv=JC?_e.useEffect:_e.useLayoutEffect;function KC(r){const e=typeof r=="function"?ZC(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=_e.useReducer(y=>y+1,0),a=e.getState(),c=_e.useRef(a),u=_e.useRef(n),h=_e.useRef(i),f=_e.useRef(!1),p=_e.useRef();p.current===void 0&&(p.current=n(a));let m,g=!1;(c.current!==a||u.current!==n||h.current!==i||f.current)&&(m=n(a),g=!i(p.current,m)),Tv(()=>{g&&(p.current=m),c.current=a,u.current=n,h.current=i,f.current=!1});const x=_e.useRef(a);Tv(()=>{const y=()=>{try{const E=e.getState(),w=u.current(E);h.current(p.current,w)||(c.current=E,p.current=w,s())}catch{f.current=!0,s()}},_=e.subscribe(y);return e.getState()!==x.current&&y(),_},[]);const M=g?m:p.current;return _e.useDebugValue(M),M};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}const QC=r=>typeof r=="object"&&typeof r.then=="function",Fs=[];function dy(r,e,t=(n,i)=>n===i){if(r===e)return!0;if(!r||!e)return!1;const n=r.length;if(e.length!==n)return!1;for(let i=0;i<n;i++)if(!t(r[i],e[i]))return!1;return!0}function py(r,e=null,t=!1,n={}){e===null&&(e=[r]);for(const s of Fs)if(dy(e,s.keys,s.equal)){if(t)return;if(Object.prototype.hasOwnProperty.call(s,"error"))throw s.error;if(Object.prototype.hasOwnProperty.call(s,"response"))return n.lifespan&&n.lifespan>0&&(s.timeout&&clearTimeout(s.timeout),s.timeout=setTimeout(s.remove,n.lifespan)),s.response;if(!t)throw s.promise}const i={keys:e,equal:n.equal,remove:()=>{const s=Fs.indexOf(i);s!==-1&&Fs.splice(s,1)},promise:(QC(r)?r:r(...e)).then(s=>{i.response=s,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(s=>i.error=s)};if(Fs.push(i),!t)throw i.promise}const $C=(r,e,t)=>py(r,e,!1,t),eR=(r,e,t)=>void py(r,e,!0,t),tR=r=>{if(r===void 0||r.length===0)Fs.splice(0,Fs.length);else{const e=Fs.find(t=>dy(r,t.keys,t.equal));e&&e.remove()}};var Gd={exports:{}},Wd={exports:{}},Xd={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var bv;function nR(){return bv||(bv=1,function(r){function e(O,Y){var X=O.length;O.push(Y);e:for(;0<X;){var Z=X-1>>>1,fe=O[Z];if(0<i(fe,Y))O[Z]=Y,O[X]=fe,X=Z;else break e}}function t(O){return O.length===0?null:O[0]}function n(O){if(O.length===0)return null;var Y=O[0],X=O.pop();if(X!==Y){O[0]=X;e:for(var Z=0,fe=O.length,Ee=fe>>>1;Z<Ee;){var ne=2*(Z+1)-1,Se=O[ne],Pe=ne+1,Me=O[Pe];if(0>i(Se,X))Pe<fe&&0>i(Me,Se)?(O[Z]=Me,O[Pe]=X,Z=Pe):(O[Z]=Se,O[ne]=X,Z=ne);else if(Pe<fe&&0>i(Me,X))O[Z]=Me,O[Pe]=X,Z=Pe;else break e}}return Y}function i(O,Y){var X=O.sortIndex-Y.sortIndex;return X!==0?X:O.id-Y.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var a=Date,c=a.now();r.unstable_now=function(){return a.now()-c}}var u=[],h=[],f=1,p=null,m=3,g=!1,x=!1,M=!1,y=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(O){for(var Y=t(h);Y!==null;){if(Y.callback===null)n(h);else if(Y.startTime<=O)n(h),Y.sortIndex=Y.expirationTime,e(u,Y);else break;Y=t(h)}}function T(O){if(M=!1,w(O),!x)if(t(u)!==null)x=!0,ee(L);else{var Y=t(h);Y!==null&&ge(T,Y.startTime-O)}}function L(O,Y){x=!1,M&&(M=!1,_(N),N=-1),g=!0;var X=m;try{for(w(Y),p=t(u);p!==null&&(!(p.expirationTime>Y)||O&&!F());){var Z=p.callback;if(typeof Z=="function"){p.callback=null,m=p.priorityLevel;var fe=Z(p.expirationTime<=Y);Y=r.unstable_now(),typeof fe=="function"?p.callback=fe:p===t(u)&&n(u),w(Y)}else n(u);p=t(u)}if(p!==null)var Ee=!0;else{var ne=t(h);ne!==null&&ge(T,ne.startTime-Y),Ee=!1}return Ee}finally{p=null,m=X,g=!1}}var R=!1,U=null,N=-1,C=5,A=-1;function F(){return!(r.unstable_now()-A<C)}function q(){if(U!==null){var O=r.unstable_now();A=O;var Y=!0;try{Y=U(!0,O)}finally{Y?W():(R=!1,U=null)}}else R=!1}var W;if(typeof E=="function")W=function(){E(q)};else if(typeof MessageChannel<"u"){var $=new MessageChannel,oe=$.port2;$.port1.onmessage=q,W=function(){oe.postMessage(null)}}else W=function(){y(q,0)};function ee(O){U=O,R||(R=!0,W())}function ge(O,Y){N=y(function(){O(r.unstable_now())},Y)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(O){O.callback=null},r.unstable_continueExecution=function(){x||g||(x=!0,ee(L))},r.unstable_forceFrameRate=function(O){0>O||125<O?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<O?Math.floor(1e3/O):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(O){switch(m){case 1:case 2:case 3:var Y=3;break;default:Y=m}var X=m;m=Y;try{return O()}finally{m=X}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(O,Y){switch(O){case 1:case 2:case 3:case 4:case 5:break;default:O=3}var X=m;m=O;try{return Y()}finally{m=X}},r.unstable_scheduleCallback=function(O,Y,X){var Z=r.unstable_now();switch(typeof X=="object"&&X!==null?(X=X.delay,X=typeof X=="number"&&0<X?Z+X:Z):X=Z,O){case 1:var fe=-1;break;case 2:fe=250;break;case 5:fe=1073741823;break;case 4:fe=1e4;break;default:fe=5e3}return fe=X+fe,O={id:f++,callback:Y,priorityLevel:O,startTime:X,expirationTime:fe,sortIndex:-1},X>Z?(O.sortIndex=X,e(h,O),t(u)===null&&O===t(h)&&(M?(_(N),N=-1):M=!0,ge(T,X-Z))):(O.sortIndex=fe,e(u,O),x||g||(x=!0,ee(L))),O},r.unstable_shouldYield=F,r.unstable_wrapCallback=function(O){var Y=m;return function(){var X=m;m=Y;try{return O.apply(this,arguments)}finally{m=X}}}}(Xd)),Xd}var Av;function iR(){return Av||(Av=1,Wd.exports=nR()),Wd.exports}/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var jd,Cv;function rR(){return Cv||(Cv=1,jd=function(e){var t={},n=OS(),i=iR(),s=Object.assign;function a(o){for(var l="https://reactjs.org/docs/error-decoder.html?invariant="+o,d=1;d<arguments.length;d++)l+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+o+"; visit "+l+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),f=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),x=Symbol.for("react.context"),M=Symbol.for("react.forward_ref"),y=Symbol.for("react.suspense"),_=Symbol.for("react.suspense_list"),E=Symbol.for("react.memo"),w=Symbol.for("react.lazy"),T=Symbol.for("react.offscreen"),L=Symbol.iterator;function R(o){return o===null||typeof o!="object"?null:(o=L&&o[L]||o["@@iterator"],typeof o=="function"?o:null)}function U(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case f:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case y:return"Suspense";case _:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case x:return(o.displayName||"Context")+".Consumer";case g:return(o._context.displayName||"Context")+".Provider";case M:var l=o.render;return o=o.displayName,o||(o=l.displayName||l.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case E:return l=o.displayName||null,l!==null?l:U(o.type)||"Memo";case w:l=o._payload,o=o._init;try{return U(o(l))}catch{}}return null}function N(o){var l=o.type;switch(o.tag){case 24:return"Cache";case 9:return(l.displayName||"Context")+".Consumer";case 10:return(l._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=l.render,o=o.displayName||o.name||"",l.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return l;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return U(l);case 8:return l===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof l=="function")return l.displayName||l.name||null;if(typeof l=="string")return l}return null}function C(o){var l=o,d=o;if(o.alternate)for(;l.return;)l=l.return;else{o=l;do l=o,l.flags&4098&&(d=l.return),o=l.return;while(o)}return l.tag===3?d:null}function A(o){if(C(o)!==o)throw Error(a(188))}function F(o){var l=o.alternate;if(!l){if(l=C(o),l===null)throw Error(a(188));return l!==o?null:o}for(var d=o,v=l;;){var S=d.return;if(S===null)break;var b=S.alternate;if(b===null){if(v=S.return,v!==null){d=v;continue}break}if(S.child===b.child){for(b=S.child;b;){if(b===d)return A(S),o;if(b===v)return A(S),l;b=b.sibling}throw Error(a(188))}if(d.return!==v.return)d=S,v=b;else{for(var k=!1,j=S.child;j;){if(j===d){k=!0,d=S,v=b;break}if(j===v){k=!0,v=S,d=b;break}j=j.sibling}if(!k){for(j=b.child;j;){if(j===d){k=!0,d=b,v=S;break}if(j===v){k=!0,v=b,d=S;break}j=j.sibling}if(!k)throw Error(a(189))}}if(d.alternate!==v)throw Error(a(190))}if(d.tag!==3)throw Error(a(188));return d.stateNode.current===d?o:l}function q(o){return o=F(o),o!==null?W(o):null}function W(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var l=W(o);if(l!==null)return l;o=o.sibling}return null}function $(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var l=$(o);if(l!==null)return l}o=o.sibling}return null}var oe=Array.isArray,ee=e.getPublicInstance,ge=e.getRootHostContext,O=e.getChildHostContext,Y=e.prepareForCommit,X=e.resetAfterCommit,Z=e.createInstance,fe=e.appendInitialChild,Ee=e.finalizeInitialChildren,ne=e.prepareUpdate,Se=e.shouldSetTextContent,Pe=e.createTextInstance,Me=e.scheduleTimeout,tt=e.cancelTimeout,lt=e.noTimeout,it=e.isPrimaryRenderer,pt=e.supportsMutation,ve=e.supportsPersistence,ye=e.supportsHydration,z=e.getInstanceFromNode,Je=e.preparePortalMount,we=e.getCurrentEventPriority,He=e.detachDeletedInstance,Ce=e.supportsMicrotasks,st=e.scheduleMicrotask,De=e.supportsTestSelectors,B=e.findFiberRoot,P=e.getBoundingRect,te=e.getTextContent,he=e.isHiddenSubtree,xe=e.matchAccessibilityRole,pe=e.setFocusIfFocusable,Ze=e.setupIntersectionObserver,Le=e.appendChild,Ge=e.appendChildToContainer,Mt=e.commitTextUpdate,be=e.commitMount,Xe=e.commitUpdate,ot=e.insertBefore,dt=e.insertInContainerBefore,We=e.removeChild,H=e.removeChildFromContainer,de=e.resetTextContent,Be=e.hideInstance,V=e.hideTextInstance,Ae=e.unhideInstance,ae=e.unhideTextInstance,me=e.clearContainer,ke=e.cloneInstance,Ne=e.createContainerChildSet,rt=e.appendChildToContainerChildSet,Ut=e.finalizeContainerChildren,jt=e.replaceContainerChildren,At=e.cloneHiddenInstance,an=e.cloneHiddenTextInstance,Tn=e.canHydrateInstance,Ml=e.canHydrateTextInstance,wl=e.canHydrateSuspenseInstance,zi=e.isSuspenseInstancePending,rs=e.isSuspenseInstanceFallback,El=e.registerSuspenseInstanceRetry,wr=e.getNextHydratableSibling,Ks=e.getFirstHydratableChild,Tl=e.getFirstHydratableChildWithinContainer,Qs=e.getFirstHydratableChildWithinSuspenseInstance,bl=e.hydrateInstance,Al=e.hydrateTextInstance,Wh=e.hydrateSuspenseInstance,Xh=e.getNextHydratableInstanceAfterSuspenseInstance,Cl=e.commitHydratedContainer,jh=e.commitHydratedSuspenseInstance,qh=e.clearSuspenseBoundary,Yh=e.clearSuspenseBoundaryFromContainer,D=e.shouldDeleteUnhydratedTailInstances,J=e.didNotMatchHydratedContainerTextInstance,re=e.didNotMatchHydratedTextInstance,se;function K(o){if(se===void 0)try{throw Error()}catch(d){var l=d.stack.trim().match(/\n( *(at )?)/);se=l&&l[1]||""}return`
`+se+o}var Te=!1;function Fe(o,l){if(!o||Te)return"";Te=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(l)if(l=function(){throw Error()},Object.defineProperty(l.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(l,[])}catch(Re){var v=Re}Reflect.construct(o,[],l)}else{try{l.call()}catch(Re){v=Re}o.call(l.prototype)}else{try{throw Error()}catch(Re){v=Re}o()}}catch(Re){if(Re&&v&&typeof Re.stack=="string"){for(var S=Re.stack.split(`
`),b=v.stack.split(`
`),k=S.length-1,j=b.length-1;1<=k&&0<=j&&S[k]!==b[j];)j--;for(;1<=k&&0<=j;k--,j--)if(S[k]!==b[j]){if(k!==1||j!==1)do if(k--,j--,0>j||S[k]!==b[j]){var ce=`
`+S[k].replace(" at new "," at ");return o.displayName&&ce.includes("<anonymous>")&&(ce=ce.replace("<anonymous>",o.displayName)),ce}while(1<=k&&0<=j);break}}}finally{Te=!1,Error.prepareStackTrace=d}return(o=o?o.displayName||o.name:"")?K(o):""}var je=Object.prototype.hasOwnProperty,qe=[],ct=-1;function at(o){return{current:o}}function Ue(o){0>ct||(o.current=qe[ct],qe[ct]=null,ct--)}function Qe(o,l){ct++,qe[ct]=o.current,o.current=l}var Tt={},Ct=at(Tt),Rt=at(!1),wt=Tt;function $e(o,l){var d=o.type.contextTypes;if(!d)return Tt;var v=o.stateNode;if(v&&v.__reactInternalMemoizedUnmaskedChildContext===l)return v.__reactInternalMemoizedMaskedChildContext;var S={},b;for(b in d)S[b]=l[b];return v&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=l,o.__reactInternalMemoizedMaskedChildContext=S),S}function Ot(o){return o=o.childContextTypes,o!=null}function Lt(){Ue(Rt),Ue(Ct)}function jn(o,l,d){if(Ct.current!==Tt)throw Error(a(168));Qe(Ct,l),Qe(Rt,d)}function nr(o,l,d){var v=o.stateNode;if(l=l.childContextTypes,typeof v.getChildContext!="function")return d;v=v.getChildContext();for(var S in v)if(!(S in l))throw Error(a(108,N(o)||"Unknown",S));return s({},d,v)}function vn(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||Tt,wt=Ct.current,Qe(Ct,o),Qe(Rt,Rt.current),!0}function Er(o,l,d){var v=o.stateNode;if(!v)throw Error(a(169));d?(o=nr(o,l,wt),v.__reactInternalMemoizedMergedChildContext=o,Ue(Rt),Ue(Ct),Qe(Ct,o)):Ue(Rt),Qe(Rt,d)}var It=Math.clz32?Math.clz32:Mn,qn=Math.log,Yn=Math.LN2;function Mn(o){return o>>>=0,o===0?32:31-(qn(o)/Yn|0)|0}var hn=64,Tr=4194304;function si(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function Rl(o,l){var d=o.pendingLanes;if(d===0)return 0;var v=0,S=o.suspendedLanes,b=o.pingedLanes,k=d&268435455;if(k!==0){var j=k&~S;j!==0?v=si(j):(b&=k,b!==0&&(v=si(b)))}else k=d&~S,k!==0?v=si(k):b!==0&&(v=si(b));if(v===0)return 0;if(l!==0&&l!==v&&!(l&S)&&(S=v&-v,b=l&-l,S>=b||S===16&&(b&4194240)!==0))return l;if(v&4&&(v|=d&16),l=o.entangledLanes,l!==0)for(o=o.entanglements,l&=v;0<l;)d=31-It(l),S=1<<d,v|=o[d],l&=~S;return v}function qy(o,l){switch(o){case 1:case 2:case 4:return l+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return l+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Yy(o,l){for(var d=o.suspendedLanes,v=o.pingedLanes,S=o.expirationTimes,b=o.pendingLanes;0<b;){var k=31-It(b),j=1<<k,ce=S[k];ce===-1?(!(j&d)||j&v)&&(S[k]=qy(j,l)):ce<=l&&(o.expiredLanes|=j),b&=~j}}function Zh(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function Jh(o){for(var l=[],d=0;31>d;d++)l.push(o);return l}function Ko(o,l,d){o.pendingLanes|=l,l!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,l=31-It(l),o[l]=d}function Zy(o,l){var d=o.pendingLanes&~l;o.pendingLanes=l,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=l,o.mutableReadLanes&=l,o.entangledLanes&=l,l=o.entanglements;var v=o.eventTimes;for(o=o.expirationTimes;0<d;){var S=31-It(d),b=1<<S;l[S]=0,v[S]=-1,o[S]=-1,d&=~b}}function Kh(o,l){var d=o.entangledLanes|=l;for(o=o.entanglements;d;){var v=31-It(d),S=1<<v;S&l|o[v]&l&&(o[v]|=l),d&=~S}}var Bt=0;function mm(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var Qh=i.unstable_scheduleCallback,gm=i.unstable_cancelCallback,Jy=i.unstable_shouldYield,Ky=i.unstable_requestPaint,_n=i.unstable_now,$h=i.unstable_ImmediatePriority,Qy=i.unstable_UserBlockingPriority,ef=i.unstable_NormalPriority,$y=i.unstable_IdlePriority,Pl=null,ki=null;function eS(o){if(ki&&typeof ki.onCommitFiberRoot=="function")try{ki.onCommitFiberRoot(Pl,o,void 0,(o.current.flags&128)===128)}catch{}}function tS(o,l){return o===l&&(o!==0||1/o===1/l)||o!==o&&l!==l}var Vi=typeof Object.is=="function"?Object.is:tS,ir=null,Il=!1,tf=!1;function vm(o){ir===null?ir=[o]:ir.push(o)}function nS(o){Il=!0,vm(o)}function Hi(){if(!tf&&ir!==null){tf=!0;var o=0,l=Bt;try{var d=ir;for(Bt=1;o<d.length;o++){var v=d[o];do v=v(!0);while(v!==null)}ir=null,Il=!1}catch(S){throw ir!==null&&(ir=ir.slice(o+1)),Qh($h,Hi),S}finally{Bt=l,tf=!1}}return null}var iS=c.ReactCurrentBatchConfig;function Ll(o,l){if(Vi(o,l))return!0;if(typeof o!="object"||o===null||typeof l!="object"||l===null)return!1;var d=Object.keys(o),v=Object.keys(l);if(d.length!==v.length)return!1;for(v=0;v<d.length;v++){var S=d[v];if(!je.call(l,S)||!Vi(o[S],l[S]))return!1}return!0}function rS(o){switch(o.tag){case 5:return K(o.type);case 16:return K("Lazy");case 13:return K("Suspense");case 19:return K("SuspenseList");case 0:case 2:case 15:return o=Fe(o.type,!1),o;case 11:return o=Fe(o.type.render,!1),o;case 1:return o=Fe(o.type,!0),o;default:return""}}function Ai(o,l){if(o&&o.defaultProps){l=s({},l),o=o.defaultProps;for(var d in o)l[d]===void 0&&(l[d]=o[d]);return l}return l}var Dl=at(null),Ul=null,$s=null,nf=null;function rf(){nf=$s=Ul=null}function _m(o,l,d){it?(Qe(Dl,l._currentValue),l._currentValue=d):(Qe(Dl,l._currentValue2),l._currentValue2=d)}function sf(o){var l=Dl.current;Ue(Dl),it?o._currentValue=l:o._currentValue2=l}function of(o,l,d){for(;o!==null;){var v=o.alternate;if((o.childLanes&l)!==l?(o.childLanes|=l,v!==null&&(v.childLanes|=l)):v!==null&&(v.childLanes&l)!==l&&(v.childLanes|=l),o===d)break;o=o.return}}function eo(o,l){Ul=o,nf=$s=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&l&&(li=!0),o.firstContext=null)}function pi(o){var l=it?o._currentValue:o._currentValue2;if(nf!==o)if(o={context:o,memoizedValue:l,next:null},$s===null){if(Ul===null)throw Error(a(308));$s=o,Ul.dependencies={lanes:0,firstContext:o}}else $s=$s.next=o;return l}var Gi=null,br=!1;function af(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function xm(o,l){o=o.updateQueue,l.updateQueue===o&&(l.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function rr(o,l){return{eventTime:o,lane:l,tag:0,payload:null,callback:null,next:null}}function Ar(o,l){var d=o.updateQueue;d!==null&&(d=d.shared,ln!==null&&o.mode&1&&!(bt&2)?(o=d.interleaved,o===null?(l.next=l,Gi===null?Gi=[d]:Gi.push(d)):(l.next=o.next,o.next=l),d.interleaved=l):(o=d.pending,o===null?l.next=l:(l.next=o.next,o.next=l),d.pending=l))}function Nl(o,l,d){if(l=l.updateQueue,l!==null&&(l=l.shared,(d&4194240)!==0)){var v=l.lanes;v&=o.pendingLanes,d|=v,l.lanes=d,Kh(o,d)}}function ym(o,l){var d=o.updateQueue,v=o.alternate;if(v!==null&&(v=v.updateQueue,d===v)){var S=null,b=null;if(d=d.firstBaseUpdate,d!==null){do{var k={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};b===null?S=b=k:b=b.next=k,d=d.next}while(d!==null);b===null?S=b=l:b=b.next=l}else S=b=l;d={baseState:v.baseState,firstBaseUpdate:S,lastBaseUpdate:b,shared:v.shared,effects:v.effects},o.updateQueue=d;return}o=d.lastBaseUpdate,o===null?d.firstBaseUpdate=l:o.next=l,d.lastBaseUpdate=l}function Fl(o,l,d,v){var S=o.updateQueue;br=!1;var b=S.firstBaseUpdate,k=S.lastBaseUpdate,j=S.shared.pending;if(j!==null){S.shared.pending=null;var ce=j,Re=ce.next;ce.next=null,k===null?b=Re:k.next=Re,k=ce;var Ye=o.alternate;Ye!==null&&(Ye=Ye.updateQueue,j=Ye.lastBaseUpdate,j!==k&&(j===null?Ye.firstBaseUpdate=Re:j.next=Re,Ye.lastBaseUpdate=ce))}if(b!==null){var gt=S.baseState;k=0,Ye=Re=ce=null,j=b;do{var ut=j.lane,Wt=j.eventTime;if((v&ut)===ut){Ye!==null&&(Ye=Ye.next={eventTime:Wt,lane:0,tag:j.tag,payload:j.payload,callback:j.callback,next:null});e:{var nt=o,Rn=j;switch(ut=l,Wt=d,Rn.tag){case 1:if(nt=Rn.payload,typeof nt=="function"){gt=nt.call(Wt,gt,ut);break e}gt=nt;break e;case 3:nt.flags=nt.flags&-65537|128;case 0:if(nt=Rn.payload,ut=typeof nt=="function"?nt.call(Wt,gt,ut):nt,ut==null)break e;gt=s({},gt,ut);break e;case 2:br=!0}}j.callback!==null&&j.lane!==0&&(o.flags|=64,ut=S.effects,ut===null?S.effects=[j]:ut.push(j))}else Wt={eventTime:Wt,lane:ut,tag:j.tag,payload:j.payload,callback:j.callback,next:null},Ye===null?(Re=Ye=Wt,ce=gt):Ye=Ye.next=Wt,k|=ut;if(j=j.next,j===null){if(j=S.shared.pending,j===null)break;ut=j,j=ut.next,ut.next=null,S.lastBaseUpdate=ut,S.shared.pending=null}}while(!0);if(Ye===null&&(ce=gt),S.baseState=ce,S.firstBaseUpdate=Re,S.lastBaseUpdate=Ye,l=S.shared.interleaved,l!==null){S=l;do k|=S.lane,S=S.next;while(S!==l)}else b===null&&(S.shared.lanes=0);co|=k,o.lanes=k,o.memoizedState=gt}}function Sm(o,l,d){if(o=l.effects,l.effects=null,o!==null)for(l=0;l<o.length;l++){var v=o[l],S=v.callback;if(S!==null){if(v.callback=null,v=d,typeof S!="function")throw Error(a(191,S));S.call(v)}}}var Mm=new n.Component().refs;function lf(o,l,d,v){l=o.memoizedState,d=d(v,l),d=d==null?l:s({},l,d),o.memoizedState=d,o.lanes===0&&(o.updateQueue.baseState=d)}var Ol={isMounted:function(o){return(o=o._reactInternals)?C(o)===o:!1},enqueueSetState:function(o,l,d){o=o._reactInternals;var v=zn(),S=Pr(o),b=rr(v,S);b.payload=l,d!=null&&(b.callback=d),Ar(o,b),l=xi(o,S,v),l!==null&&Nl(l,o,S)},enqueueReplaceState:function(o,l,d){o=o._reactInternals;var v=zn(),S=Pr(o),b=rr(v,S);b.tag=1,b.payload=l,d!=null&&(b.callback=d),Ar(o,b),l=xi(o,S,v),l!==null&&Nl(l,o,S)},enqueueForceUpdate:function(o,l){o=o._reactInternals;var d=zn(),v=Pr(o),S=rr(d,v);S.tag=2,l!=null&&(S.callback=l),Ar(o,S),l=xi(o,v,d),l!==null&&Nl(l,o,v)}};function wm(o,l,d,v,S,b,k){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(v,b,k):l.prototype&&l.prototype.isPureReactComponent?!Ll(d,v)||!Ll(S,b):!0}function Em(o,l,d){var v=!1,S=Tt,b=l.contextType;return typeof b=="object"&&b!==null?b=pi(b):(S=Ot(l)?wt:Ct.current,v=l.contextTypes,b=(v=v!=null)?$e(o,S):Tt),l=new l(d,b),o.memoizedState=l.state!==null&&l.state!==void 0?l.state:null,l.updater=Ol,o.stateNode=l,l._reactInternals=o,v&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=S,o.__reactInternalMemoizedMaskedChildContext=b),l}function Tm(o,l,d,v){o=l.state,typeof l.componentWillReceiveProps=="function"&&l.componentWillReceiveProps(d,v),typeof l.UNSAFE_componentWillReceiveProps=="function"&&l.UNSAFE_componentWillReceiveProps(d,v),l.state!==o&&Ol.enqueueReplaceState(l,l.state,null)}function cf(o,l,d,v){var S=o.stateNode;S.props=d,S.state=o.memoizedState,S.refs=Mm,af(o);var b=l.contextType;typeof b=="object"&&b!==null?S.context=pi(b):(b=Ot(l)?wt:Ct.current,S.context=$e(o,b)),S.state=o.memoizedState,b=l.getDerivedStateFromProps,typeof b=="function"&&(lf(o,l,b,d),S.state=o.memoizedState),typeof l.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(l=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),l!==S.state&&Ol.enqueueReplaceState(S,S.state,null),Fl(o,d,S,v),S.state=o.memoizedState),typeof S.componentDidMount=="function"&&(o.flags|=4194308)}var to=[],no=0,Bl=null,zl=0,mi=[],gi=0,ss=null,sr=1,or="";function os(o,l){to[no++]=zl,to[no++]=Bl,Bl=o,zl=l}function bm(o,l,d){mi[gi++]=sr,mi[gi++]=or,mi[gi++]=ss,ss=o;var v=sr;o=or;var S=32-It(v)-1;v&=~(1<<S),d+=1;var b=32-It(l)+S;if(30<b){var k=S-S%5;b=(v&(1<<k)-1).toString(32),v>>=k,S-=k,sr=1<<32-It(l)+S|d<<S|v,or=b+o}else sr=1<<b|d<<S|v,or=o}function uf(o){o.return!==null&&(os(o,1),bm(o,1,0))}function hf(o){for(;o===Bl;)Bl=to[--no],to[no]=null,zl=to[--no],to[no]=null;for(;o===ss;)ss=mi[--gi],mi[gi]=null,or=mi[--gi],mi[gi]=null,sr=mi[--gi],mi[gi]=null}var oi=null,ai=null,qt=!1,Qo=!1,Ci=null;function Am(o,l){var d=yi(5,null,null,0);d.elementType="DELETED",d.stateNode=l,d.return=o,l=o.deletions,l===null?(o.deletions=[d],o.flags|=16):l.push(d)}function Cm(o,l){switch(o.tag){case 5:return l=Tn(l,o.type,o.pendingProps),l!==null?(o.stateNode=l,oi=o,ai=Ks(l),!0):!1;case 6:return l=Ml(l,o.pendingProps),l!==null?(o.stateNode=l,oi=o,ai=null,!0):!1;case 13:if(l=wl(l),l!==null){var d=ss!==null?{id:sr,overflow:or}:null;return o.memoizedState={dehydrated:l,treeContext:d,retryLane:1073741824},d=yi(18,null,null,0),d.stateNode=l,d.return=o,o.child=d,oi=o,ai=null,!0}return!1;default:return!1}}function ff(o){return(o.mode&1)!==0&&(o.flags&128)===0}function df(o){if(qt){var l=ai;if(l){var d=l;if(!Cm(o,l)){if(ff(o))throw Error(a(418));l=wr(d);var v=oi;l&&Cm(o,l)?Am(v,d):(o.flags=o.flags&-4097|2,qt=!1,oi=o)}}else{if(ff(o))throw Error(a(418));o.flags=o.flags&-4097|2,qt=!1,oi=o}}}function Rm(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;oi=o}function $o(o){if(!ye||o!==oi)return!1;if(!qt)return Rm(o),qt=!0,!1;if(o.tag!==3&&(o.tag!==5||D(o.type)&&!Se(o.type,o.memoizedProps))){var l=ai;if(l){if(ff(o)){for(o=ai;o;)o=wr(o);throw Error(a(418))}for(;l;)Am(o,l),l=wr(l)}}if(Rm(o),o.tag===13){if(!ye)throw Error(a(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(a(317));ai=Xh(o)}else ai=oi?wr(o.stateNode):null;return!0}function io(){ye&&(ai=oi=null,Qo=qt=!1)}function pf(o){Ci===null?Ci=[o]:Ci.push(o)}function ea(o,l,d){if(o=d.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(a(309));var v=d.stateNode}if(!v)throw Error(a(147,o));var S=v,b=""+o;return l!==null&&l.ref!==null&&typeof l.ref=="function"&&l.ref._stringRef===b?l.ref:(l=function(k){var j=S.refs;j===Mm&&(j=S.refs={}),k===null?delete j[b]:j[b]=k},l._stringRef=b,l)}if(typeof o!="string")throw Error(a(284));if(!d._owner)throw Error(a(290,o))}return o}function kl(o,l){throw o=Object.prototype.toString.call(l),Error(a(31,o==="[object Object]"?"object with keys {"+Object.keys(l).join(", ")+"}":o))}function Pm(o){var l=o._init;return l(o._payload)}function Im(o){function l(ie,Q){if(o){var le=ie.deletions;le===null?(ie.deletions=[Q],ie.flags|=16):le.push(Q)}}function d(ie,Q){if(!o)return null;for(;Q!==null;)l(ie,Q),Q=Q.sibling;return null}function v(ie,Q){for(ie=new Map;Q!==null;)Q.key!==null?ie.set(Q.key,Q):ie.set(Q.index,Q),Q=Q.sibling;return ie}function S(ie,Q){return ie=Lr(ie,Q),ie.index=0,ie.sibling=null,ie}function b(ie,Q,le){return ie.index=le,o?(le=ie.alternate,le!==null?(le=le.index,le<Q?(ie.flags|=2,Q):le):(ie.flags|=2,Q)):(ie.flags|=1048576,Q)}function k(ie){return o&&ie.alternate===null&&(ie.flags|=2),ie}function j(ie,Q,le,Ve){return Q===null||Q.tag!==6?(Q=Kf(le,ie.mode,Ve),Q.return=ie,Q):(Q=S(Q,le),Q.return=ie,Q)}function ce(ie,Q,le,Ve){var et=le.type;return et===f?Ye(ie,Q,le.props.children,Ve,le.key):Q!==null&&(Q.elementType===et||typeof et=="object"&&et!==null&&et.$$typeof===w&&Pm(et)===Q.type)?(Ve=S(Q,le.props),Ve.ref=ea(ie,Q,le),Ve.return=ie,Ve):(Ve=vc(le.type,le.key,le.props,null,ie.mode,Ve),Ve.ref=ea(ie,Q,le),Ve.return=ie,Ve)}function Re(ie,Q,le,Ve){return Q===null||Q.tag!==4||Q.stateNode.containerInfo!==le.containerInfo||Q.stateNode.implementation!==le.implementation?(Q=Qf(le,ie.mode,Ve),Q.return=ie,Q):(Q=S(Q,le.children||[]),Q.return=ie,Q)}function Ye(ie,Q,le,Ve,et){return Q===null||Q.tag!==7?(Q=ds(le,ie.mode,Ve,et),Q.return=ie,Q):(Q=S(Q,le),Q.return=ie,Q)}function gt(ie,Q,le){if(typeof Q=="string"&&Q!==""||typeof Q=="number")return Q=Kf(""+Q,ie.mode,le),Q.return=ie,Q;if(typeof Q=="object"&&Q!==null){switch(Q.$$typeof){case u:return le=vc(Q.type,Q.key,Q.props,null,ie.mode,le),le.ref=ea(ie,null,Q),le.return=ie,le;case h:return Q=Qf(Q,ie.mode,le),Q.return=ie,Q;case w:var Ve=Q._init;return gt(ie,Ve(Q._payload),le)}if(oe(Q)||R(Q))return Q=ds(Q,ie.mode,le,null),Q.return=ie,Q;kl(ie,Q)}return null}function ut(ie,Q,le,Ve){var et=Q!==null?Q.key:null;if(typeof le=="string"&&le!==""||typeof le=="number")return et!==null?null:j(ie,Q,""+le,Ve);if(typeof le=="object"&&le!==null){switch(le.$$typeof){case u:return le.key===et?ce(ie,Q,le,Ve):null;case h:return le.key===et?Re(ie,Q,le,Ve):null;case w:return et=le._init,ut(ie,Q,et(le._payload),Ve)}if(oe(le)||R(le))return et!==null?null:Ye(ie,Q,le,Ve,null);kl(ie,le)}return null}function Wt(ie,Q,le,Ve,et){if(typeof Ve=="string"&&Ve!==""||typeof Ve=="number")return ie=ie.get(le)||null,j(Q,ie,""+Ve,et);if(typeof Ve=="object"&&Ve!==null){switch(Ve.$$typeof){case u:return ie=ie.get(Ve.key===null?le:Ve.key)||null,ce(Q,ie,Ve,et);case h:return ie=ie.get(Ve.key===null?le:Ve.key)||null,Re(Q,ie,Ve,et);case w:var Et=Ve._init;return Wt(ie,Q,le,Et(Ve._payload),et)}if(oe(Ve)||R(Ve))return ie=ie.get(le)||null,Ye(Q,ie,Ve,et,null);kl(Q,Ve)}return null}function nt(ie,Q,le,Ve){for(var et=null,Et=null,vt=Q,zt=Q=0,yn=null;vt!==null&&zt<le.length;zt++){vt.index>zt?(yn=vt,vt=null):yn=vt.sibling;var kt=ut(ie,vt,le[zt],Ve);if(kt===null){vt===null&&(vt=yn);break}o&&vt&&kt.alternate===null&&l(ie,vt),Q=b(kt,Q,zt),Et===null?et=kt:Et.sibling=kt,Et=kt,vt=yn}if(zt===le.length)return d(ie,vt),qt&&os(ie,zt),et;if(vt===null){for(;zt<le.length;zt++)vt=gt(ie,le[zt],Ve),vt!==null&&(Q=b(vt,Q,zt),Et===null?et=vt:Et.sibling=vt,Et=vt);return qt&&os(ie,zt),et}for(vt=v(ie,vt);zt<le.length;zt++)yn=Wt(vt,ie,zt,le[zt],Ve),yn!==null&&(o&&yn.alternate!==null&&vt.delete(yn.key===null?zt:yn.key),Q=b(yn,Q,zt),Et===null?et=yn:Et.sibling=yn,Et=yn);return o&&vt.forEach(function(Dr){return l(ie,Dr)}),qt&&os(ie,zt),et}function Rn(ie,Q,le,Ve){var et=R(le);if(typeof et!="function")throw Error(a(150));if(le=et.call(le),le==null)throw Error(a(151));for(var Et=et=null,vt=Q,zt=Q=0,yn=null,kt=le.next();vt!==null&&!kt.done;zt++,kt=le.next()){vt.index>zt?(yn=vt,vt=null):yn=vt.sibling;var Dr=ut(ie,vt,kt.value,Ve);if(Dr===null){vt===null&&(vt=yn);break}o&&vt&&Dr.alternate===null&&l(ie,vt),Q=b(Dr,Q,zt),Et===null?et=Dr:Et.sibling=Dr,Et=Dr,vt=yn}if(kt.done)return d(ie,vt),qt&&os(ie,zt),et;if(vt===null){for(;!kt.done;zt++,kt=le.next())kt=gt(ie,kt.value,Ve),kt!==null&&(Q=b(kt,Q,zt),Et===null?et=kt:Et.sibling=kt,Et=kt);return qt&&os(ie,zt),et}for(vt=v(ie,vt);!kt.done;zt++,kt=le.next())kt=Wt(vt,ie,zt,kt.value,Ve),kt!==null&&(o&&kt.alternate!==null&&vt.delete(kt.key===null?zt:kt.key),Q=b(kt,Q,zt),Et===null?et=kt:Et.sibling=kt,Et=kt);return o&&vt.forEach(function(US){return l(ie,US)}),qt&&os(ie,zt),et}function Si(ie,Q,le,Ve){if(typeof le=="object"&&le!==null&&le.type===f&&le.key===null&&(le=le.props.children),typeof le=="object"&&le!==null){switch(le.$$typeof){case u:e:{for(var et=le.key,Et=Q;Et!==null;){if(Et.key===et){if(et=le.type,et===f){if(Et.tag===7){d(ie,Et.sibling),Q=S(Et,le.props.children),Q.return=ie,ie=Q;break e}}else if(Et.elementType===et||typeof et=="object"&&et!==null&&et.$$typeof===w&&Pm(et)===Et.type){d(ie,Et.sibling),Q=S(Et,le.props),Q.ref=ea(ie,Et,le),Q.return=ie,ie=Q;break e}d(ie,Et);break}else l(ie,Et);Et=Et.sibling}le.type===f?(Q=ds(le.props.children,ie.mode,Ve,le.key),Q.return=ie,ie=Q):(Ve=vc(le.type,le.key,le.props,null,ie.mode,Ve),Ve.ref=ea(ie,Q,le),Ve.return=ie,ie=Ve)}return k(ie);case h:e:{for(Et=le.key;Q!==null;){if(Q.key===Et)if(Q.tag===4&&Q.stateNode.containerInfo===le.containerInfo&&Q.stateNode.implementation===le.implementation){d(ie,Q.sibling),Q=S(Q,le.children||[]),Q.return=ie,ie=Q;break e}else{d(ie,Q);break}else l(ie,Q);Q=Q.sibling}Q=Qf(le,ie.mode,Ve),Q.return=ie,ie=Q}return k(ie);case w:return Et=le._init,Si(ie,Q,Et(le._payload),Ve)}if(oe(le))return nt(ie,Q,le,Ve);if(R(le))return Rn(ie,Q,le,Ve);kl(ie,le)}return typeof le=="string"&&le!==""||typeof le=="number"?(le=""+le,Q!==null&&Q.tag===6?(d(ie,Q.sibling),Q=S(Q,le),Q.return=ie,ie=Q):(d(ie,Q),Q=Kf(le,ie.mode,Ve),Q.return=ie,ie=Q),k(ie)):d(ie,Q)}return Si}var ro=Im(!0),Lm=Im(!1),ta={},vi=at(ta),na=at(ta),so=at(ta);function Wi(o){if(o===ta)throw Error(a(174));return o}function mf(o,l){Qe(so,l),Qe(na,o),Qe(vi,ta),o=ge(l),Ue(vi),Qe(vi,o)}function oo(){Ue(vi),Ue(na),Ue(so)}function Dm(o){var l=Wi(so.current),d=Wi(vi.current);l=O(d,o.type,l),d!==l&&(Qe(na,o),Qe(vi,l))}function gf(o){na.current===o&&(Ue(vi),Ue(na))}var Zt=at(0);function Vl(o){for(var l=o;l!==null;){if(l.tag===13){var d=l.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||zi(d)||rs(d)))return l}else if(l.tag===19&&l.memoizedProps.revealOrder!==void 0){if(l.flags&128)return l}else if(l.child!==null){l.child.return=l,l=l.child;continue}if(l===o)break;for(;l.sibling===null;){if(l.return===null||l.return===o)return null;l=l.return}l.sibling.return=l.return,l=l.sibling}return null}var vf=[];function _f(){for(var o=0;o<vf.length;o++){var l=vf[o];it?l._workInProgressVersionPrimary=null:l._workInProgressVersionSecondary=null}vf.length=0}var Hl=c.ReactCurrentDispatcher,_i=c.ReactCurrentBatchConfig,ao=0,Qt=null,bn=null,xn=null,Gl=!1,ia=!1,ra=0,sS=0;function An(){throw Error(a(321))}function xf(o,l){if(l===null)return!1;for(var d=0;d<l.length&&d<o.length;d++)if(!Vi(o[d],l[d]))return!1;return!0}function yf(o,l,d,v,S,b){if(ao=b,Qt=l,l.memoizedState=null,l.updateQueue=null,l.lanes=0,Hl.current=o===null||o.memoizedState===null?cS:uS,o=d(v,S),ia){b=0;do{if(ia=!1,ra=0,25<=b)throw Error(a(301));b+=1,xn=bn=null,l.updateQueue=null,Hl.current=hS,o=d(v,S)}while(ia)}if(Hl.current=Yl,l=bn!==null&&bn.next!==null,ao=0,xn=bn=Qt=null,Gl=!1,l)throw Error(a(300));return o}function Sf(){var o=ra!==0;return ra=0,o}function ar(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return xn===null?Qt.memoizedState=xn=o:xn=xn.next=o,xn}function Xi(){if(bn===null){var o=Qt.alternate;o=o!==null?o.memoizedState:null}else o=bn.next;var l=xn===null?Qt.memoizedState:xn.next;if(l!==null)xn=l,bn=o;else{if(o===null)throw Error(a(310));bn=o,o={memoizedState:bn.memoizedState,baseState:bn.baseState,baseQueue:bn.baseQueue,queue:bn.queue,next:null},xn===null?Qt.memoizedState=xn=o:xn=xn.next=o}return xn}function as(o,l){return typeof l=="function"?l(o):l}function Wl(o){var l=Xi(),d=l.queue;if(d===null)throw Error(a(311));d.lastRenderedReducer=o;var v=bn,S=v.baseQueue,b=d.pending;if(b!==null){if(S!==null){var k=S.next;S.next=b.next,b.next=k}v.baseQueue=S=b,d.pending=null}if(S!==null){b=S.next,v=v.baseState;var j=k=null,ce=null,Re=b;do{var Ye=Re.lane;if((ao&Ye)===Ye)ce!==null&&(ce=ce.next={lane:0,action:Re.action,hasEagerState:Re.hasEagerState,eagerState:Re.eagerState,next:null}),v=Re.hasEagerState?Re.eagerState:o(v,Re.action);else{var gt={lane:Ye,action:Re.action,hasEagerState:Re.hasEagerState,eagerState:Re.eagerState,next:null};ce===null?(j=ce=gt,k=v):ce=ce.next=gt,Qt.lanes|=Ye,co|=Ye}Re=Re.next}while(Re!==null&&Re!==b);ce===null?k=v:ce.next=j,Vi(v,l.memoizedState)||(li=!0),l.memoizedState=v,l.baseState=k,l.baseQueue=ce,d.lastRenderedState=v}if(o=d.interleaved,o!==null){S=o;do b=S.lane,Qt.lanes|=b,co|=b,S=S.next;while(S!==o)}else S===null&&(d.lanes=0);return[l.memoizedState,d.dispatch]}function Xl(o){var l=Xi(),d=l.queue;if(d===null)throw Error(a(311));d.lastRenderedReducer=o;var v=d.dispatch,S=d.pending,b=l.memoizedState;if(S!==null){d.pending=null;var k=S=S.next;do b=o(b,k.action),k=k.next;while(k!==S);Vi(b,l.memoizedState)||(li=!0),l.memoizedState=b,l.baseQueue===null&&(l.baseState=b),d.lastRenderedState=b}return[b,v]}function Um(){}function Nm(o,l){var d=Qt,v=Xi(),S=l(),b=!Vi(v.memoizedState,S);if(b&&(v.memoizedState=S,li=!0),v=v.queue,oa(Bm.bind(null,d,v,o),[o]),v.getSnapshot!==l||b||xn!==null&&xn.memoizedState.tag&1){if(d.flags|=2048,sa(9,Om.bind(null,d,v,S,l),void 0,null),ln===null)throw Error(a(349));ao&30||Fm(d,l,S)}return S}function Fm(o,l,d){o.flags|=16384,o={getSnapshot:l,value:d},l=Qt.updateQueue,l===null?(l={lastEffect:null,stores:null},Qt.updateQueue=l,l.stores=[o]):(d=l.stores,d===null?l.stores=[o]:d.push(o))}function Om(o,l,d,v){l.value=d,l.getSnapshot=v,zm(l)&&xi(o,1,-1)}function Bm(o,l,d){return d(function(){zm(l)&&xi(o,1,-1)})}function zm(o){var l=o.getSnapshot;o=o.value;try{var d=l();return!Vi(o,d)}catch{return!0}}function Mf(o){var l=ar();return typeof o=="function"&&(o=o()),l.memoizedState=l.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:as,lastRenderedState:o},l.queue=o,o=o.dispatch=lS.bind(null,Qt,o),[l.memoizedState,o]}function sa(o,l,d,v){return o={tag:o,create:l,destroy:d,deps:v,next:null},l=Qt.updateQueue,l===null?(l={lastEffect:null,stores:null},Qt.updateQueue=l,l.lastEffect=o.next=o):(d=l.lastEffect,d===null?l.lastEffect=o.next=o:(v=d.next,d.next=o,o.next=v,l.lastEffect=o)),o}function km(){return Xi().memoizedState}function jl(o,l,d,v){var S=ar();Qt.flags|=o,S.memoizedState=sa(1|l,d,void 0,v===void 0?null:v)}function ql(o,l,d,v){var S=Xi();v=v===void 0?null:v;var b=void 0;if(bn!==null){var k=bn.memoizedState;if(b=k.destroy,v!==null&&xf(v,k.deps)){S.memoizedState=sa(l,d,b,v);return}}Qt.flags|=o,S.memoizedState=sa(1|l,d,b,v)}function wf(o,l){return jl(8390656,8,o,l)}function oa(o,l){return ql(2048,8,o,l)}function Vm(o,l){return ql(4,2,o,l)}function Hm(o,l){return ql(4,4,o,l)}function Gm(o,l){if(typeof l=="function")return o=o(),l(o),function(){l(null)};if(l!=null)return o=o(),l.current=o,function(){l.current=null}}function Wm(o,l,d){return d=d!=null?d.concat([o]):null,ql(4,4,Gm.bind(null,l,o),d)}function Ef(){}function Xm(o,l){var d=Xi();l=l===void 0?null:l;var v=d.memoizedState;return v!==null&&l!==null&&xf(l,v[1])?v[0]:(d.memoizedState=[o,l],o)}function jm(o,l){var d=Xi();l=l===void 0?null:l;var v=d.memoizedState;return v!==null&&l!==null&&xf(l,v[1])?v[0]:(o=o(),d.memoizedState=[o,l],o)}function oS(o,l){var d=Bt;Bt=d!==0&&4>d?d:4,o(!0);var v=_i.transition;_i.transition={};try{o(!1),l()}finally{Bt=d,_i.transition=v}}function qm(){return Xi().memoizedState}function aS(o,l,d){var v=Pr(o);d={lane:v,action:d,hasEagerState:!1,eagerState:null,next:null},Ym(o)?Zm(l,d):(Jm(o,l,d),d=zn(),o=xi(o,v,d),o!==null&&Km(o,l,v))}function lS(o,l,d){var v=Pr(o),S={lane:v,action:d,hasEagerState:!1,eagerState:null,next:null};if(Ym(o))Zm(l,S);else{Jm(o,l,S);var b=o.alternate;if(o.lanes===0&&(b===null||b.lanes===0)&&(b=l.lastRenderedReducer,b!==null))try{var k=l.lastRenderedState,j=b(k,d);if(S.hasEagerState=!0,S.eagerState=j,Vi(j,k))return}catch{}finally{}d=zn(),o=xi(o,v,d),o!==null&&Km(o,l,v)}}function Ym(o){var l=o.alternate;return o===Qt||l!==null&&l===Qt}function Zm(o,l){ia=Gl=!0;var d=o.pending;d===null?l.next=l:(l.next=d.next,d.next=l),o.pending=l}function Jm(o,l,d){ln!==null&&o.mode&1&&!(bt&2)?(o=l.interleaved,o===null?(d.next=d,Gi===null?Gi=[l]:Gi.push(l)):(d.next=o.next,o.next=d),l.interleaved=d):(o=l.pending,o===null?d.next=d:(d.next=o.next,o.next=d),l.pending=d)}function Km(o,l,d){if(d&4194240){var v=l.lanes;v&=o.pendingLanes,d|=v,l.lanes=d,Kh(o,d)}}var Yl={readContext:pi,useCallback:An,useContext:An,useEffect:An,useImperativeHandle:An,useInsertionEffect:An,useLayoutEffect:An,useMemo:An,useReducer:An,useRef:An,useState:An,useDebugValue:An,useDeferredValue:An,useTransition:An,useMutableSource:An,useSyncExternalStore:An,useId:An,unstable_isNewReconciler:!1},cS={readContext:pi,useCallback:function(o,l){return ar().memoizedState=[o,l===void 0?null:l],o},useContext:pi,useEffect:wf,useImperativeHandle:function(o,l,d){return d=d!=null?d.concat([o]):null,jl(4194308,4,Gm.bind(null,l,o),d)},useLayoutEffect:function(o,l){return jl(4194308,4,o,l)},useInsertionEffect:function(o,l){return jl(4,2,o,l)},useMemo:function(o,l){var d=ar();return l=l===void 0?null:l,o=o(),d.memoizedState=[o,l],o},useReducer:function(o,l,d){var v=ar();return l=d!==void 0?d(l):l,v.memoizedState=v.baseState=l,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:l},v.queue=o,o=o.dispatch=aS.bind(null,Qt,o),[v.memoizedState,o]},useRef:function(o){var l=ar();return o={current:o},l.memoizedState=o},useState:Mf,useDebugValue:Ef,useDeferredValue:function(o){var l=Mf(o),d=l[0],v=l[1];return wf(function(){var S=_i.transition;_i.transition={};try{v(o)}finally{_i.transition=S}},[o]),d},useTransition:function(){var o=Mf(!1),l=o[0];return o=oS.bind(null,o[1]),ar().memoizedState=o,[l,o]},useMutableSource:function(){},useSyncExternalStore:function(o,l,d){var v=Qt,S=ar();if(qt){if(d===void 0)throw Error(a(407));d=d()}else{if(d=l(),ln===null)throw Error(a(349));ao&30||Fm(v,l,d)}S.memoizedState=d;var b={value:d,getSnapshot:l};return S.queue=b,wf(Bm.bind(null,v,b,o),[o]),v.flags|=2048,sa(9,Om.bind(null,v,b,d,l),void 0,null),d},useId:function(){var o=ar(),l=ln.identifierPrefix;if(qt){var d=or,v=sr;d=(v&~(1<<32-It(v)-1)).toString(32)+d,l=":"+l+"R"+d,d=ra++,0<d&&(l+="H"+d.toString(32)),l+=":"}else d=sS++,l=":"+l+"r"+d.toString(32)+":";return o.memoizedState=l},unstable_isNewReconciler:!1},uS={readContext:pi,useCallback:Xm,useContext:pi,useEffect:oa,useImperativeHandle:Wm,useInsertionEffect:Vm,useLayoutEffect:Hm,useMemo:jm,useReducer:Wl,useRef:km,useState:function(){return Wl(as)},useDebugValue:Ef,useDeferredValue:function(o){var l=Wl(as),d=l[0],v=l[1];return oa(function(){var S=_i.transition;_i.transition={};try{v(o)}finally{_i.transition=S}},[o]),d},useTransition:function(){var o=Wl(as)[0],l=Xi().memoizedState;return[o,l]},useMutableSource:Um,useSyncExternalStore:Nm,useId:qm,unstable_isNewReconciler:!1},hS={readContext:pi,useCallback:Xm,useContext:pi,useEffect:oa,useImperativeHandle:Wm,useInsertionEffect:Vm,useLayoutEffect:Hm,useMemo:jm,useReducer:Xl,useRef:km,useState:function(){return Xl(as)},useDebugValue:Ef,useDeferredValue:function(o){var l=Xl(as),d=l[0],v=l[1];return oa(function(){var S=_i.transition;_i.transition={};try{v(o)}finally{_i.transition=S}},[o]),d},useTransition:function(){var o=Xl(as)[0],l=Xi().memoizedState;return[o,l]},useMutableSource:Um,useSyncExternalStore:Nm,useId:qm,unstable_isNewReconciler:!1};function Tf(o,l){try{var d="",v=l;do d+=rS(v),v=v.return;while(v);var S=d}catch(b){S=`
Error generating stack: `+b.message+`
`+b.stack}return{value:o,source:l,stack:S}}function bf(o,l){try{console.error(l.value)}catch(d){setTimeout(function(){throw d})}}var fS=typeof WeakMap=="function"?WeakMap:Map;function Qm(o,l,d){d=rr(-1,d),d.tag=3,d.payload={element:null};var v=l.value;return d.callback=function(){uc||(uc=!0,Wf=v),bf(o,l)},d}function $m(o,l,d){d=rr(-1,d),d.tag=3;var v=o.type.getDerivedStateFromError;if(typeof v=="function"){var S=l.value;d.payload=function(){return v(S)},d.callback=function(){bf(o,l)}}var b=o.stateNode;return b!==null&&typeof b.componentDidCatch=="function"&&(d.callback=function(){bf(o,l),typeof v!="function"&&(Cr===null?Cr=new Set([this]):Cr.add(this));var k=l.stack;this.componentDidCatch(l.value,{componentStack:k!==null?k:""})}),d}function eg(o,l,d){var v=o.pingCache;if(v===null){v=o.pingCache=new fS;var S=new Set;v.set(l,S)}else S=v.get(l),S===void 0&&(S=new Set,v.set(l,S));S.has(d)||(S.add(d),o=bS.bind(null,o,l,d),l.then(o,o))}function tg(o){do{var l;if((l=o.tag===13)&&(l=o.memoizedState,l=l!==null?l.dehydrated!==null:!0),l)return o;o=o.return}while(o!==null);return null}function ng(o,l,d,v,S){return o.mode&1?(o.flags|=65536,o.lanes=S,o):(o===l?o.flags|=65536:(o.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(l=rr(-1,1),l.tag=2,Ar(d,l))),d.lanes|=1),o)}function ji(o){o.flags|=4}function ig(o,l){if(o!==null&&o.child===l.child)return!0;if(l.flags&16)return!1;for(o=l.child;o!==null;){if(o.flags&12854||o.subtreeFlags&12854)return!1;o=o.sibling}return!0}var aa,la,Zl,Jl;if(pt)aa=function(o,l){for(var d=l.child;d!==null;){if(d.tag===5||d.tag===6)fe(o,d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===l)break;for(;d.sibling===null;){if(d.return===null||d.return===l)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},la=function(){},Zl=function(o,l,d,v,S){if(o=o.memoizedProps,o!==v){var b=l.stateNode,k=Wi(vi.current);d=ne(b,d,o,v,S,k),(l.updateQueue=d)&&ji(l)}},Jl=function(o,l,d,v){d!==v&&ji(l)};else if(ve){aa=function(o,l,d,v){for(var S=l.child;S!==null;){if(S.tag===5){var b=S.stateNode;d&&v&&(b=At(b,S.type,S.memoizedProps,S)),fe(o,b)}else if(S.tag===6)b=S.stateNode,d&&v&&(b=an(b,S.memoizedProps,S)),fe(o,b);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)b=S.child,b!==null&&(b.return=S),aa(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===l)break;for(;S.sibling===null;){if(S.return===null||S.return===l)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};var rg=function(o,l,d,v){for(var S=l.child;S!==null;){if(S.tag===5){var b=S.stateNode;d&&v&&(b=At(b,S.type,S.memoizedProps,S)),rt(o,b)}else if(S.tag===6)b=S.stateNode,d&&v&&(b=an(b,S.memoizedProps,S)),rt(o,b);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)b=S.child,b!==null&&(b.return=S),rg(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===l)break;for(;S.sibling===null;){if(S.return===null||S.return===l)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};la=function(o,l){var d=l.stateNode;if(!ig(o,l)){o=d.containerInfo;var v=Ne(o);rg(v,l,!1,!1),d.pendingChildren=v,ji(l),Ut(o,v)}},Zl=function(o,l,d,v,S){var b=o.stateNode,k=o.memoizedProps;if((o=ig(o,l))&&k===v)l.stateNode=b;else{var j=l.stateNode,ce=Wi(vi.current),Re=null;k!==v&&(Re=ne(j,d,k,v,S,ce)),o&&Re===null?l.stateNode=b:(b=ke(b,Re,d,k,v,l,o,j),Ee(b,d,v,S,ce)&&ji(l),l.stateNode=b,o?ji(l):aa(b,l,!1,!1))}},Jl=function(o,l,d,v){d!==v?(o=Wi(so.current),d=Wi(vi.current),l.stateNode=Pe(v,o,d,l),ji(l)):l.stateNode=o.stateNode}}else la=function(){},Zl=function(){},Jl=function(){};function ca(o,l){if(!qt)switch(o.tailMode){case"hidden":l=o.tail;for(var d=null;l!==null;)l.alternate!==null&&(d=l),l=l.sibling;d===null?o.tail=null:d.sibling=null;break;case"collapsed":d=o.tail;for(var v=null;d!==null;)d.alternate!==null&&(v=d),d=d.sibling;v===null?l||o.tail===null?o.tail=null:o.tail.sibling=null:v.sibling=null}}function Cn(o){var l=o.alternate!==null&&o.alternate.child===o.child,d=0,v=0;if(l)for(var S=o.child;S!==null;)d|=S.lanes|S.childLanes,v|=S.subtreeFlags&14680064,v|=S.flags&14680064,S.return=o,S=S.sibling;else for(S=o.child;S!==null;)d|=S.lanes|S.childLanes,v|=S.subtreeFlags,v|=S.flags,S.return=o,S=S.sibling;return o.subtreeFlags|=v,o.childLanes=d,l}function dS(o,l,d){var v=l.pendingProps;switch(hf(l),l.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Cn(l),null;case 1:return Ot(l.type)&&Lt(),Cn(l),null;case 3:return v=l.stateNode,oo(),Ue(Rt),Ue(Ct),_f(),v.pendingContext&&(v.context=v.pendingContext,v.pendingContext=null),(o===null||o.child===null)&&($o(l)?ji(l):o===null||o.memoizedState.isDehydrated&&!(l.flags&256)||(l.flags|=1024,Ci!==null&&(qf(Ci),Ci=null))),la(o,l),Cn(l),null;case 5:gf(l),d=Wi(so.current);var S=l.type;if(o!==null&&l.stateNode!=null)Zl(o,l,S,v,d),o.ref!==l.ref&&(l.flags|=512,l.flags|=2097152);else{if(!v){if(l.stateNode===null)throw Error(a(166));return Cn(l),null}if(o=Wi(vi.current),$o(l)){if(!ye)throw Error(a(175));o=bl(l.stateNode,l.type,l.memoizedProps,d,o,l,!Qo),l.updateQueue=o,o!==null&&ji(l)}else{var b=Z(S,v,d,o,l);aa(b,l,!1,!1),l.stateNode=b,Ee(b,S,v,d,o)&&ji(l)}l.ref!==null&&(l.flags|=512,l.flags|=2097152)}return Cn(l),null;case 6:if(o&&l.stateNode!=null)Jl(o,l,o.memoizedProps,v);else{if(typeof v!="string"&&l.stateNode===null)throw Error(a(166));if(o=Wi(so.current),d=Wi(vi.current),$o(l)){if(!ye)throw Error(a(176));if(o=l.stateNode,v=l.memoizedProps,(d=Al(o,v,l,!Qo))&&(S=oi,S!==null))switch(b=(S.mode&1)!==0,S.tag){case 3:J(S.stateNode.containerInfo,o,v,b);break;case 5:re(S.type,S.memoizedProps,S.stateNode,o,v,b)}d&&ji(l)}else l.stateNode=Pe(v,o,d,l)}return Cn(l),null;case 13:if(Ue(Zt),v=l.memoizedState,qt&&ai!==null&&l.mode&1&&!(l.flags&128)){for(o=ai;o;)o=wr(o);return io(),l.flags|=98560,l}if(v!==null&&v.dehydrated!==null){if(v=$o(l),o===null){if(!v)throw Error(a(318));if(!ye)throw Error(a(344));if(o=l.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(a(317));Wh(o,l)}else io(),!(l.flags&128)&&(l.memoizedState=null),l.flags|=4;return Cn(l),null}return Ci!==null&&(qf(Ci),Ci=null),l.flags&128?(l.lanes=d,l):(v=v!==null,d=!1,o===null?$o(l):d=o.memoizedState!==null,v&&!d&&(l.child.flags|=8192,l.mode&1&&(o===null||Zt.current&1?fn===0&&(fn=3):Zf())),l.updateQueue!==null&&(l.flags|=4),Cn(l),null);case 4:return oo(),la(o,l),o===null&&Je(l.stateNode.containerInfo),Cn(l),null;case 10:return sf(l.type._context),Cn(l),null;case 17:return Ot(l.type)&&Lt(),Cn(l),null;case 19:if(Ue(Zt),S=l.memoizedState,S===null)return Cn(l),null;if(v=(l.flags&128)!==0,b=S.rendering,b===null)if(v)ca(S,!1);else{if(fn!==0||o!==null&&o.flags&128)for(o=l.child;o!==null;){if(b=Vl(o),b!==null){for(l.flags|=128,ca(S,!1),o=b.updateQueue,o!==null&&(l.updateQueue=o,l.flags|=4),l.subtreeFlags=0,o=d,v=l.child;v!==null;)d=v,S=o,d.flags&=14680066,b=d.alternate,b===null?(d.childLanes=0,d.lanes=S,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=b.childLanes,d.lanes=b.lanes,d.child=b.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=b.memoizedProps,d.memoizedState=b.memoizedState,d.updateQueue=b.updateQueue,d.type=b.type,S=b.dependencies,d.dependencies=S===null?null:{lanes:S.lanes,firstContext:S.firstContext}),v=v.sibling;return Qe(Zt,Zt.current&1|2),l.child}o=o.sibling}S.tail!==null&&_n()>Gf&&(l.flags|=128,v=!0,ca(S,!1),l.lanes=4194304)}else{if(!v)if(o=Vl(b),o!==null){if(l.flags|=128,v=!0,o=o.updateQueue,o!==null&&(l.updateQueue=o,l.flags|=4),ca(S,!0),S.tail===null&&S.tailMode==="hidden"&&!b.alternate&&!qt)return Cn(l),null}else 2*_n()-S.renderingStartTime>Gf&&d!==1073741824&&(l.flags|=128,v=!0,ca(S,!1),l.lanes=4194304);S.isBackwards?(b.sibling=l.child,l.child=b):(o=S.last,o!==null?o.sibling=b:l.child=b,S.last=b)}return S.tail!==null?(l=S.tail,S.rendering=l,S.tail=l.sibling,S.renderingStartTime=_n(),l.sibling=null,o=Zt.current,Qe(Zt,v?o&1|2:o&1),l):(Cn(l),null);case 22:case 23:return Yf(),v=l.memoizedState!==null,o!==null&&o.memoizedState!==null!==v&&(l.flags|=8192),v&&l.mode&1?ci&1073741824&&(Cn(l),pt&&l.subtreeFlags&6&&(l.flags|=8192)):Cn(l),null;case 24:return null;case 25:return null}throw Error(a(156,l.tag))}var pS=c.ReactCurrentOwner,li=!1;function Bn(o,l,d,v){l.child=o===null?Lm(l,null,d,v):ro(l,o.child,d,v)}function sg(o,l,d,v,S){d=d.render;var b=l.ref;return eo(l,S),v=yf(o,l,d,v,b,S),d=Sf(),o!==null&&!li?(l.updateQueue=o.updateQueue,l.flags&=-2053,o.lanes&=~S,lr(o,l,S)):(qt&&d&&uf(l),l.flags|=1,Bn(o,l,v,S),l.child)}function og(o,l,d,v,S){if(o===null){var b=d.type;return typeof b=="function"&&!Jf(b)&&b.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(l.tag=15,l.type=b,ag(o,l,b,v,S)):(o=vc(d.type,null,v,l,l.mode,S),o.ref=l.ref,o.return=l,l.child=o)}if(b=o.child,!(o.lanes&S)){var k=b.memoizedProps;if(d=d.compare,d=d!==null?d:Ll,d(k,v)&&o.ref===l.ref)return lr(o,l,S)}return l.flags|=1,o=Lr(b,v),o.ref=l.ref,o.return=l,l.child=o}function ag(o,l,d,v,S){if(o!==null&&Ll(o.memoizedProps,v)&&o.ref===l.ref)if(li=!1,(o.lanes&S)!==0)o.flags&131072&&(li=!0);else return l.lanes=o.lanes,lr(o,l,S);return Af(o,l,d,v,S)}function lg(o,l,d){var v=l.pendingProps,S=v.children,b=o!==null?o.memoizedState:null;if(v.mode==="hidden")if(!(l.mode&1))l.memoizedState={baseLanes:0,cachePool:null},Qe(lo,ci),ci|=d;else if(d&1073741824)l.memoizedState={baseLanes:0,cachePool:null},v=b!==null?b.baseLanes:d,Qe(lo,ci),ci|=v;else return o=b!==null?b.baseLanes|d:d,l.lanes=l.childLanes=1073741824,l.memoizedState={baseLanes:o,cachePool:null},l.updateQueue=null,Qe(lo,ci),ci|=o,null;else b!==null?(v=b.baseLanes|d,l.memoizedState=null):v=d,Qe(lo,ci),ci|=v;return Bn(o,l,S,d),l.child}function cg(o,l){var d=l.ref;(o===null&&d!==null||o!==null&&o.ref!==d)&&(l.flags|=512,l.flags|=2097152)}function Af(o,l,d,v,S){var b=Ot(d)?wt:Ct.current;return b=$e(l,b),eo(l,S),d=yf(o,l,d,v,b,S),v=Sf(),o!==null&&!li?(l.updateQueue=o.updateQueue,l.flags&=-2053,o.lanes&=~S,lr(o,l,S)):(qt&&v&&uf(l),l.flags|=1,Bn(o,l,d,S),l.child)}function ug(o,l,d,v,S){if(Ot(d)){var b=!0;vn(l)}else b=!1;if(eo(l,S),l.stateNode===null)o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),Em(l,d,v),cf(l,d,v,S),v=!0;else if(o===null){var k=l.stateNode,j=l.memoizedProps;k.props=j;var ce=k.context,Re=d.contextType;typeof Re=="object"&&Re!==null?Re=pi(Re):(Re=Ot(d)?wt:Ct.current,Re=$e(l,Re));var Ye=d.getDerivedStateFromProps,gt=typeof Ye=="function"||typeof k.getSnapshotBeforeUpdate=="function";gt||typeof k.UNSAFE_componentWillReceiveProps!="function"&&typeof k.componentWillReceiveProps!="function"||(j!==v||ce!==Re)&&Tm(l,k,v,Re),br=!1;var ut=l.memoizedState;k.state=ut,Fl(l,v,k,S),ce=l.memoizedState,j!==v||ut!==ce||Rt.current||br?(typeof Ye=="function"&&(lf(l,d,Ye,v),ce=l.memoizedState),(j=br||wm(l,d,j,v,ut,ce,Re))?(gt||typeof k.UNSAFE_componentWillMount!="function"&&typeof k.componentWillMount!="function"||(typeof k.componentWillMount=="function"&&k.componentWillMount(),typeof k.UNSAFE_componentWillMount=="function"&&k.UNSAFE_componentWillMount()),typeof k.componentDidMount=="function"&&(l.flags|=4194308)):(typeof k.componentDidMount=="function"&&(l.flags|=4194308),l.memoizedProps=v,l.memoizedState=ce),k.props=v,k.state=ce,k.context=Re,v=j):(typeof k.componentDidMount=="function"&&(l.flags|=4194308),v=!1)}else{k=l.stateNode,xm(o,l),j=l.memoizedProps,Re=l.type===l.elementType?j:Ai(l.type,j),k.props=Re,gt=l.pendingProps,ut=k.context,ce=d.contextType,typeof ce=="object"&&ce!==null?ce=pi(ce):(ce=Ot(d)?wt:Ct.current,ce=$e(l,ce));var Wt=d.getDerivedStateFromProps;(Ye=typeof Wt=="function"||typeof k.getSnapshotBeforeUpdate=="function")||typeof k.UNSAFE_componentWillReceiveProps!="function"&&typeof k.componentWillReceiveProps!="function"||(j!==gt||ut!==ce)&&Tm(l,k,v,ce),br=!1,ut=l.memoizedState,k.state=ut,Fl(l,v,k,S);var nt=l.memoizedState;j!==gt||ut!==nt||Rt.current||br?(typeof Wt=="function"&&(lf(l,d,Wt,v),nt=l.memoizedState),(Re=br||wm(l,d,Re,v,ut,nt,ce)||!1)?(Ye||typeof k.UNSAFE_componentWillUpdate!="function"&&typeof k.componentWillUpdate!="function"||(typeof k.componentWillUpdate=="function"&&k.componentWillUpdate(v,nt,ce),typeof k.UNSAFE_componentWillUpdate=="function"&&k.UNSAFE_componentWillUpdate(v,nt,ce)),typeof k.componentDidUpdate=="function"&&(l.flags|=4),typeof k.getSnapshotBeforeUpdate=="function"&&(l.flags|=1024)):(typeof k.componentDidUpdate!="function"||j===o.memoizedProps&&ut===o.memoizedState||(l.flags|=4),typeof k.getSnapshotBeforeUpdate!="function"||j===o.memoizedProps&&ut===o.memoizedState||(l.flags|=1024),l.memoizedProps=v,l.memoizedState=nt),k.props=v,k.state=nt,k.context=ce,v=Re):(typeof k.componentDidUpdate!="function"||j===o.memoizedProps&&ut===o.memoizedState||(l.flags|=4),typeof k.getSnapshotBeforeUpdate!="function"||j===o.memoizedProps&&ut===o.memoizedState||(l.flags|=1024),v=!1)}return Cf(o,l,d,v,b,S)}function Cf(o,l,d,v,S,b){cg(o,l);var k=(l.flags&128)!==0;if(!v&&!k)return S&&Er(l,d,!1),lr(o,l,b);v=l.stateNode,pS.current=l;var j=k&&typeof d.getDerivedStateFromError!="function"?null:v.render();return l.flags|=1,o!==null&&k?(l.child=ro(l,o.child,null,b),l.child=ro(l,null,j,b)):Bn(o,l,j,b),l.memoizedState=v.state,S&&Er(l,d,!0),l.child}function hg(o){var l=o.stateNode;l.pendingContext?jn(o,l.pendingContext,l.pendingContext!==l.context):l.context&&jn(o,l.context,!1),mf(o,l.containerInfo)}function fg(o,l,d,v,S){return io(),pf(S),l.flags|=256,Bn(o,l,d,v),l.child}var Kl={dehydrated:null,treeContext:null,retryLane:0};function Ql(o){return{baseLanes:o,cachePool:null}}function dg(o,l,d){var v=l.pendingProps,S=Zt.current,b=!1,k=(l.flags&128)!==0,j;if((j=k)||(j=o!==null&&o.memoizedState===null?!1:(S&2)!==0),j?(b=!0,l.flags&=-129):(o===null||o.memoizedState!==null)&&(S|=1),Qe(Zt,S&1),o===null)return df(l),o=l.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(l.mode&1?rs(o)?l.lanes=8:l.lanes=1073741824:l.lanes=1,null):(S=v.children,o=v.fallback,b?(v=l.mode,b=l.child,S={mode:"hidden",children:S},!(v&1)&&b!==null?(b.childLanes=0,b.pendingProps=S):b=_c(S,v,0,null),o=ds(o,v,d,null),b.return=l,o.return=l,b.sibling=o,l.child=b,l.child.memoizedState=Ql(d),l.memoizedState=Kl,o):Rf(l,S));if(S=o.memoizedState,S!==null){if(j=S.dehydrated,j!==null){if(k)return l.flags&256?(l.flags&=-257,$l(o,l,d,Error(a(422)))):l.memoizedState!==null?(l.child=o.child,l.flags|=128,null):(b=v.fallback,S=l.mode,v=_c({mode:"visible",children:v.children},S,0,null),b=ds(b,S,d,null),b.flags|=2,v.return=l,b.return=l,v.sibling=b,l.child=v,l.mode&1&&ro(l,o.child,null,d),l.child.memoizedState=Ql(d),l.memoizedState=Kl,b);if(!(l.mode&1))l=$l(o,l,d,null);else if(rs(j))l=$l(o,l,d,Error(a(419)));else if(v=(d&o.childLanes)!==0,li||v){if(v=ln,v!==null){switch(d&-d){case 4:b=2;break;case 16:b=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:b=32;break;case 536870912:b=268435456;break;default:b=0}v=b&(v.suspendedLanes|d)?0:b,v!==0&&v!==S.retryLane&&(S.retryLane=v,xi(o,v,-1))}Zf(),l=$l(o,l,d,Error(a(421)))}else zi(j)?(l.flags|=128,l.child=o.child,l=AS.bind(null,o),El(j,l),l=null):(d=S.treeContext,ye&&(ai=Qs(j),oi=l,qt=!0,Ci=null,Qo=!1,d!==null&&(mi[gi++]=sr,mi[gi++]=or,mi[gi++]=ss,sr=d.id,or=d.overflow,ss=l)),l=Rf(l,l.pendingProps.children),l.flags|=4096);return l}return b?(v=mg(o,l,v.children,v.fallback,d),b=l.child,S=o.child.memoizedState,b.memoizedState=S===null?Ql(d):{baseLanes:S.baseLanes|d,cachePool:null},b.childLanes=o.childLanes&~d,l.memoizedState=Kl,v):(d=pg(o,l,v.children,d),l.memoizedState=null,d)}return b?(v=mg(o,l,v.children,v.fallback,d),b=l.child,S=o.child.memoizedState,b.memoizedState=S===null?Ql(d):{baseLanes:S.baseLanes|d,cachePool:null},b.childLanes=o.childLanes&~d,l.memoizedState=Kl,v):(d=pg(o,l,v.children,d),l.memoizedState=null,d)}function Rf(o,l){return l=_c({mode:"visible",children:l},o.mode,0,null),l.return=o,o.child=l}function pg(o,l,d,v){var S=o.child;return o=S.sibling,d=Lr(S,{mode:"visible",children:d}),!(l.mode&1)&&(d.lanes=v),d.return=l,d.sibling=null,o!==null&&(v=l.deletions,v===null?(l.deletions=[o],l.flags|=16):v.push(o)),l.child=d}function mg(o,l,d,v,S){var b=l.mode;o=o.child;var k=o.sibling,j={mode:"hidden",children:d};return!(b&1)&&l.child!==o?(d=l.child,d.childLanes=0,d.pendingProps=j,l.deletions=null):(d=Lr(o,j),d.subtreeFlags=o.subtreeFlags&14680064),k!==null?v=Lr(k,v):(v=ds(v,b,S,null),v.flags|=2),v.return=l,d.return=l,d.sibling=v,l.child=d,v}function $l(o,l,d,v){return v!==null&&pf(v),ro(l,o.child,null,d),o=Rf(l,l.pendingProps.children),o.flags|=2,l.memoizedState=null,o}function gg(o,l,d){o.lanes|=l;var v=o.alternate;v!==null&&(v.lanes|=l),of(o.return,l,d)}function Pf(o,l,d,v,S){var b=o.memoizedState;b===null?o.memoizedState={isBackwards:l,rendering:null,renderingStartTime:0,last:v,tail:d,tailMode:S}:(b.isBackwards=l,b.rendering=null,b.renderingStartTime=0,b.last=v,b.tail=d,b.tailMode=S)}function vg(o,l,d){var v=l.pendingProps,S=v.revealOrder,b=v.tail;if(Bn(o,l,v.children,d),v=Zt.current,v&2)v=v&1|2,l.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=l.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&gg(o,d,l);else if(o.tag===19)gg(o,d,l);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===l)break e;for(;o.sibling===null;){if(o.return===null||o.return===l)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}v&=1}if(Qe(Zt,v),!(l.mode&1))l.memoizedState=null;else switch(S){case"forwards":for(d=l.child,S=null;d!==null;)o=d.alternate,o!==null&&Vl(o)===null&&(S=d),d=d.sibling;d=S,d===null?(S=l.child,l.child=null):(S=d.sibling,d.sibling=null),Pf(l,!1,S,d,b);break;case"backwards":for(d=null,S=l.child,l.child=null;S!==null;){if(o=S.alternate,o!==null&&Vl(o)===null){l.child=S;break}o=S.sibling,S.sibling=d,d=S,S=o}Pf(l,!0,d,null,b);break;case"together":Pf(l,!1,null,null,void 0);break;default:l.memoizedState=null}return l.child}function lr(o,l,d){if(o!==null&&(l.dependencies=o.dependencies),co|=l.lanes,!(d&l.childLanes))return null;if(o!==null&&l.child!==o.child)throw Error(a(153));if(l.child!==null){for(o=l.child,d=Lr(o,o.pendingProps),l.child=d,d.return=l;o.sibling!==null;)o=o.sibling,d=d.sibling=Lr(o,o.pendingProps),d.return=l;d.sibling=null}return l.child}function mS(o,l,d){switch(l.tag){case 3:hg(l),io();break;case 5:Dm(l);break;case 1:Ot(l.type)&&vn(l);break;case 4:mf(l,l.stateNode.containerInfo);break;case 10:_m(l,l.type._context,l.memoizedProps.value);break;case 13:var v=l.memoizedState;if(v!==null)return v.dehydrated!==null?(Qe(Zt,Zt.current&1),l.flags|=128,null):d&l.child.childLanes?dg(o,l,d):(Qe(Zt,Zt.current&1),o=lr(o,l,d),o!==null?o.sibling:null);Qe(Zt,Zt.current&1);break;case 19:if(v=(d&l.childLanes)!==0,o.flags&128){if(v)return vg(o,l,d);l.flags|=128}var S=l.memoizedState;if(S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),Qe(Zt,Zt.current),v)break;return null;case 22:case 23:return l.lanes=0,lg(o,l,d)}return lr(o,l,d)}function gS(o,l){switch(hf(l),l.tag){case 1:return Ot(l.type)&&Lt(),o=l.flags,o&65536?(l.flags=o&-65537|128,l):null;case 3:return oo(),Ue(Rt),Ue(Ct),_f(),o=l.flags,o&65536&&!(o&128)?(l.flags=o&-65537|128,l):null;case 5:return gf(l),null;case 13:if(Ue(Zt),o=l.memoizedState,o!==null&&o.dehydrated!==null){if(l.alternate===null)throw Error(a(340));io()}return o=l.flags,o&65536?(l.flags=o&-65537|128,l):null;case 19:return Ue(Zt),null;case 4:return oo(),null;case 10:return sf(l.type._context),null;case 22:case 23:return Yf(),null;case 24:return null;default:return null}}var ec=!1,ls=!1,vS=typeof WeakSet=="function"?WeakSet:Set,ze=null;function tc(o,l){var d=o.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(v){Kn(o,l,v)}else d.current=null}function If(o,l,d){try{d()}catch(v){Kn(o,l,v)}}var _g=!1;function _S(o,l){for(Y(o.containerInfo),ze=l;ze!==null;)if(o=ze,l=o.child,(o.subtreeFlags&1028)!==0&&l!==null)l.return=o,ze=l;else for(;ze!==null;){o=ze;try{var d=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(d!==null){var v=d.memoizedProps,S=d.memoizedState,b=o.stateNode,k=b.getSnapshotBeforeUpdate(o.elementType===o.type?v:Ai(o.type,v),S);b.__reactInternalSnapshotBeforeUpdate=k}break;case 3:pt&&me(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(a(163))}}catch(j){Kn(o,o.return,j)}if(l=o.sibling,l!==null){l.return=o.return,ze=l;break}ze=o.return}return d=_g,_g=!1,d}function cs(o,l,d){var v=l.updateQueue;if(v=v!==null?v.lastEffect:null,v!==null){var S=v=v.next;do{if((S.tag&o)===o){var b=S.destroy;S.destroy=void 0,b!==void 0&&If(l,d,b)}S=S.next}while(S!==v)}}function ua(o,l){if(l=l.updateQueue,l=l!==null?l.lastEffect:null,l!==null){var d=l=l.next;do{if((d.tag&o)===o){var v=d.create;d.destroy=v()}d=d.next}while(d!==l)}}function Lf(o){var l=o.ref;if(l!==null){var d=o.stateNode;switch(o.tag){case 5:o=ee(d);break;default:o=d}typeof l=="function"?l(o):l.current=o}}function xg(o,l,d){if(ki&&typeof ki.onCommitFiberUnmount=="function")try{ki.onCommitFiberUnmount(Pl,l)}catch{}switch(l.tag){case 0:case 11:case 14:case 15:if(o=l.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var v=o=o.next;do{var S=v,b=S.destroy;S=S.tag,b!==void 0&&(S&2||S&4)&&If(l,d,b),v=v.next}while(v!==o)}break;case 1:if(tc(l,d),o=l.stateNode,typeof o.componentWillUnmount=="function")try{o.props=l.memoizedProps,o.state=l.memoizedState,o.componentWillUnmount()}catch(k){Kn(l,d,k)}break;case 5:tc(l,d);break;case 4:pt?Tg(o,l,d):ve&&ve&&(l=l.stateNode.containerInfo,d=Ne(l),jt(l,d))}}function yg(o,l,d){for(var v=l;;)if(xg(o,v,d),v.child===null||pt&&v.tag===4){if(v===l)break;for(;v.sibling===null;){if(v.return===null||v.return===l)return;v=v.return}v.sibling.return=v.return,v=v.sibling}else v.child.return=v,v=v.child}function Sg(o){var l=o.alternate;l!==null&&(o.alternate=null,Sg(l)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(l=o.stateNode,l!==null&&He(l)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function Mg(o){return o.tag===5||o.tag===3||o.tag===4}function wg(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||Mg(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Eg(o){if(pt){e:{for(var l=o.return;l!==null;){if(Mg(l))break e;l=l.return}throw Error(a(160))}var d=l;switch(d.tag){case 5:l=d.stateNode,d.flags&32&&(de(l),d.flags&=-33),d=wg(o),Uf(o,d,l);break;case 3:case 4:l=d.stateNode.containerInfo,d=wg(o),Df(o,d,l);break;default:throw Error(a(161))}}}function Df(o,l,d){var v=o.tag;if(v===5||v===6)o=o.stateNode,l?dt(d,o,l):Ge(d,o);else if(v!==4&&(o=o.child,o!==null))for(Df(o,l,d),o=o.sibling;o!==null;)Df(o,l,d),o=o.sibling}function Uf(o,l,d){var v=o.tag;if(v===5||v===6)o=o.stateNode,l?ot(d,o,l):Le(d,o);else if(v!==4&&(o=o.child,o!==null))for(Uf(o,l,d),o=o.sibling;o!==null;)Uf(o,l,d),o=o.sibling}function Tg(o,l,d){for(var v=l,S=!1,b,k;;){if(!S){S=v.return;e:for(;;){if(S===null)throw Error(a(160));switch(b=S.stateNode,S.tag){case 5:k=!1;break e;case 3:b=b.containerInfo,k=!0;break e;case 4:b=b.containerInfo,k=!0;break e}S=S.return}S=!0}if(v.tag===5||v.tag===6)yg(o,v,d),k?H(b,v.stateNode):We(b,v.stateNode);else if(v.tag===18)k?Yh(b,v.stateNode):qh(b,v.stateNode);else if(v.tag===4){if(v.child!==null){b=v.stateNode.containerInfo,k=!0,v.child.return=v,v=v.child;continue}}else if(xg(o,v,d),v.child!==null){v.child.return=v,v=v.child;continue}if(v===l)break;for(;v.sibling===null;){if(v.return===null||v.return===l)return;v=v.return,v.tag===4&&(S=!1)}v.sibling.return=v.return,v=v.sibling}}function Nf(o,l){if(pt){switch(l.tag){case 0:case 11:case 14:case 15:cs(3,l,l.return),ua(3,l),cs(5,l,l.return);return;case 1:return;case 5:var d=l.stateNode;if(d!=null){var v=l.memoizedProps;o=o!==null?o.memoizedProps:v;var S=l.type,b=l.updateQueue;l.updateQueue=null,b!==null&&Xe(d,b,S,o,v,l)}return;case 6:if(l.stateNode===null)throw Error(a(162));d=l.memoizedProps,Mt(l.stateNode,o!==null?o.memoizedProps:d,d);return;case 3:ye&&o!==null&&o.memoizedState.isDehydrated&&Cl(l.stateNode.containerInfo);return;case 12:return;case 13:nc(l);return;case 19:nc(l);return;case 17:return}throw Error(a(163))}switch(l.tag){case 0:case 11:case 14:case 15:cs(3,l,l.return),ua(3,l),cs(5,l,l.return);return;case 12:return;case 13:nc(l);return;case 19:nc(l);return;case 3:ye&&o!==null&&o.memoizedState.isDehydrated&&Cl(l.stateNode.containerInfo);break;case 22:case 23:return}e:if(ve){switch(l.tag){case 1:case 5:case 6:break e;case 3:case 4:l=l.stateNode,jt(l.containerInfo,l.pendingChildren);break e}throw Error(a(163))}}function nc(o){var l=o.updateQueue;if(l!==null){o.updateQueue=null;var d=o.stateNode;d===null&&(d=o.stateNode=new vS),l.forEach(function(v){var S=CS.bind(null,o,v);d.has(v)||(d.add(v),v.then(S,S))})}}function xS(o,l){for(ze=l;ze!==null;){l=ze;var d=l.deletions;if(d!==null)for(var v=0;v<d.length;v++){var S=d[v];try{var b=o;pt?Tg(b,S,l):yg(b,S,l);var k=S.alternate;k!==null&&(k.return=null),S.return=null}catch(et){Kn(S,l,et)}}if(d=l.child,l.subtreeFlags&12854&&d!==null)d.return=l,ze=d;else for(;ze!==null;){l=ze;try{var j=l.flags;if(j&32&&pt&&de(l.stateNode),j&512){var ce=l.alternate;if(ce!==null){var Re=ce.ref;Re!==null&&(typeof Re=="function"?Re(null):Re.current=null)}}if(j&8192)switch(l.tag){case 13:if(l.memoizedState!==null){var Ye=l.alternate;(Ye===null||Ye.memoizedState===null)&&(Hf=_n())}break;case 22:var gt=l.memoizedState!==null,ut=l.alternate,Wt=ut!==null&&ut.memoizedState!==null;if(d=l,pt){e:if(v=d,S=gt,b=null,pt)for(var nt=v;;){if(nt.tag===5){if(b===null){b=nt;var Rn=nt.stateNode;S?Be(Rn):Ae(nt.stateNode,nt.memoizedProps)}}else if(nt.tag===6){if(b===null){var Si=nt.stateNode;S?V(Si):ae(Si,nt.memoizedProps)}}else if((nt.tag!==22&&nt.tag!==23||nt.memoizedState===null||nt===v)&&nt.child!==null){nt.child.return=nt,nt=nt.child;continue}if(nt===v)break;for(;nt.sibling===null;){if(nt.return===null||nt.return===v)break e;b===nt&&(b=null),nt=nt.return}b===nt&&(b=null),nt.sibling.return=nt.return,nt=nt.sibling}}if(gt&&!Wt&&d.mode&1){ze=d;for(var ie=d.child;ie!==null;){for(d=ze=ie;ze!==null;){v=ze;var Q=v.child;switch(v.tag){case 0:case 11:case 14:case 15:cs(4,v,v.return);break;case 1:tc(v,v.return);var le=v.stateNode;if(typeof le.componentWillUnmount=="function"){var Ve=v.return;try{le.props=v.memoizedProps,le.state=v.memoizedState,le.componentWillUnmount()}catch(et){Kn(v,Ve,et)}}break;case 5:tc(v,v.return);break;case 22:if(v.memoizedState!==null){Cg(d);continue}}Q!==null?(Q.return=v,ze=Q):Cg(d)}ie=ie.sibling}}}switch(j&4102){case 2:Eg(l),l.flags&=-3;break;case 6:Eg(l),l.flags&=-3,Nf(l.alternate,l);break;case 4096:l.flags&=-4097;break;case 4100:l.flags&=-4097,Nf(l.alternate,l);break;case 4:Nf(l.alternate,l)}}catch(et){Kn(l,l.return,et)}if(d=l.sibling,d!==null){d.return=l.return,ze=d;break}ze=l.return}}}function yS(o,l,d){ze=o,bg(o)}function bg(o,l,d){for(var v=(o.mode&1)!==0;ze!==null;){var S=ze,b=S.child;if(S.tag===22&&v){var k=S.memoizedState!==null||ec;if(!k){var j=S.alternate,ce=j!==null&&j.memoizedState!==null||ls;j=ec;var Re=ls;if(ec=k,(ls=ce)&&!Re)for(ze=S;ze!==null;)k=ze,ce=k.child,k.tag===22&&k.memoizedState!==null?Rg(S):ce!==null?(ce.return=k,ze=ce):Rg(S);for(;b!==null;)ze=b,bg(b),b=b.sibling;ze=S,ec=j,ls=Re}Ag(o)}else S.subtreeFlags&8772&&b!==null?(b.return=S,ze=b):Ag(o)}}function Ag(o){for(;ze!==null;){var l=ze;if(l.flags&8772){var d=l.alternate;try{if(l.flags&8772)switch(l.tag){case 0:case 11:case 15:ls||ua(5,l);break;case 1:var v=l.stateNode;if(l.flags&4&&!ls)if(d===null)v.componentDidMount();else{var S=l.elementType===l.type?d.memoizedProps:Ai(l.type,d.memoizedProps);v.componentDidUpdate(S,d.memoizedState,v.__reactInternalSnapshotBeforeUpdate)}var b=l.updateQueue;b!==null&&Sm(l,b,v);break;case 3:var k=l.updateQueue;if(k!==null){if(d=null,l.child!==null)switch(l.child.tag){case 5:d=ee(l.child.stateNode);break;case 1:d=l.child.stateNode}Sm(l,k,d)}break;case 5:var j=l.stateNode;d===null&&l.flags&4&&be(j,l.type,l.memoizedProps,l);break;case 6:break;case 4:break;case 12:break;case 13:if(ye&&l.memoizedState===null){var ce=l.alternate;if(ce!==null){var Re=ce.memoizedState;if(Re!==null){var Ye=Re.dehydrated;Ye!==null&&jh(Ye)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(a(163))}ls||l.flags&512&&Lf(l)}catch(gt){Kn(l,l.return,gt)}}if(l===o){ze=null;break}if(d=l.sibling,d!==null){d.return=l.return,ze=d;break}ze=l.return}}function Cg(o){for(;ze!==null;){var l=ze;if(l===o){ze=null;break}var d=l.sibling;if(d!==null){d.return=l.return,ze=d;break}ze=l.return}}function Rg(o){for(;ze!==null;){var l=ze;try{switch(l.tag){case 0:case 11:case 15:var d=l.return;try{ua(4,l)}catch(ce){Kn(l,d,ce)}break;case 1:var v=l.stateNode;if(typeof v.componentDidMount=="function"){var S=l.return;try{v.componentDidMount()}catch(ce){Kn(l,S,ce)}}var b=l.return;try{Lf(l)}catch(ce){Kn(l,b,ce)}break;case 5:var k=l.return;try{Lf(l)}catch(ce){Kn(l,k,ce)}}}catch(ce){Kn(l,l.return,ce)}if(l===o){ze=null;break}var j=l.sibling;if(j!==null){j.return=l.return,ze=j;break}ze=l.return}}var ic=0,rc=1,sc=2,oc=3,ac=4;if(typeof Symbol=="function"&&Symbol.for){var ha=Symbol.for;ic=ha("selector.component"),rc=ha("selector.has_pseudo_class"),sc=ha("selector.role"),oc=ha("selector.test_id"),ac=ha("selector.text")}function Ff(o){var l=z(o);if(l!=null){if(typeof l.memoizedProps["data-testname"]!="string")throw Error(a(364));return l}if(o=B(o),o===null)throw Error(a(362));return o.stateNode.current}function Of(o,l){switch(l.$$typeof){case ic:if(o.type===l.value)return!0;break;case rc:e:{l=l.value,o=[o,0];for(var d=0;d<o.length;){var v=o[d++],S=o[d++],b=l[S];if(v.tag!==5||!he(v)){for(;b!=null&&Of(v,b);)S++,b=l[S];if(S===l.length){l=!0;break e}else for(v=v.child;v!==null;)o.push(v,S),v=v.sibling}}l=!1}return l;case sc:if(o.tag===5&&xe(o.stateNode,l.value))return!0;break;case ac:if((o.tag===5||o.tag===6)&&(o=te(o),o!==null&&0<=o.indexOf(l.value)))return!0;break;case oc:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===l.value.toLowerCase()))return!0;break;default:throw Error(a(365))}return!1}function Bf(o){switch(o.$$typeof){case ic:return"<"+(U(o.value)||"Unknown")+">";case rc:return":has("+(Bf(o)||"")+")";case sc:return'[role="'+o.value+'"]';case ac:return'"'+o.value+'"';case oc:return'[data-testname="'+o.value+'"]';default:throw Error(a(365))}}function Pg(o,l){var d=[];o=[o,0];for(var v=0;v<o.length;){var S=o[v++],b=o[v++],k=l[b];if(S.tag!==5||!he(S)){for(;k!=null&&Of(S,k);)b++,k=l[b];if(b===l.length)d.push(S);else for(S=S.child;S!==null;)o.push(S,b),S=S.sibling}}return d}function zf(o,l){if(!De)throw Error(a(363));o=Ff(o),o=Pg(o,l),l=[],o=Array.from(o);for(var d=0;d<o.length;){var v=o[d++];if(v.tag===5)he(v)||l.push(v.stateNode);else for(v=v.child;v!==null;)o.push(v),v=v.sibling}return l}var SS=Math.ceil,lc=c.ReactCurrentDispatcher,kf=c.ReactCurrentOwner,nn=c.ReactCurrentBatchConfig,bt=0,ln=null,cn=null,wn=0,ci=0,lo=at(0),fn=0,fa=null,co=0,cc=0,Vf=0,da=null,Zn=null,Hf=0,Gf=1/0;function uo(){Gf=_n()+500}var uc=!1,Wf=null,Cr=null,hc=!1,Rr=null,fc=0,pa=0,Xf=null,dc=-1,pc=0;function zn(){return bt&6?_n():dc!==-1?dc:dc=_n()}function Pr(o){return o.mode&1?bt&2&&wn!==0?wn&-wn:iS.transition!==null?(pc===0&&(o=hn,hn<<=1,!(hn&4194240)&&(hn=64),pc=o),pc):(o=Bt,o!==0?o:we()):1}function xi(o,l,d){if(50<pa)throw pa=0,Xf=null,Error(a(185));var v=mc(o,l);return v===null?null:(Ko(v,l,d),(!(bt&2)||v!==ln)&&(v===ln&&(!(bt&2)&&(cc|=l),fn===4&&Ir(v,wn)),Jn(v,d),l===1&&bt===0&&!(o.mode&1)&&(uo(),Il&&Hi())),v)}function mc(o,l){o.lanes|=l;var d=o.alternate;for(d!==null&&(d.lanes|=l),d=o,o=o.return;o!==null;)o.childLanes|=l,d=o.alternate,d!==null&&(d.childLanes|=l),d=o,o=o.return;return d.tag===3?d.stateNode:null}function Jn(o,l){var d=o.callbackNode;Yy(o,l);var v=Rl(o,o===ln?wn:0);if(v===0)d!==null&&gm(d),o.callbackNode=null,o.callbackPriority=0;else if(l=v&-v,o.callbackPriority!==l){if(d!=null&&gm(d),l===1)o.tag===0?nS(Lg.bind(null,o)):vm(Lg.bind(null,o)),Ce?st(function(){bt===0&&Hi()}):Qh($h,Hi),d=null;else{switch(mm(v)){case 1:d=$h;break;case 4:d=Qy;break;case 16:d=ef;break;case 536870912:d=$y;break;default:d=ef}d=Vg(d,Ig.bind(null,o))}o.callbackPriority=l,o.callbackNode=d}}function Ig(o,l){if(dc=-1,pc=0,bt&6)throw Error(a(327));var d=o.callbackNode;if(fs()&&o.callbackNode!==d)return null;var v=Rl(o,o===ln?wn:0);if(v===0)return null;if(v&30||v&o.expiredLanes||l)l=gc(o,v);else{l=v;var S=bt;bt|=2;var b=Ng();(ln!==o||wn!==l)&&(uo(),us(o,l));do try{ES();break}catch(j){Ug(o,j)}while(!0);rf(),lc.current=b,bt=S,cn!==null?l=0:(ln=null,wn=0,l=fn)}if(l!==0){if(l===2&&(S=Zh(o),S!==0&&(v=S,l=jf(o,S))),l===1)throw d=fa,us(o,0),Ir(o,v),Jn(o,_n()),d;if(l===6)Ir(o,v);else{if(S=o.current.alternate,!(v&30)&&!MS(S)&&(l=gc(o,v),l===2&&(b=Zh(o),b!==0&&(v=b,l=jf(o,b))),l===1))throw d=fa,us(o,0),Ir(o,v),Jn(o,_n()),d;switch(o.finishedWork=S,o.finishedLanes=v,l){case 0:case 1:throw Error(a(345));case 2:hs(o,Zn);break;case 3:if(Ir(o,v),(v&130023424)===v&&(l=Hf+500-_n(),10<l)){if(Rl(o,0)!==0)break;if(S=o.suspendedLanes,(S&v)!==v){zn(),o.pingedLanes|=o.suspendedLanes&S;break}o.timeoutHandle=Me(hs.bind(null,o,Zn),l);break}hs(o,Zn);break;case 4:if(Ir(o,v),(v&4194240)===v)break;for(l=o.eventTimes,S=-1;0<v;){var k=31-It(v);b=1<<k,k=l[k],k>S&&(S=k),v&=~b}if(v=S,v=_n()-v,v=(120>v?120:480>v?480:1080>v?1080:1920>v?1920:3e3>v?3e3:4320>v?4320:1960*SS(v/1960))-v,10<v){o.timeoutHandle=Me(hs.bind(null,o,Zn),v);break}hs(o,Zn);break;case 5:hs(o,Zn);break;default:throw Error(a(329))}}}return Jn(o,_n()),o.callbackNode===d?Ig.bind(null,o):null}function jf(o,l){var d=da;return o.current.memoizedState.isDehydrated&&(us(o,l).flags|=256),o=gc(o,l),o!==2&&(l=Zn,Zn=d,l!==null&&qf(l)),o}function qf(o){Zn===null?Zn=o:Zn.push.apply(Zn,o)}function MS(o){for(var l=o;;){if(l.flags&16384){var d=l.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var v=0;v<d.length;v++){var S=d[v],b=S.getSnapshot;S=S.value;try{if(!Vi(b(),S))return!1}catch{return!1}}}if(d=l.child,l.subtreeFlags&16384&&d!==null)d.return=l,l=d;else{if(l===o)break;for(;l.sibling===null;){if(l.return===null||l.return===o)return!0;l=l.return}l.sibling.return=l.return,l=l.sibling}}return!0}function Ir(o,l){for(l&=~Vf,l&=~cc,o.suspendedLanes|=l,o.pingedLanes&=~l,o=o.expirationTimes;0<l;){var d=31-It(l),v=1<<d;o[d]=-1,l&=~v}}function Lg(o){if(bt&6)throw Error(a(327));fs();var l=Rl(o,0);if(!(l&1))return Jn(o,_n()),null;var d=gc(o,l);if(o.tag!==0&&d===2){var v=Zh(o);v!==0&&(l=v,d=jf(o,v))}if(d===1)throw d=fa,us(o,0),Ir(o,l),Jn(o,_n()),d;if(d===6)throw Error(a(345));return o.finishedWork=o.current.alternate,o.finishedLanes=l,hs(o,Zn),Jn(o,_n()),null}function Dg(o){Rr!==null&&Rr.tag===0&&!(bt&6)&&fs();var l=bt;bt|=1;var d=nn.transition,v=Bt;try{if(nn.transition=null,Bt=1,o)return o()}finally{Bt=v,nn.transition=d,bt=l,!(bt&6)&&Hi()}}function Yf(){ci=lo.current,Ue(lo)}function us(o,l){o.finishedWork=null,o.finishedLanes=0;var d=o.timeoutHandle;if(d!==lt&&(o.timeoutHandle=lt,tt(d)),cn!==null)for(d=cn.return;d!==null;){var v=d;switch(hf(v),v.tag){case 1:v=v.type.childContextTypes,v!=null&&Lt();break;case 3:oo(),Ue(Rt),Ue(Ct),_f();break;case 5:gf(v);break;case 4:oo();break;case 13:Ue(Zt);break;case 19:Ue(Zt);break;case 10:sf(v.type._context);break;case 22:case 23:Yf()}d=d.return}if(ln=o,cn=o=Lr(o.current,null),wn=ci=l,fn=0,fa=null,Vf=cc=co=0,Zn=da=null,Gi!==null){for(l=0;l<Gi.length;l++)if(d=Gi[l],v=d.interleaved,v!==null){d.interleaved=null;var S=v.next,b=d.pending;if(b!==null){var k=b.next;b.next=S,v.next=k}d.pending=v}Gi=null}return o}function Ug(o,l){do{var d=cn;try{if(rf(),Hl.current=Yl,Gl){for(var v=Qt.memoizedState;v!==null;){var S=v.queue;S!==null&&(S.pending=null),v=v.next}Gl=!1}if(ao=0,xn=bn=Qt=null,ia=!1,ra=0,kf.current=null,d===null||d.return===null){fn=1,fa=l,cn=null;break}e:{var b=o,k=d.return,j=d,ce=l;if(l=wn,j.flags|=32768,ce!==null&&typeof ce=="object"&&typeof ce.then=="function"){var Re=ce,Ye=j,gt=Ye.tag;if(!(Ye.mode&1)&&(gt===0||gt===11||gt===15)){var ut=Ye.alternate;ut?(Ye.updateQueue=ut.updateQueue,Ye.memoizedState=ut.memoizedState,Ye.lanes=ut.lanes):(Ye.updateQueue=null,Ye.memoizedState=null)}var Wt=tg(k);if(Wt!==null){Wt.flags&=-257,ng(Wt,k,j,b,l),Wt.mode&1&&eg(b,Re,l),l=Wt,ce=Re;var nt=l.updateQueue;if(nt===null){var Rn=new Set;Rn.add(ce),l.updateQueue=Rn}else nt.add(ce);break e}else{if(!(l&1)){eg(b,Re,l),Zf();break e}ce=Error(a(426))}}else if(qt&&j.mode&1){var Si=tg(k);if(Si!==null){!(Si.flags&65536)&&(Si.flags|=256),ng(Si,k,j,b,l),pf(ce);break e}}b=ce,fn!==4&&(fn=2),da===null?da=[b]:da.push(b),ce=Tf(ce,j),j=k;do{switch(j.tag){case 3:j.flags|=65536,l&=-l,j.lanes|=l;var ie=Qm(j,ce,l);ym(j,ie);break e;case 1:b=ce;var Q=j.type,le=j.stateNode;if(!(j.flags&128)&&(typeof Q.getDerivedStateFromError=="function"||le!==null&&typeof le.componentDidCatch=="function"&&(Cr===null||!Cr.has(le)))){j.flags|=65536,l&=-l,j.lanes|=l;var Ve=$m(j,b,l);ym(j,Ve);break e}}j=j.return}while(j!==null)}Og(d)}catch(et){l=et,cn===d&&d!==null&&(cn=d=d.return);continue}break}while(!0)}function Ng(){var o=lc.current;return lc.current=Yl,o===null?Yl:o}function Zf(){(fn===0||fn===3||fn===2)&&(fn=4),ln===null||!(co&268435455)&&!(cc&268435455)||Ir(ln,wn)}function gc(o,l){var d=bt;bt|=2;var v=Ng();ln===o&&wn===l||us(o,l);do try{wS();break}catch(S){Ug(o,S)}while(!0);if(rf(),bt=d,lc.current=v,cn!==null)throw Error(a(261));return ln=null,wn=0,fn}function wS(){for(;cn!==null;)Fg(cn)}function ES(){for(;cn!==null&&!Jy();)Fg(cn)}function Fg(o){var l=kg(o.alternate,o,ci);o.memoizedProps=o.pendingProps,l===null?Og(o):cn=l,kf.current=null}function Og(o){var l=o;do{var d=l.alternate;if(o=l.return,l.flags&32768){if(d=gS(d,l),d!==null){d.flags&=32767,cn=d;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{fn=6,cn=null;return}}else if(d=dS(d,l,ci),d!==null){cn=d;return}if(l=l.sibling,l!==null){cn=l;return}cn=l=o}while(l!==null);fn===0&&(fn=5)}function hs(o,l){var d=Bt,v=nn.transition;try{nn.transition=null,Bt=1,TS(o,l,d)}finally{nn.transition=v,Bt=d}return null}function TS(o,l,d){do fs();while(Rr!==null);if(bt&6)throw Error(a(327));var v=o.finishedWork,S=o.finishedLanes;if(v===null)return null;if(o.finishedWork=null,o.finishedLanes=0,v===o.current)throw Error(a(177));o.callbackNode=null,o.callbackPriority=0;var b=v.lanes|v.childLanes;if(Zy(o,b),o===ln&&(cn=ln=null,wn=0),!(v.subtreeFlags&2064)&&!(v.flags&2064)||hc||(hc=!0,Vg(ef,function(){return fs(),null})),b=(v.flags&15990)!==0,v.subtreeFlags&15990||b){b=nn.transition,nn.transition=null;var k=Bt;Bt=1;var j=bt;bt|=4,kf.current=null,_S(o,v),xS(o,v),X(o.containerInfo),o.current=v,yS(v),Ky(),bt=j,Bt=k,nn.transition=b}else o.current=v;if(hc&&(hc=!1,Rr=o,fc=S),b=o.pendingLanes,b===0&&(Cr=null),eS(v.stateNode),Jn(o,_n()),l!==null)for(d=o.onRecoverableError,v=0;v<l.length;v++)d(l[v]);if(uc)throw uc=!1,o=Wf,Wf=null,o;return fc&1&&o.tag!==0&&fs(),b=o.pendingLanes,b&1?o===Xf?pa++:(pa=0,Xf=o):pa=0,Hi(),null}function fs(){if(Rr!==null){var o=mm(fc),l=nn.transition,d=Bt;try{if(nn.transition=null,Bt=16>o?16:o,Rr===null)var v=!1;else{if(o=Rr,Rr=null,fc=0,bt&6)throw Error(a(331));var S=bt;for(bt|=4,ze=o.current;ze!==null;){var b=ze,k=b.child;if(ze.flags&16){var j=b.deletions;if(j!==null){for(var ce=0;ce<j.length;ce++){var Re=j[ce];for(ze=Re;ze!==null;){var Ye=ze;switch(Ye.tag){case 0:case 11:case 15:cs(8,Ye,b)}var gt=Ye.child;if(gt!==null)gt.return=Ye,ze=gt;else for(;ze!==null;){Ye=ze;var ut=Ye.sibling,Wt=Ye.return;if(Sg(Ye),Ye===Re){ze=null;break}if(ut!==null){ut.return=Wt,ze=ut;break}ze=Wt}}}var nt=b.alternate;if(nt!==null){var Rn=nt.child;if(Rn!==null){nt.child=null;do{var Si=Rn.sibling;Rn.sibling=null,Rn=Si}while(Rn!==null)}}ze=b}}if(b.subtreeFlags&2064&&k!==null)k.return=b,ze=k;else e:for(;ze!==null;){if(b=ze,b.flags&2048)switch(b.tag){case 0:case 11:case 15:cs(9,b,b.return)}var ie=b.sibling;if(ie!==null){ie.return=b.return,ze=ie;break e}ze=b.return}}var Q=o.current;for(ze=Q;ze!==null;){k=ze;var le=k.child;if(k.subtreeFlags&2064&&le!==null)le.return=k,ze=le;else e:for(k=Q;ze!==null;){if(j=ze,j.flags&2048)try{switch(j.tag){case 0:case 11:case 15:ua(9,j)}}catch(et){Kn(j,j.return,et)}if(j===k){ze=null;break e}var Ve=j.sibling;if(Ve!==null){Ve.return=j.return,ze=Ve;break e}ze=j.return}}if(bt=S,Hi(),ki&&typeof ki.onPostCommitFiberRoot=="function")try{ki.onPostCommitFiberRoot(Pl,o)}catch{}v=!0}return v}finally{Bt=d,nn.transition=l}}return!1}function Bg(o,l,d){l=Tf(d,l),l=Qm(o,l,1),Ar(o,l),l=zn(),o=mc(o,1),o!==null&&(Ko(o,1,l),Jn(o,l))}function Kn(o,l,d){if(o.tag===3)Bg(o,o,d);else for(;l!==null;){if(l.tag===3){Bg(l,o,d);break}else if(l.tag===1){var v=l.stateNode;if(typeof l.type.getDerivedStateFromError=="function"||typeof v.componentDidCatch=="function"&&(Cr===null||!Cr.has(v))){o=Tf(d,o),o=$m(l,o,1),Ar(l,o),o=zn(),l=mc(l,1),l!==null&&(Ko(l,1,o),Jn(l,o));break}}l=l.return}}function bS(o,l,d){var v=o.pingCache;v!==null&&v.delete(l),l=zn(),o.pingedLanes|=o.suspendedLanes&d,ln===o&&(wn&d)===d&&(fn===4||fn===3&&(wn&130023424)===wn&&500>_n()-Hf?us(o,0):Vf|=d),Jn(o,l)}function zg(o,l){l===0&&(o.mode&1?(l=Tr,Tr<<=1,!(Tr&130023424)&&(Tr=4194304)):l=1);var d=zn();o=mc(o,l),o!==null&&(Ko(o,l,d),Jn(o,d))}function AS(o){var l=o.memoizedState,d=0;l!==null&&(d=l.retryLane),zg(o,d)}function CS(o,l){var d=0;switch(o.tag){case 13:var v=o.stateNode,S=o.memoizedState;S!==null&&(d=S.retryLane);break;case 19:v=o.stateNode;break;default:throw Error(a(314))}v!==null&&v.delete(l),zg(o,d)}var kg;kg=function(o,l,d){if(o!==null)if(o.memoizedProps!==l.pendingProps||Rt.current)li=!0;else{if(!(o.lanes&d)&&!(l.flags&128))return li=!1,mS(o,l,d);li=!!(o.flags&131072)}else li=!1,qt&&l.flags&1048576&&bm(l,zl,l.index);switch(l.lanes=0,l.tag){case 2:var v=l.type;o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),o=l.pendingProps;var S=$e(l,Ct.current);eo(l,d),S=yf(null,l,v,o,S,d);var b=Sf();return l.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(l.tag=1,l.memoizedState=null,l.updateQueue=null,Ot(v)?(b=!0,vn(l)):b=!1,l.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,af(l),S.updater=Ol,l.stateNode=S,S._reactInternals=l,cf(l,v,o,d),l=Cf(null,l,v,!0,b,d)):(l.tag=0,qt&&b&&uf(l),Bn(null,l,S,d),l=l.child),l;case 16:v=l.elementType;e:{switch(o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),o=l.pendingProps,S=v._init,v=S(v._payload),l.type=v,S=l.tag=PS(v),o=Ai(v,o),S){case 0:l=Af(null,l,v,o,d);break e;case 1:l=ug(null,l,v,o,d);break e;case 11:l=sg(null,l,v,o,d);break e;case 14:l=og(null,l,v,Ai(v.type,o),d);break e}throw Error(a(306,v,""))}return l;case 0:return v=l.type,S=l.pendingProps,S=l.elementType===v?S:Ai(v,S),Af(o,l,v,S,d);case 1:return v=l.type,S=l.pendingProps,S=l.elementType===v?S:Ai(v,S),ug(o,l,v,S,d);case 3:e:{if(hg(l),o===null)throw Error(a(387));v=l.pendingProps,b=l.memoizedState,S=b.element,xm(o,l),Fl(l,v,null,d);var k=l.memoizedState;if(v=k.element,ye&&b.isDehydrated)if(b={element:v,isDehydrated:!1,cache:k.cache,transitions:k.transitions},l.updateQueue.baseState=b,l.memoizedState=b,l.flags&256){S=Error(a(423)),l=fg(o,l,v,d,S);break e}else if(v!==S){S=Error(a(424)),l=fg(o,l,v,d,S);break e}else for(ye&&(ai=Tl(l.stateNode.containerInfo),oi=l,qt=!0,Ci=null,Qo=!1),d=Lm(l,null,v,d),l.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(io(),v===S){l=lr(o,l,d);break e}Bn(o,l,v,d)}l=l.child}return l;case 5:return Dm(l),o===null&&df(l),v=l.type,S=l.pendingProps,b=o!==null?o.memoizedProps:null,k=S.children,Se(v,S)?k=null:b!==null&&Se(v,b)&&(l.flags|=32),cg(o,l),Bn(o,l,k,d),l.child;case 6:return o===null&&df(l),null;case 13:return dg(o,l,d);case 4:return mf(l,l.stateNode.containerInfo),v=l.pendingProps,o===null?l.child=ro(l,null,v,d):Bn(o,l,v,d),l.child;case 11:return v=l.type,S=l.pendingProps,S=l.elementType===v?S:Ai(v,S),sg(o,l,v,S,d);case 7:return Bn(o,l,l.pendingProps,d),l.child;case 8:return Bn(o,l,l.pendingProps.children,d),l.child;case 12:return Bn(o,l,l.pendingProps.children,d),l.child;case 10:e:{if(v=l.type._context,S=l.pendingProps,b=l.memoizedProps,k=S.value,_m(l,v,k),b!==null)if(Vi(b.value,k)){if(b.children===S.children&&!Rt.current){l=lr(o,l,d);break e}}else for(b=l.child,b!==null&&(b.return=l);b!==null;){var j=b.dependencies;if(j!==null){k=b.child;for(var ce=j.firstContext;ce!==null;){if(ce.context===v){if(b.tag===1){ce=rr(-1,d&-d),ce.tag=2;var Re=b.updateQueue;if(Re!==null){Re=Re.shared;var Ye=Re.pending;Ye===null?ce.next=ce:(ce.next=Ye.next,Ye.next=ce),Re.pending=ce}}b.lanes|=d,ce=b.alternate,ce!==null&&(ce.lanes|=d),of(b.return,d,l),j.lanes|=d;break}ce=ce.next}}else if(b.tag===10)k=b.type===l.type?null:b.child;else if(b.tag===18){if(k=b.return,k===null)throw Error(a(341));k.lanes|=d,j=k.alternate,j!==null&&(j.lanes|=d),of(k,d,l),k=b.sibling}else k=b.child;if(k!==null)k.return=b;else for(k=b;k!==null;){if(k===l){k=null;break}if(b=k.sibling,b!==null){b.return=k.return,k=b;break}k=k.return}b=k}Bn(o,l,S.children,d),l=l.child}return l;case 9:return S=l.type,v=l.pendingProps.children,eo(l,d),S=pi(S),v=v(S),l.flags|=1,Bn(o,l,v,d),l.child;case 14:return v=l.type,S=Ai(v,l.pendingProps),S=Ai(v.type,S),og(o,l,v,S,d);case 15:return ag(o,l,l.type,l.pendingProps,d);case 17:return v=l.type,S=l.pendingProps,S=l.elementType===v?S:Ai(v,S),o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),l.tag=1,Ot(v)?(o=!0,vn(l)):o=!1,eo(l,d),Em(l,v,S),cf(l,v,S,d),Cf(null,l,v,!0,o,d);case 19:return vg(o,l,d);case 22:return lg(o,l,d)}throw Error(a(156,l.tag))};function Vg(o,l){return Qh(o,l)}function RS(o,l,d,v){this.tag=o,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=l,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=v,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function yi(o,l,d,v){return new RS(o,l,d,v)}function Jf(o){return o=o.prototype,!(!o||!o.isReactComponent)}function PS(o){if(typeof o=="function")return Jf(o)?1:0;if(o!=null){if(o=o.$$typeof,o===M)return 11;if(o===E)return 14}return 2}function Lr(o,l){var d=o.alternate;return d===null?(d=yi(o.tag,l,o.key,o.mode),d.elementType=o.elementType,d.type=o.type,d.stateNode=o.stateNode,d.alternate=o,o.alternate=d):(d.pendingProps=l,d.type=o.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=o.flags&14680064,d.childLanes=o.childLanes,d.lanes=o.lanes,d.child=o.child,d.memoizedProps=o.memoizedProps,d.memoizedState=o.memoizedState,d.updateQueue=o.updateQueue,l=o.dependencies,d.dependencies=l===null?null:{lanes:l.lanes,firstContext:l.firstContext},d.sibling=o.sibling,d.index=o.index,d.ref=o.ref,d}function vc(o,l,d,v,S,b){var k=2;if(v=o,typeof o=="function")Jf(o)&&(k=1);else if(typeof o=="string")k=5;else e:switch(o){case f:return ds(d.children,S,b,l);case p:k=8,S|=8;break;case m:return o=yi(12,d,l,S|2),o.elementType=m,o.lanes=b,o;case y:return o=yi(13,d,l,S),o.elementType=y,o.lanes=b,o;case _:return o=yi(19,d,l,S),o.elementType=_,o.lanes=b,o;case T:return _c(d,S,b,l);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case g:k=10;break e;case x:k=9;break e;case M:k=11;break e;case E:k=14;break e;case w:k=16,v=null;break e}throw Error(a(130,o==null?o:typeof o,""))}return l=yi(k,d,l,S),l.elementType=o,l.type=v,l.lanes=b,l}function ds(o,l,d,v){return o=yi(7,o,v,l),o.lanes=d,o}function _c(o,l,d,v){return o=yi(22,o,v,l),o.elementType=T,o.lanes=d,o.stateNode={},o}function Kf(o,l,d){return o=yi(6,o,null,l),o.lanes=d,o}function Qf(o,l,d){return l=yi(4,o.children!==null?o.children:[],o.key,l),l.lanes=d,l.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},l}function IS(o,l,d,v,S){this.tag=l,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=lt,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Jh(0),this.expirationTimes=Jh(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Jh(0),this.identifierPrefix=v,this.onRecoverableError=S,ye&&(this.mutableSourceEagerHydrationData=null)}function Hg(o,l,d,v,S,b,k,j,ce){return o=new IS(o,l,d,j,ce),l===1?(l=1,b===!0&&(l|=8)):l=0,b=yi(3,null,null,l),o.current=b,b.stateNode=o,b.memoizedState={element:v,isDehydrated:d,cache:null,transitions:null},af(b),o}function Gg(o){if(!o)return Tt;o=o._reactInternals;e:{if(C(o)!==o||o.tag!==1)throw Error(a(170));var l=o;do{switch(l.tag){case 3:l=l.stateNode.context;break e;case 1:if(Ot(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break e}}l=l.return}while(l!==null);throw Error(a(171))}if(o.tag===1){var d=o.type;if(Ot(d))return nr(o,d,l)}return l}function Wg(o){var l=o._reactInternals;if(l===void 0)throw typeof o.render=="function"?Error(a(188)):(o=Object.keys(o).join(","),Error(a(268,o)));return o=q(l),o===null?null:o.stateNode}function Xg(o,l){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var d=o.retryLane;o.retryLane=d!==0&&d<l?d:l}}function $f(o,l){Xg(o,l),(o=o.alternate)&&Xg(o,l)}function LS(o){return o=q(o),o===null?null:o.stateNode}function DS(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var l=zn();xi(o,134217728,l),$f(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var l=zn(),d=Pr(o);xi(o,d,l),$f(o,d)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var l=o.stateNode;if(l.current.memoizedState.isDehydrated){var d=si(l.pendingLanes);d!==0&&(Kh(l,d|1),Jn(l,_n()),!(bt&6)&&(uo(),Hi()))}break;case 13:var v=zn();Dg(function(){return xi(o,1,v)}),$f(o,1)}},t.batchedUpdates=function(o,l){var d=bt;bt|=1;try{return o(l)}finally{bt=d,bt===0&&(uo(),Il&&Hi())}},t.createComponentSelector=function(o){return{$$typeof:ic,value:o}},t.createContainer=function(o,l,d,v,S,b,k){return Hg(o,l,!1,null,d,v,S,b,k)},t.createHasPseudoClassSelector=function(o){return{$$typeof:rc,value:o}},t.createHydrationContainer=function(o,l,d,v,S,b,k,j,ce){return o=Hg(d,v,!0,o,S,b,k,j,ce),o.context=Gg(null),d=o.current,v=zn(),S=Pr(d),b=rr(v,S),b.callback=l??null,Ar(d,b),o.current.lanes=S,Ko(o,S,v),Jn(o,v),o},t.createPortal=function(o,l,d){var v=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:v==null?null:""+v,children:o,containerInfo:l,implementation:d}},t.createRoleSelector=function(o){return{$$typeof:sc,value:o}},t.createTestNameSelector=function(o){return{$$typeof:oc,value:o}},t.createTextSelector=function(o){return{$$typeof:ac,value:o}},t.deferredUpdates=function(o){var l=Bt,d=nn.transition;try{return nn.transition=null,Bt=16,o()}finally{Bt=l,nn.transition=d}},t.discreteUpdates=function(o,l,d,v,S){var b=Bt,k=nn.transition;try{return nn.transition=null,Bt=1,o(l,d,v,S)}finally{Bt=b,nn.transition=k,bt===0&&uo()}},t.findAllNodes=zf,t.findBoundingRects=function(o,l){if(!De)throw Error(a(363));l=zf(o,l),o=[];for(var d=0;d<l.length;d++)o.push(P(l[d]));for(l=o.length-1;0<l;l--){d=o[l];for(var v=d.x,S=v+d.width,b=d.y,k=b+d.height,j=l-1;0<=j;j--)if(l!==j){var ce=o[j],Re=ce.x,Ye=Re+ce.width,gt=ce.y,ut=gt+ce.height;if(v>=Re&&b>=gt&&S<=Ye&&k<=ut){o.splice(l,1);break}else if(v!==Re||d.width!==ce.width||ut<b||gt>k){if(!(b!==gt||d.height!==ce.height||Ye<v||Re>S)){Re>v&&(ce.width+=Re-v,ce.x=v),Ye<S&&(ce.width=S-Re),o.splice(l,1);break}}else{gt>b&&(ce.height+=gt-b,ce.y=b),ut<k&&(ce.height=k-gt),o.splice(l,1);break}}}return o},t.findHostInstance=Wg,t.findHostInstanceWithNoPortals=function(o){return o=F(o),o=o!==null?$(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return Wg(o)},t.flushControlled=function(o){var l=bt;bt|=1;var d=nn.transition,v=Bt;try{nn.transition=null,Bt=1,o()}finally{Bt=v,nn.transition=d,bt=l,bt===0&&(uo(),Hi())}},t.flushPassiveEffects=fs,t.flushSync=Dg,t.focusWithin=function(o,l){if(!De)throw Error(a(363));for(o=Ff(o),l=Pg(o,l),l=Array.from(l),o=0;o<l.length;){var d=l[o++];if(!he(d)){if(d.tag===5&&pe(d.stateNode))return!0;for(d=d.child;d!==null;)l.push(d),d=d.sibling}}return!1},t.getCurrentUpdatePriority=function(){return Bt},t.getFindAllNodesFailureDescription=function(o,l){if(!De)throw Error(a(363));var d=0,v=[];o=[Ff(o),0];for(var S=0;S<o.length;){var b=o[S++],k=o[S++],j=l[k];if((b.tag!==5||!he(b))&&(Of(b,j)&&(v.push(Bf(j)),k++,k>d&&(d=k)),k<l.length))for(b=b.child;b!==null;)o.push(b,k),b=b.sibling}if(d<l.length){for(o=[];d<l.length;d++)o.push(Bf(l[d]));return`findAllNodes was able to match part of the selector:
  `+(v.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return ee(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:LS,findFiberByHostInstance:o.findFiberByHostInstance||DS,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var l=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(l.isDisabled||!l.supportsFiber)o=!0;else{try{Pl=l.inject(o),ki=l}catch{}o=!!l.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,l,d,v){if(!De)throw Error(a(363));o=zf(o,l);var S=Ze(o,d,v).disconnect;return{disconnect:function(){S()}}},t.registerMutableSourceForHydration=function(o,l){var d=l._getVersion;d=d(l._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[l,d]:o.mutableSourceEagerHydrationData.push(l,d)},t.runWithPriority=function(o,l){var d=Bt;try{return Bt=o,l()}finally{Bt=d}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,l,d,v){var S=l.current,b=zn(),k=Pr(S);return d=Gg(d),l.context===null?l.context=d:l.pendingContext=d,l=rr(b,k),l.payload={element:o},v=v===void 0?null:v,v!==null&&(l.callback=v),Ar(S,l),o=xi(S,k,b),o!==null&&Nl(o,S,k),k},t}),jd}var Rv;function sR(){return Rv||(Rv=1,Gd.exports=rR()),Gd.exports}var oR=sR();const aR=p_(oR);var qd={exports:{}},Yd={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Pv;function lR(){return Pv||(Pv=1,function(r){function e(O,Y){var X=O.length;O.push(Y);e:for(;0<X;){var Z=X-1>>>1,fe=O[Z];if(0<i(fe,Y))O[Z]=Y,O[X]=fe,X=Z;else break e}}function t(O){return O.length===0?null:O[0]}function n(O){if(O.length===0)return null;var Y=O[0],X=O.pop();if(X!==Y){O[0]=X;e:for(var Z=0,fe=O.length,Ee=fe>>>1;Z<Ee;){var ne=2*(Z+1)-1,Se=O[ne],Pe=ne+1,Me=O[Pe];if(0>i(Se,X))Pe<fe&&0>i(Me,Se)?(O[Z]=Me,O[Pe]=X,Z=Pe):(O[Z]=Se,O[ne]=X,Z=ne);else if(Pe<fe&&0>i(Me,X))O[Z]=Me,O[Pe]=X,Z=Pe;else break e}}return Y}function i(O,Y){var X=O.sortIndex-Y.sortIndex;return X!==0?X:O.id-Y.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var a=Date,c=a.now();r.unstable_now=function(){return a.now()-c}}var u=[],h=[],f=1,p=null,m=3,g=!1,x=!1,M=!1,y=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(O){for(var Y=t(h);Y!==null;){if(Y.callback===null)n(h);else if(Y.startTime<=O)n(h),Y.sortIndex=Y.expirationTime,e(u,Y);else break;Y=t(h)}}function T(O){if(M=!1,w(O),!x)if(t(u)!==null)x=!0,ee(L);else{var Y=t(h);Y!==null&&ge(T,Y.startTime-O)}}function L(O,Y){x=!1,M&&(M=!1,_(N),N=-1),g=!0;var X=m;try{for(w(Y),p=t(u);p!==null&&(!(p.expirationTime>Y)||O&&!F());){var Z=p.callback;if(typeof Z=="function"){p.callback=null,m=p.priorityLevel;var fe=Z(p.expirationTime<=Y);Y=r.unstable_now(),typeof fe=="function"?p.callback=fe:p===t(u)&&n(u),w(Y)}else n(u);p=t(u)}if(p!==null)var Ee=!0;else{var ne=t(h);ne!==null&&ge(T,ne.startTime-Y),Ee=!1}return Ee}finally{p=null,m=X,g=!1}}var R=!1,U=null,N=-1,C=5,A=-1;function F(){return!(r.unstable_now()-A<C)}function q(){if(U!==null){var O=r.unstable_now();A=O;var Y=!0;try{Y=U(!0,O)}finally{Y?W():(R=!1,U=null)}}else R=!1}var W;if(typeof E=="function")W=function(){E(q)};else if(typeof MessageChannel<"u"){var $=new MessageChannel,oe=$.port2;$.port1.onmessage=q,W=function(){oe.postMessage(null)}}else W=function(){y(q,0)};function ee(O){U=O,R||(R=!0,W())}function ge(O,Y){N=y(function(){O(r.unstable_now())},Y)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(O){O.callback=null},r.unstable_continueExecution=function(){x||g||(x=!0,ee(L))},r.unstable_forceFrameRate=function(O){0>O||125<O?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<O?Math.floor(1e3/O):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(O){switch(m){case 1:case 2:case 3:var Y=3;break;default:Y=m}var X=m;m=Y;try{return O()}finally{m=X}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(O,Y){switch(O){case 1:case 2:case 3:case 4:case 5:break;default:O=3}var X=m;m=O;try{return Y()}finally{m=X}},r.unstable_scheduleCallback=function(O,Y,X){var Z=r.unstable_now();switch(typeof X=="object"&&X!==null?(X=X.delay,X=typeof X=="number"&&0<X?Z+X:Z):X=Z,O){case 1:var fe=-1;break;case 2:fe=250;break;case 5:fe=1073741823;break;case 4:fe=1e4;break;default:fe=5e3}return fe=X+fe,O={id:f++,callback:Y,priorityLevel:O,startTime:X,expirationTime:fe,sortIndex:-1},X>Z?(O.sortIndex=X,e(h,O),t(u)===null&&O===t(h)&&(M?(_(N),N=-1):M=!0,ge(T,X-Z))):(O.sortIndex=fe,e(u,O),x||g||(x=!0,ee(L))),O},r.unstable_shouldYield=F,r.unstable_wrapCallback=function(O){var Y=m;return function(){var X=m;m=Y;try{return O.apply(this,arguments)}finally{m=X}}}}(Yd)),Yd}var Iv;function cR(){return Iv||(Iv=1,qd.exports=lR()),qd.exports}var Lv=cR();const fm={},my=r=>void Object.assign(fm,r);function uR(r,e){function t(f,{args:p=[],attach:m,...g},x){let M=`${f[0].toUpperCase()}${f.slice(1)}`,y;if(f==="primitive"){if(g.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const _=g.object;y=Uo(_,{type:f,root:x,attach:m,primitive:!0})}else{const _=fm[M];if(!_)throw new Error(`R3F: ${M} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");y=Uo(new _(...p),{type:f,root:x,attach:m,memoizedProps:{args:p}})}return y.__r3f.attach===void 0&&(y.isBufferGeometry?y.__r3f.attach="geometry":y.isMaterial&&(y.__r3f.attach="material")),M!=="inject"&&Kd(y,g),y}function n(f,p){let m=!1;if(p){var g,x;(g=p.__r3f)!=null&&g.attach?Jd(f,p,p.__r3f.attach):p.isObject3D&&f.isObject3D&&(f.add(p),m=!0),m||(x=f.__r3f)==null||x.objects.push(p),p.__r3f||Uo(p,{}),p.__r3f.parent=f,Ap(p),No(p)}}function i(f,p,m){let g=!1;if(p){var x,M;if((x=p.__r3f)!=null&&x.attach)Jd(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){p.parent=f,p.dispatchEvent({type:"added"}),f.dispatchEvent({type:"childadded",child:p});const y=f.children.filter(E=>E!==p),_=y.indexOf(m);f.children=[...y.slice(0,_),p,...y.slice(_)],g=!0}g||(M=f.__r3f)==null||M.objects.push(p),p.__r3f||Uo(p,{}),p.__r3f.parent=f,Ap(p),No(p)}}function s(f,p,m=!1){f&&[...f].forEach(g=>a(p,g,m))}function a(f,p,m){if(p){var g,x,M;if(p.__r3f&&(p.__r3f.parent=null),(g=f.__r3f)!=null&&g.objects&&(f.__r3f.objects=f.__r3f.objects.filter(T=>T!==p)),(x=p.__r3f)!=null&&x.attach)Ov(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){var y;f.remove(p),(y=p.__r3f)!=null&&y.root&&_R(xu(p),p)}const E=(M=p.__r3f)==null?void 0:M.primitive,w=!E&&(m===void 0?p.dispose!==null:m);if(!E){var _;s((_=p.__r3f)==null?void 0:_.objects,p,w),s(p.children,p,w)}if(delete p.__r3f,w&&p.dispose&&p.type!=="Scene"){const T=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?Lv.unstable_scheduleCallback(Lv.unstable_IdlePriority,T):T()}No(f)}}function c(f,p,m,g){var x;const M=(x=f.__r3f)==null?void 0:x.parent;if(!M)return;const y=t(p,m,f.__r3f.root);if(f.children){for(const _ of f.children)_.__r3f&&n(y,_);f.children=f.children.filter(_=>!_.__r3f)}f.__r3f.objects.forEach(_=>n(y,_)),f.__r3f.objects=[],f.__r3f.autoRemovedBeforeAppend||a(M,f),y.parent&&(y.__r3f.autoRemovedBeforeAppend=!0),n(M,y),y.raycast&&y.__r3f.eventCount&&xu(y).getState().internal.interaction.push(y),[g,g.alternate].forEach(_=>{_!==null&&(_.stateNode=y,_.ref&&(typeof _.ref=="function"?_.ref(y):_.ref.current=y))})}const u=()=>{};return{reconciler:aR({createInstance:t,removeChild:a,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(f,p)=>{if(!p)return;const m=f.getState().scene;m.__r3f&&(m.__r3f.root=f,n(m,p))},removeChildFromContainer:(f,p)=>{p&&a(f.getState().scene,p)},insertInContainerBefore:(f,p,m)=>{if(!p||!m)return;const g=f.getState().scene;g.__r3f&&i(g,p,m)},getRootHostContext:()=>null,getChildHostContext:f=>f,finalizeInitialChildren(f){var p;return!!((p=f==null?void 0:f.__r3f)!=null?p:{}).handlers},prepareUpdate(f,p,m,g){var x;if(((x=f==null?void 0:f.__r3f)!=null?x:{}).primitive&&g.object&&g.object!==f)return[!0];{const{args:y=[],children:_,...E}=g,{args:w=[],children:T,...L}=m;if(!Array.isArray(y))throw new Error("R3F: the args prop must be an array!");if(y.some((U,N)=>U!==w[N]))return[!0];const R=My(f,E,L,!0);return R.changes.length?[!1,R]:null}},commitUpdate(f,[p,m],g,x,M,y){p?c(f,g,M,y):Kd(f,m)},commitMount(f,p,m,g){var x;const M=(x=f.__r3f)!=null?x:{};f.raycast&&M.handlers&&M.eventCount&&xu(f).getState().internal.interaction.push(f)},getPublicInstance:f=>f,prepareForCommit:()=>null,preparePortalMount:f=>Uo(f.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(f){var p;const{attach:m,parent:g}=(p=f.__r3f)!=null?p:{};m&&g&&Ov(g,f,m),f.isObject3D&&(f.visible=!1),No(f)},unhideInstance(f,p){var m;const{attach:g,parent:x}=(m=f.__r3f)!=null?m:{};g&&x&&Jd(x,f,g),(f.isObject3D&&p.visible==null||p.visible)&&(f.visible=!0),No(f)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e(),beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Xt.fun(performance.now)?performance.now:Xt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Xt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Xt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Kd}}var Dv,Uv;const Zd=r=>"colorSpace"in r||"outputColorSpace"in r,gy=()=>{var r;return(r=fm.ColorManagement)!=null?r:null},vy=r=>r&&r.isOrthographicCamera,hR=r=>r&&r.hasOwnProperty("current"),Sl=typeof window<"u"&&((Dv=window.document)!=null&&Dv.createElement||((Uv=window.navigator)==null?void 0:Uv.product)==="ReactNative")?_e.useLayoutEffect:_e.useEffect;function _y(r){const e=_e.useRef(r);return Sl(()=>void(e.current=r),[r]),e}function fR({set:r}){return Sl(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class xy extends _e.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}xy.getDerivedStateFromError=()=>({error:!0});const yy="__default",Nv=new Map,dR=r=>r&&!!r.memoized&&!!r.changes;function Sy(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const Aa=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function xu(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const Xt={obj:r=>r===Object(r)&&!Xt.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(Xt.str(r)||Xt.num(r)||Xt.boo(r))return r===e;const s=Xt.obj(r);if(s&&n==="reference")return r===e;const a=Xt.arr(r);if(a&&t==="reference")return r===e;if((a||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!Xt.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(Xt.und(c)){if(a&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function pR(r){const e={nodes:{},materials:{}};return r&&r.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material)}),e}function mR(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function Uo(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function bp(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,a)=>s[a],r),{target:t,key:i}}else return{target:t,key:e}}const Fv=/-\d+$/;function Jd(r,e,t){if(Xt.str(t)){if(Fv.test(t)){const s=t.replace(Fv,""),{target:a,key:c}=bp(r,s);Array.isArray(a[c])||(a[c]=[])}const{target:n,key:i}=bp(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function Ov(r,e,t){var n,i;if(Xt.str(t)){const{target:s,key:a}=bp(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[a]:s[a]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function My(r,{children:e,key:t,ref:n,...i},{children:s,key:a,ref:c,...u}={},h=!1){const f=r.__r3f,p=Object.entries(i),m=[];if(h){const x=Object.keys(u);for(let M=0;M<x.length;M++)i.hasOwnProperty(x[M])||p.unshift([x[M],yy+"remove"])}p.forEach(([x,M])=>{var y;if((y=r.__r3f)!=null&&y.primitive&&x==="object"||Xt.equ(M,u[x]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(x))return m.push([x,M,!0,[]]);let _=[];x.includes("-")&&(_=x.split("-")),m.push([x,M,!1,_]);for(const E in i){const w=i[E];E.startsWith(`${x}-`)&&m.push([E,w,!1,E.split("-")])}});const g={...i};return f!=null&&f.memoizedProps&&f!=null&&f.memoizedProps.args&&(g.args=f.memoizedProps.args),f!=null&&f.memoizedProps&&f!=null&&f.memoizedProps.attach&&(g.attach=f.memoizedProps.attach),{memoized:g,changes:m}}function Kd(r,e){var t;const n=r.__r3f,i=n==null?void 0:n.root,s=i==null||i.getState==null?void 0:i.getState(),{memoized:a,changes:c}=dR(e)?e:My(r,e),u=n==null?void 0:n.eventCount;r.__r3f&&(r.__r3f.memoizedProps=a);for(let m=0;m<c.length;m++){let[g,x,M,y]=c[m];if(Zd(r)){const T="srgb",L="srgb-linear";g==="encoding"?(g="colorSpace",x=x===3001?T:L):g==="outputEncoding"&&(g="outputColorSpace",x=x===3001?T:L)}let _=r,E=_[g];if(y.length&&(E=y.reduce((w,T)=>w[T],r),!(E&&E.set))){const[w,...T]=y.reverse();_=T.reverse().reduce((L,R)=>L[R],r),g=w}if(x===yy+"remove")if(_.constructor){let w=Nv.get(_.constructor);w||(w=new _.constructor,Nv.set(_.constructor,w)),x=w[g]}else x=0;if(M&&n)x?n.handlers[g]=x:delete n.handlers[g],n.eventCount=Object.keys(n.handlers).length;else if(E&&E.set&&(E.copy||E instanceof zs)){if(Array.isArray(x))E.fromArray?E.fromArray(x):E.set(...x);else if(E.copy&&x&&x.constructor&&E.constructor===x.constructor)E.copy(x);else if(x!==void 0){var h;const w=(h=E)==null?void 0:h.isColor;!w&&E.setScalar?E.setScalar(x):E instanceof zs&&x instanceof zs?E.mask=x.mask:E.set(x),!gy()&&s&&!s.linear&&w&&E.convertSRGBToLinear()}}else{var f;if(_[g]=x,(f=_[g])!=null&&f.isTexture&&_[g].format===Un&&_[g].type===Fi&&s){const w=_[g];Zd(w)&&Zd(s.gl)?w.colorSpace=s.gl.outputColorSpace:w.encoding=s.gl.outputEncoding}}No(r)}if(n&&n.parent&&r.raycast&&u!==n.eventCount){const m=xu(r).getState().internal,g=m.interaction.indexOf(r);g>-1&&m.interaction.splice(g,1),n.eventCount&&m.interaction.push(r)}return!(c.length===1&&c[0][0]==="onUpdate")&&c.length&&(t=r.__r3f)!=null&&t.parent&&Ap(r),r}function No(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function Ap(r){r.onUpdate==null||r.onUpdate(r)}function gR(r,e){r.manual||(vy(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function uu(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function vR(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return Da.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return Da.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return Da.ContinuousEventPriority;default:return Da.DefaultEventPriority}}function wy(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function _R(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{wy(t.capturedMap,e,n,i)})}function xR(r){function e(u){const{internal:h}=r.getState(),f=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(f*f+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(f=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+f]}))}function n(u,h){const f=r.getState(),p=new Set,m=[],g=h?h(f.internal.interaction):f.internal.interaction;for(let _=0;_<g.length;_++){const E=Aa(g[_]);E&&(E.raycaster.camera=void 0)}f.previousRoot||f.events.compute==null||f.events.compute(u,f);function x(_){const E=Aa(_);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var w;E.events.compute==null||E.events.compute(u,E,(w=E.previousRoot)==null?void 0:w.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(_,!0):[]}let M=g.flatMap(x).sort((_,E)=>{const w=Aa(_.object),T=Aa(E.object);return!w||!T?_.distance-E.distance:T.events.priority-w.events.priority||_.distance-E.distance}).filter(_=>{const E=uu(_);return p.has(E)?!1:(p.add(E),!0)});f.events.filter&&(M=f.events.filter(M,f));for(const _ of M){let E=_.object;for(;E;){var y;(y=E.__r3f)!=null&&y.eventCount&&m.push({..._,eventObject:E}),E=E.parent}}if("pointerId"in u&&f.internal.capturedMap.has(u.pointerId))for(let _ of f.internal.capturedMap.get(u.pointerId).values())p.has(uu(_.intersection))||m.push(_.intersection);return m}function i(u,h,f,p){const m=r.getState();if(u.length){const g={stopped:!1};for(const x of u){const M=Aa(x.object)||m,{raycaster:y,pointer:_,camera:E,internal:w}=M,T=new I(_.x,_.y,0).unproject(E),L=A=>{var F,q;return(F=(q=w.capturedMap.get(A))==null?void 0:q.has(x.eventObject))!=null?F:!1},R=A=>{const F={intersection:x,target:h.target};w.capturedMap.has(A)?w.capturedMap.get(A).set(x.eventObject,F):w.capturedMap.set(A,new Map([[x.eventObject,F]])),h.target.setPointerCapture(A)},U=A=>{const F=w.capturedMap.get(A);F&&wy(w.capturedMap,x.eventObject,F,A)};let N={};for(let A in h){let F=h[A];typeof F!="function"&&(N[A]=F)}let C={...x,...N,pointer:_,intersections:u,stopped:g.stopped,delta:f,unprojectedPoint:T,ray:y.ray,camera:E,stopPropagation(){const A="pointerId"in h&&w.capturedMap.get(h.pointerId);if((!A||A.has(x.eventObject))&&(C.stopped=g.stopped=!0,w.hovered.size&&Array.from(w.hovered.values()).find(F=>F.eventObject===x.eventObject))){const F=u.slice(0,u.indexOf(x));s([...F,x])}},target:{hasPointerCapture:L,setPointerCapture:R,releasePointerCapture:U},currentTarget:{hasPointerCapture:L,setPointerCapture:R,releasePointerCapture:U},nativeEvent:h};if(p(C),g.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const f of h.hovered.values())if(!u.length||!u.find(p=>p.object===f.object&&p.index===f.index&&p.instanceId===f.instanceId)){const m=f.eventObject.__r3f,g=m==null?void 0:m.handlers;if(h.hovered.delete(uu(f)),m!=null&&m.eventCount){const x={...f,intersections:u};g.onPointerOut==null||g.onPointerOut(x),g.onPointerLeave==null||g.onPointerLeave(x)}}}function a(u,h){for(let f=0;f<h.length;f++){const p=h[f].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:f}=r.getState();"pointerId"in h&&f.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{f.capturedMap.has(h.pointerId)&&(f.capturedMap.delete(h.pointerId),s([]))})}}return function(f){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=f;const g=u==="onPointerMove",x=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",y=n(f,g?t:void 0),_=x?e(f):0;u==="onPointerDown"&&(m.initialClick=[f.offsetX,f.offsetY],m.initialHits=y.map(w=>w.eventObject)),x&&!y.length&&_<=2&&(a(f,m.interaction),p&&p(f)),g&&s(y);function E(w){const T=w.eventObject,L=T.__r3f,R=L==null?void 0:L.handlers;if(L!=null&&L.eventCount)if(g){if(R.onPointerOver||R.onPointerEnter||R.onPointerOut||R.onPointerLeave){const U=uu(w),N=m.hovered.get(U);N?N.stopped&&w.stopPropagation():(m.hovered.set(U,w),R.onPointerOver==null||R.onPointerOver(w),R.onPointerEnter==null||R.onPointerEnter(w))}R.onPointerMove==null||R.onPointerMove(w)}else{const U=R[u];U?(!x||m.initialHits.includes(T))&&(a(f,m.interaction.filter(N=>!m.initialHits.includes(N))),U(w)):x&&m.initialHits.includes(T)&&a(f,m.interaction.filter(N=>!m.initialHits.includes(N)))}}i(y,f,_,E)}}return{handlePointer:c}}const Ey=r=>!!(r!=null&&r.render),Ty=_e.createContext(null),yR=(r,e)=>{const t=KC((c,u)=>{const h=new I,f=new I,p=new I;function m(_=u().camera,E=f,w=u().size){const{width:T,height:L,top:R,left:U}=w,N=T/L;E.isVector3?p.copy(E):p.set(...E);const C=_.getWorldPosition(h).distanceTo(p);if(vy(_))return{width:T/_.zoom,height:L/_.zoom,top:R,left:U,factor:1,distance:C,aspect:N};{const A=_.fov*Math.PI/180,F=2*Math.tan(A/2)*C,q=F*(T/L);return{width:q,height:F,top:R,left:U,factor:T/q,distance:C,aspect:N}}}let g;const x=_=>c(E=>({performance:{...E.performance,current:_}})),M=new ue;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(_=1)=>r(u(),_),advance:(_,E)=>e(_,E,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new am,pointer:M,mouse:M,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=u();g&&clearTimeout(g),_.performance.current!==_.performance.min&&x(_.performance.min),g=setTimeout(()=>x(u().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:_=>c(E=>({...E,events:{...E.events,..._}})),setSize:(_,E,w,T,L)=>{const R=u().camera,U={width:_,height:E,top:T||0,left:L||0,updateStyle:w};c(N=>({size:U,viewport:{...N.viewport,...m(R,f,U)}}))},setDpr:_=>c(E=>{const w=Sy(_);return{viewport:{...E.viewport,dpr:w,initialDpr:E.viewport.initialDpr||w}}}),setFrameloop:(_="always")=>{const E=u().clock;E.stop(),E.elapsedTime=0,_!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:_e.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(_,E,w)=>{const T=u().internal;return T.priority=T.priority+(E>0?1:0),T.subscribers.push({ref:_,priority:E,store:w}),T.subscribers=T.subscribers.sort((L,R)=>L.priority-R.priority),()=>{const L=u().internal;L!=null&&L.subscribers&&(L.priority=L.priority-(E>0?1:0),L.subscribers=L.subscribers.filter(R=>R.ref!==_))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,a=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:f,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,gR(c,u),f.setPixelRatio(h.dpr);const g=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&f.domElement instanceof HTMLCanvasElement;f.setSize(u.width,u.height,g)}c!==a&&(a=c,p(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let hu,SR=new Set,MR=new Set,wR=new Set;function Qd(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function Ca(r,e){switch(r){case"before":return Qd(SR,e);case"after":return Qd(MR,e);case"tail":return Qd(wR,e)}}let $d,ep;function tp(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),$d=e.internal.subscribers,hu=0;hu<$d.length;hu++)ep=$d[hu],ep.ref.current(ep.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function ER(r){let e=!1,t=!1,n,i,s;function a(h){i=requestAnimationFrame(a),e=!0,n=0,Ca("before",h),t=!0;for(const p of r.values()){var f;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((f=s.gl.xr)!=null&&f.isPresenting)&&(n+=tp(h,s))}if(t=!1,Ca("after",h),n===0)return Ca("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,f=1){var p;if(!h)return r.forEach(m=>c(m.store.getState(),f));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(f>1?h.internal.frames=Math.min(60,h.internal.frames+f):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(a)))}function u(h,f=!0,p,m){if(f&&Ca("before",h),p)tp(h,p,m);else for(const g of r.values())tp(h,g.store.getState());f&&Ca("after",h)}return{loop:a,invalidate:c,advance:u}}function by(){const r=_e.useContext(Ty);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function Ei(r=t=>t,e){return by()(r,e)}function ns(r,e=0){const t=by(),n=t.getState().internal.subscribe,i=_y(r);return Sl(()=>n(i,e,t),[e,n,t]),null}const Bv=new WeakMap;function Ay(r,e){return function(t,...n){let i=Bv.get(t);return i||(i=new t,Bv.set(t,i)),r&&r(i),Promise.all(n.map(s=>new Promise((a,c)=>i.load(s,u=>{u.scene&&Object.assign(u,pR(u.scene)),a(u)},e,u=>c(new Error(`Could not load ${s}: ${u==null?void 0:u.message}`))))))}}function En(r,e,t,n){const i=Array.isArray(e)?e:[e],s=$C(Ay(t,n),[r,...i],{equal:Xt.equ});return Array.isArray(e)?s:s[0]}En.preload=function(r,e,t){const n=Array.isArray(e)?e:[e];return eR(Ay(t),[r,...n])};En.clear=function(r,e){const t=Array.isArray(e)?e:[e];return tR([r,...t])};const Xo=new Map,{invalidate:zv,advance:kv}=ER(Xo),{reconciler:oh,applyProps:Po}=uR(Xo,vR),Io={objects:"shallow",strict:!1},TR=(r,e)=>{const t=typeof r=="function"?r(e):r;return Ey(t)?t:new fy({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function bR(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:a,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:a,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:a}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:a,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function AR(r){const e=Xo.get(r),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||yR(zv,kv),a=t||oh.createContainer(s,Da.ConcurrentRoot,null,!1,null,"",i,null);e||Xo.set(r,{fiber:a,store:s});let c,u=!1,h;return{configure(f={}){let{gl:p,size:m,scene:g,events:x,onCreated:M,shadows:y=!1,linear:_=!1,flat:E=!1,legacy:w=!1,orthographic:T=!1,frameloop:L="always",dpr:R=[1,2],performance:U,raycaster:N,camera:C,onPointerMissed:A}=f,F=s.getState(),q=F.gl;F.gl||F.set({gl:q=TR(p,r)});let W=F.raycaster;W||F.set({raycaster:W=new ry});const{params:$,...oe}=N||{};if(Xt.equ(oe,W,Io)||Po(W,{...oe}),Xt.equ($,W.params,Io)||Po(W,{params:{...W.params,...$}}),!F.camera||F.camera===h&&!Xt.equ(h,C,Io)){h=C;const X=C instanceof qo,Z=X?C:T?new qr(0,0,0,0,.1,1e3):new en(75,0,.1,1e3);X||(Z.position.z=5,C&&(Po(Z,C),("aspect"in C||"left"in C||"right"in C||"bottom"in C||"top"in C)&&(Z.manual=!0,Z.updateProjectionMatrix())),!F.camera&&!(C!=null&&C.rotation)&&Z.lookAt(0,0,0)),F.set({camera:Z}),W.camera=Z}if(!F.scene){let X;g!=null&&g.isScene?X=g:(X=new Mh,g&&Po(X,g)),F.set({scene:Uo(X)})}if(!F.xr){var ee;const X=(Ee,ne)=>{const Se=s.getState();Se.frameloop!=="never"&&kv(Ee,!0,Se,ne)},Z=()=>{const Ee=s.getState();Ee.gl.xr.enabled=Ee.gl.xr.isPresenting,Ee.gl.xr.setAnimationLoop(Ee.gl.xr.isPresenting?X:null),Ee.gl.xr.isPresenting||zv(Ee)},fe={connect(){const Ee=s.getState().gl;Ee.xr.addEventListener("sessionstart",Z),Ee.xr.addEventListener("sessionend",Z)},disconnect(){const Ee=s.getState().gl;Ee.xr.removeEventListener("sessionstart",Z),Ee.xr.removeEventListener("sessionend",Z)}};typeof((ee=q.xr)==null?void 0:ee.addEventListener)=="function"&&fe.connect(),F.set({xr:fe})}if(q.shadowMap){const X=q.shadowMap.enabled,Z=q.shadowMap.type;if(q.shadowMap.enabled=!!y,Xt.boo(y))q.shadowMap.type=Ua;else if(Xt.str(y)){var ge;const fe={basic:v_,percentage:uh,soft:Ua,variance:Di};q.shadowMap.type=(ge=fe[y])!=null?ge:Ua}else Xt.obj(y)&&Object.assign(q.shadowMap,y);(X!==q.shadowMap.enabled||Z!==q.shadowMap.type)&&(q.shadowMap.needsUpdate=!0)}const O=gy();O&&("enabled"in O?O.enabled=!w:"legacyMode"in O&&(O.legacyMode=w)),u||Po(q,{outputEncoding:_?3e3:3001,toneMapping:E?bi:Cp}),F.legacy!==w&&F.set(()=>({legacy:w})),F.linear!==_&&F.set(()=>({linear:_})),F.flat!==E&&F.set(()=>({flat:E})),p&&!Xt.fun(p)&&!Ey(p)&&!Xt.equ(p,q,Io)&&Po(q,p),x&&!F.events.handlers&&F.set({events:x(s)});const Y=bR(r,m);return Xt.equ(Y,F.size,Io)||F.setSize(Y.width,Y.height,Y.updateStyle,Y.top,Y.left),R&&F.viewport.dpr!==Sy(R)&&F.setDpr(R),F.frameloop!==L&&F.setFrameloop(L),F.onPointerMissed||F.set({onPointerMissed:A}),U&&!Xt.equ(U,F.performance,Io)&&F.set(X=>({performance:{...X.performance,...U}})),c=M,u=!0,this},render(f){return u||this.configure(),oh.updateContainer(G.jsx(CR,{store:s,children:f,onCreated:c,rootElement:r}),a,null,()=>{}),s},unmount(){Cy(r)}}}function CR({store:r,children:e,onCreated:t,rootElement:n}){return Sl(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),G.jsx(Ty.Provider,{value:r,children:e})}function Cy(r,e){const t=Xo.get(r),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),oh.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,a,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(a=s.renderLists)==null||a.dispose==null||a.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),mR(i),Xo.delete(r)}catch{}},500)})}}oh.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:_e.version});const np={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function RR(r){const{handlePointer:e}=xR(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(np).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(a=>({events:{...a.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([a,c])=>{const[u,h]=np[a];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,a])=>{if(n&&n.connected instanceof HTMLElement){const[c]=np[s];n.connected.removeEventListener(c,a)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}var ip,Vv;function PR(){if(Vv)return ip;Vv=1;function r(e,t,n){var i,s,a,c,u;t==null&&(t=100);function h(){var p=Date.now()-c;p<t&&p>=0?i=setTimeout(h,t-p):(i=null,n||(u=e.apply(a,s),a=s=null))}var f=function(){a=this,s=arguments,c=Date.now();var p=n&&!i;return i||(i=setTimeout(h,t)),p&&(u=e.apply(a,s),a=s=null),u};return f.clear=function(){i&&(clearTimeout(i),i=null)},f.flush=function(){i&&(u=e.apply(a,s),a=s=null,clearTimeout(i),i=null)},f}return r.debounce=r,ip=r,ip}var IR=PR();const Hv=p_(IR);var LR=Object.defineProperty,DR=Object.defineProperties,UR=Object.getOwnPropertyDescriptors,Gv=Object.getOwnPropertySymbols,NR=Object.prototype.hasOwnProperty,FR=Object.prototype.propertyIsEnumerable,Wv=(r,e,t)=>e in r?LR(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Xv=(r,e)=>{for(var t in e||(e={}))NR.call(e,t)&&Wv(r,t,e[t]);if(Gv)for(var t of Gv(e))FR.call(e,t)&&Wv(r,t,e[t]);return r},OR=(r,e)=>DR(r,UR(e)),jv,qv;typeof window<"u"&&((jv=window.document)!=null&&jv.createElement||((qv=window.navigator)==null?void 0:qv.product)==="ReactNative")?_e.useLayoutEffect:_e.useEffect;function Ry(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=r.child;for(;n;){const i=Ry(n,e,t);if(i)return i;n=n.sibling}}function Py(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const Yv=console.error;console.error=function(){const r=[...arguments].join("");if(r!=null&&r.startsWith("Warning:")&&r.includes("useContext")){console.error=Yv;return}return Yv.apply(this,arguments)};const dm=Py(_e.createContext(null));class Iy extends _e.Component{render(){return _e.createElement(dm.Provider,{value:this._reactInternals},this.props.children)}}function BR(){const r=_e.useContext(dm);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=_e.useId();return _e.useMemo(()=>{for(const n of[r,r==null?void 0:r.alternate]){if(!n)continue;const i=Ry(n,!1,s=>{let a=s.memoizedState;for(;a;){if(a.memoizedState===e)return!0;a=a.next}});if(i)return i}},[r,e])}function zR(){const r=BR(),[e]=_e.useState(()=>new Map);e.clear();let t=r;for(;t;){if(t.type&&typeof t.type=="object"){const i=t.type._context===void 0&&t.type.Provider===t.type?t.type:t.type._context;i&&i!==dm&&!e.has(i)&&e.set(i,_e.useContext(Py(i)))}t=t.return}return e}function kR(){const r=zR();return _e.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>_e.createElement(e,null,_e.createElement(t.Provider,OR(Xv({},n),{value:r.get(t)}))),e=>_e.createElement(Iy,Xv({},e))),[r])}function VR({debounce:r,scroll:e,polyfill:t,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=t||typeof window<"u"&&window.ResizeObserver,[s,a]=_e.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0});if(!i)return s.width=1280,s.height=800,[()=>{},s,()=>{}];const c=_e.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:s,orientationHandler:null}),u=r?typeof r=="number"?r:r.scroll:null,h=r?typeof r=="number"?r:r.resize:null,f=_e.useRef(!1);_e.useEffect(()=>(f.current=!0,()=>void(f.current=!1)));const[p,m,g]=_e.useMemo(()=>{const _=()=>{if(!c.current.element)return;const{left:E,top:w,width:T,height:L,bottom:R,right:U,x:N,y:C}=c.current.element.getBoundingClientRect(),A={left:E,top:w,width:T,height:L,bottom:R,right:U,x:N,y:C};c.current.element instanceof HTMLElement&&n&&(A.height=c.current.element.offsetHeight,A.width=c.current.element.offsetWidth),Object.freeze(A),f.current&&!XR(c.current.lastBounds,A)&&a(c.current.lastBounds=A)};return[_,h?Hv(_,h):_,u?Hv(_,u):_]},[a,n,u,h]);function x(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(_=>_.removeEventListener("scroll",g,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function M(){var _;c.current.element&&(c.current.resizeObserver=new i(m),(_=c.current.resizeObserver)==null||_.observe(c.current.element),e&&c.current.scrollContainers&&c.current.scrollContainers.forEach(E=>E.addEventListener("scroll",g,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{g()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const y=_=>{!_||_===c.current.element||(x(),c.current.element=_,c.current.scrollContainers=Ly(_),M())};return GR(g,!!e),HR(m),_e.useEffect(()=>{x(),M()},[e,g,m]),_e.useEffect(()=>x,[]),[y,s,p]}function HR(r){_e.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function GR(r,e){_e.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function Ly(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...Ly(r.parentElement)]}const WR=["x","y","top","bottom","left","right","width","height"],XR=(r,e)=>WR.every(t=>r[t]===e[t]),jR=_e.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:a=RR,eventSource:c,eventPrefix:u,shadows:h,linear:f,flat:p,legacy:m,orthographic:g,frameloop:x,dpr:M,performance:y,raycaster:_,camera:E,scene:w,onPointerMissed:T,onCreated:L,...R},U){_e.useMemo(()=>my(jC),[]);const N=kR(),[C,A]=VR({scroll:!0,debounce:{scroll:50,resize:0},...n}),F=_e.useRef(null),q=_e.useRef(null);_e.useImperativeHandle(U,()=>F.current);const W=_y(T),[$,oe]=_e.useState(!1),[ee,ge]=_e.useState(!1);if($)throw $;if(ee)throw ee;const O=_e.useRef(null);Sl(()=>{const X=F.current;A.width>0&&A.height>0&&X&&(O.current||(O.current=AR(X)),O.current.configure({gl:s,events:a,shadows:h,linear:f,flat:p,legacy:m,orthographic:g,frameloop:x,dpr:M,performance:y,raycaster:_,camera:E,scene:w,size:A,onPointerMissed:(...Z)=>W.current==null?void 0:W.current(...Z),onCreated:Z=>{Z.events.connect==null||Z.events.connect(c?hR(c)?c.current:c:q.current),u&&Z.setEvents({compute:(fe,Ee)=>{const ne=fe[u+"X"],Se=fe[u+"Y"];Ee.pointer.set(ne/Ee.size.width*2-1,-(Se/Ee.size.height)*2+1),Ee.raycaster.setFromCamera(Ee.pointer,Ee.camera)}}),L==null||L(Z)}}),O.current.render(G.jsx(N,{children:G.jsx(xy,{set:ge,children:G.jsx(_e.Suspense,{fallback:G.jsx(fR,{set:oe}),children:e})})})))}),_e.useEffect(()=>{const X=F.current;if(X)return()=>Cy(X)},[]);const Y=c?"none":"auto";return G.jsx("div",{ref:q,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:Y,...i},...R,children:G.jsx("div",{ref:C,style:{width:"100%",height:"100%"},children:G.jsx("canvas",{ref:F,style:{display:"block"},children:t})})})}),Gh=_e.forwardRef(function(e,t){return G.jsx(Iy,{children:G.jsx(jR,{...e,ref:t})})});function ah(){return ah=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},ah.apply(null,arguments)}var qR=Object.defineProperty,YR=(r,e,t)=>e in r?qR(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,ZR=(r,e,t)=>(YR(r,e+"",t),t);class JR{constructor(){ZR(this,"_listeners")}addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,a=i.length;s<a;s++)i[s].call(this,e);e.target=null}}}var KR=Object.defineProperty,QR=(r,e,t)=>e in r?KR(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,ht=(r,e,t)=>(QR(r,typeof e!="symbol"?e+"":e,t),t);const fu=new Ys,Zv=new Yi,$R=Math.cos(70*(Math.PI/180)),Jv=(r,e)=>(r%e+e)%e;let eP=class extends JR{constructor(e,t){super(),ht(this,"object"),ht(this,"domElement"),ht(this,"enabled",!0),ht(this,"target",new I),ht(this,"minDistance",0),ht(this,"maxDistance",1/0),ht(this,"minZoom",0),ht(this,"maxZoom",1/0),ht(this,"minPolarAngle",0),ht(this,"maxPolarAngle",Math.PI),ht(this,"minAzimuthAngle",-1/0),ht(this,"maxAzimuthAngle",1/0),ht(this,"enableDamping",!1),ht(this,"dampingFactor",.05),ht(this,"enableZoom",!0),ht(this,"zoomSpeed",1),ht(this,"enableRotate",!0),ht(this,"rotateSpeed",1),ht(this,"enablePan",!0),ht(this,"panSpeed",1),ht(this,"screenSpacePanning",!0),ht(this,"keyPanSpeed",7),ht(this,"zoomToCursor",!1),ht(this,"autoRotate",!1),ht(this,"autoRotateSpeed",2),ht(this,"reverseOrbit",!1),ht(this,"reverseHorizontalOrbit",!1),ht(this,"reverseVerticalOrbit",!1),ht(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),ht(this,"mouseButtons",{LEFT:As.ROTATE,MIDDLE:As.DOLLY,RIGHT:As.PAN}),ht(this,"touches",{ONE:Cs.ROTATE,TWO:Cs.DOLLY_PAN}),ht(this,"target0"),ht(this,"position0"),ht(this,"zoom0"),ht(this,"_domElementKeyEvents",null),ht(this,"getPolarAngle"),ht(this,"getAzimuthalAngle"),ht(this,"setPolarAngle"),ht(this,"setAzimuthalAngle"),ht(this,"getDistance"),ht(this,"getZoomScale"),ht(this,"listenToKeyEvents"),ht(this,"stopListenToKeyEvents"),ht(this,"saveState"),ht(this,"reset"),ht(this,"update"),ht(this,"connect"),ht(this,"dispose"),ht(this,"dollyIn"),ht(this,"dollyOut"),ht(this,"getScale"),ht(this,"setScale"),this.object=e,this.domElement=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>f.phi,this.getAzimuthalAngle=()=>f.theta,this.setPolarAngle=H=>{let de=Jv(H,2*Math.PI),Be=f.phi;Be<0&&(Be+=2*Math.PI),de<0&&(de+=2*Math.PI);let V=Math.abs(de-Be);2*Math.PI-V<V&&(de<Be?de+=2*Math.PI:Be+=2*Math.PI),p.phi=de-Be,n.update()},this.setAzimuthalAngle=H=>{let de=Jv(H,2*Math.PI),Be=f.theta;Be<0&&(Be+=2*Math.PI),de<0&&(de+=2*Math.PI);let V=Math.abs(de-Be);2*Math.PI-V<V&&(de<Be?de+=2*Math.PI:Be+=2*Math.PI),p.theta=de-Be,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=H=>{H.addEventListener("keydown",Le),this._domElementKeyEvents=H},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",Le),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),u=c.NONE},this.update=(()=>{const H=new I,de=new I(0,1,0),Be=new pn().setFromUnitVectors(e.up,de),V=Be.clone().invert(),Ae=new I,ae=new pn,me=2*Math.PI;return function(){const Ne=n.object.position;Be.setFromUnitVectors(e.up,de),V.copy(Be).invert(),H.copy(Ne).sub(n.target),H.applyQuaternion(Be),f.setFromVector3(H),n.autoRotate&&u===c.NONE&&$(q()),n.enableDamping?(f.theta+=p.theta*n.dampingFactor,f.phi+=p.phi*n.dampingFactor):(f.theta+=p.theta,f.phi+=p.phi);let rt=n.minAzimuthAngle,Ut=n.maxAzimuthAngle;isFinite(rt)&&isFinite(Ut)&&(rt<-Math.PI?rt+=me:rt>Math.PI&&(rt-=me),Ut<-Math.PI?Ut+=me:Ut>Math.PI&&(Ut-=me),rt<=Ut?f.theta=Math.max(rt,Math.min(Ut,f.theta)):f.theta=f.theta>(rt+Ut)/2?Math.max(rt,f.theta):Math.min(Ut,f.theta)),f.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,f.phi)),f.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(g,n.dampingFactor):n.target.add(g),n.zoomToCursor&&C||n.object.isOrthographicCamera?f.radius=Ee(f.radius):f.radius=Ee(f.radius*m),H.setFromSpherical(f),H.applyQuaternion(V),Ne.copy(n.target).add(H),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(p.theta*=1-n.dampingFactor,p.phi*=1-n.dampingFactor,g.multiplyScalar(1-n.dampingFactor)):(p.set(0,0,0),g.set(0,0,0));let jt=!1;if(n.zoomToCursor&&C){let At=null;if(n.object instanceof en&&n.object.isPerspectiveCamera){const an=H.length();At=Ee(an*m);const Tn=an-At;n.object.position.addScaledVector(U,Tn),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const an=new I(N.x,N.y,0);an.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/m)),n.object.updateProjectionMatrix(),jt=!0;const Tn=new I(N.x,N.y,0);Tn.unproject(n.object),n.object.position.sub(Tn).add(an),n.object.updateMatrixWorld(),At=H.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;At!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(At).add(n.object.position):(fu.origin.copy(n.object.position),fu.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(fu.direction))<$R?e.lookAt(n.target):(Zv.setFromNormalAndCoplanarPoint(n.object.up,n.target),fu.intersectPlane(Zv,n.target))))}else n.object instanceof qr&&n.object.isOrthographicCamera&&(jt=m!==1,jt&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/m)),n.object.updateProjectionMatrix()));return m=1,C=!1,jt||Ae.distanceToSquared(n.object.position)>h||8*(1-ae.dot(n.object.quaternion))>h?(n.dispatchEvent(i),Ae.copy(n.object.position),ae.copy(n.object.quaternion),jt=!1,!0):!1}})(),this.connect=H=>{n.domElement=H,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",be),n.domElement.addEventListener("pointerdown",P),n.domElement.addEventListener("pointercancel",he),n.domElement.addEventListener("wheel",Ze)},this.dispose=()=>{var H,de,Be,V,Ae,ae;n.domElement&&(n.domElement.style.touchAction="auto"),(H=n.domElement)==null||H.removeEventListener("contextmenu",be),(de=n.domElement)==null||de.removeEventListener("pointerdown",P),(Be=n.domElement)==null||Be.removeEventListener("pointercancel",he),(V=n.domElement)==null||V.removeEventListener("wheel",Ze),(Ae=n.domElement)==null||Ae.ownerDocument.removeEventListener("pointermove",te),(ae=n.domElement)==null||ae.ownerDocument.removeEventListener("pointerup",he),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",Le)};const n=this,i={type:"change"},s={type:"start"},a={type:"end"},c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let u=c.NONE;const h=1e-6,f=new Mp,p=new Mp;let m=1;const g=new I,x=new ue,M=new ue,y=new ue,_=new ue,E=new ue,w=new ue,T=new ue,L=new ue,R=new ue,U=new I,N=new ue;let C=!1;const A=[],F={};function q(){return 2*Math.PI/60/60*n.autoRotateSpeed}function W(){return Math.pow(.95,n.zoomSpeed)}function $(H){n.reverseOrbit||n.reverseHorizontalOrbit?p.theta+=H:p.theta-=H}function oe(H){n.reverseOrbit||n.reverseVerticalOrbit?p.phi+=H:p.phi-=H}const ee=(()=>{const H=new I;return function(Be,V){H.setFromMatrixColumn(V,0),H.multiplyScalar(-Be),g.add(H)}})(),ge=(()=>{const H=new I;return function(Be,V){n.screenSpacePanning===!0?H.setFromMatrixColumn(V,1):(H.setFromMatrixColumn(V,0),H.crossVectors(n.object.up,H)),H.multiplyScalar(Be),g.add(H)}})(),O=(()=>{const H=new I;return function(Be,V){const Ae=n.domElement;if(Ae&&n.object instanceof en&&n.object.isPerspectiveCamera){const ae=n.object.position;H.copy(ae).sub(n.target);let me=H.length();me*=Math.tan(n.object.fov/2*Math.PI/180),ee(2*Be*me/Ae.clientHeight,n.object.matrix),ge(2*V*me/Ae.clientHeight,n.object.matrix)}else Ae&&n.object instanceof qr&&n.object.isOrthographicCamera?(ee(Be*(n.object.right-n.object.left)/n.object.zoom/Ae.clientWidth,n.object.matrix),ge(V*(n.object.top-n.object.bottom)/n.object.zoom/Ae.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function Y(H){n.object instanceof en&&n.object.isPerspectiveCamera||n.object instanceof qr&&n.object.isOrthographicCamera?m=H:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function X(H){Y(m/H)}function Z(H){Y(m*H)}function fe(H){if(!n.zoomToCursor||!n.domElement)return;C=!0;const de=n.domElement.getBoundingClientRect(),Be=H.clientX-de.left,V=H.clientY-de.top,Ae=de.width,ae=de.height;N.x=Be/Ae*2-1,N.y=-(V/ae)*2+1,U.set(N.x,N.y,1).unproject(n.object).sub(n.object.position).normalize()}function Ee(H){return Math.max(n.minDistance,Math.min(n.maxDistance,H))}function ne(H){x.set(H.clientX,H.clientY)}function Se(H){fe(H),T.set(H.clientX,H.clientY)}function Pe(H){_.set(H.clientX,H.clientY)}function Me(H){M.set(H.clientX,H.clientY),y.subVectors(M,x).multiplyScalar(n.rotateSpeed);const de=n.domElement;de&&($(2*Math.PI*y.x/de.clientHeight),oe(2*Math.PI*y.y/de.clientHeight)),x.copy(M),n.update()}function tt(H){L.set(H.clientX,H.clientY),R.subVectors(L,T),R.y>0?X(W()):R.y<0&&Z(W()),T.copy(L),n.update()}function lt(H){E.set(H.clientX,H.clientY),w.subVectors(E,_).multiplyScalar(n.panSpeed),O(w.x,w.y),_.copy(E),n.update()}function it(H){fe(H),H.deltaY<0?Z(W()):H.deltaY>0&&X(W()),n.update()}function pt(H){let de=!1;switch(H.code){case n.keys.UP:O(0,n.keyPanSpeed),de=!0;break;case n.keys.BOTTOM:O(0,-n.keyPanSpeed),de=!0;break;case n.keys.LEFT:O(n.keyPanSpeed,0),de=!0;break;case n.keys.RIGHT:O(-n.keyPanSpeed,0),de=!0;break}de&&(H.preventDefault(),n.update())}function ve(){if(A.length==1)x.set(A[0].pageX,A[0].pageY);else{const H=.5*(A[0].pageX+A[1].pageX),de=.5*(A[0].pageY+A[1].pageY);x.set(H,de)}}function ye(){if(A.length==1)_.set(A[0].pageX,A[0].pageY);else{const H=.5*(A[0].pageX+A[1].pageX),de=.5*(A[0].pageY+A[1].pageY);_.set(H,de)}}function z(){const H=A[0].pageX-A[1].pageX,de=A[0].pageY-A[1].pageY,Be=Math.sqrt(H*H+de*de);T.set(0,Be)}function Je(){n.enableZoom&&z(),n.enablePan&&ye()}function we(){n.enableZoom&&z(),n.enableRotate&&ve()}function He(H){if(A.length==1)M.set(H.pageX,H.pageY);else{const Be=We(H),V=.5*(H.pageX+Be.x),Ae=.5*(H.pageY+Be.y);M.set(V,Ae)}y.subVectors(M,x).multiplyScalar(n.rotateSpeed);const de=n.domElement;de&&($(2*Math.PI*y.x/de.clientHeight),oe(2*Math.PI*y.y/de.clientHeight)),x.copy(M)}function Ce(H){if(A.length==1)E.set(H.pageX,H.pageY);else{const de=We(H),Be=.5*(H.pageX+de.x),V=.5*(H.pageY+de.y);E.set(Be,V)}w.subVectors(E,_).multiplyScalar(n.panSpeed),O(w.x,w.y),_.copy(E)}function st(H){const de=We(H),Be=H.pageX-de.x,V=H.pageY-de.y,Ae=Math.sqrt(Be*Be+V*V);L.set(0,Ae),R.set(0,Math.pow(L.y/T.y,n.zoomSpeed)),X(R.y),T.copy(L)}function De(H){n.enableZoom&&st(H),n.enablePan&&Ce(H)}function B(H){n.enableZoom&&st(H),n.enableRotate&&He(H)}function P(H){var de,Be;n.enabled!==!1&&(A.length===0&&((de=n.domElement)==null||de.ownerDocument.addEventListener("pointermove",te),(Be=n.domElement)==null||Be.ownerDocument.addEventListener("pointerup",he)),Xe(H),H.pointerType==="touch"?Ge(H):xe(H))}function te(H){n.enabled!==!1&&(H.pointerType==="touch"?Mt(H):pe(H))}function he(H){var de,Be,V;ot(H),A.length===0&&((de=n.domElement)==null||de.releasePointerCapture(H.pointerId),(Be=n.domElement)==null||Be.ownerDocument.removeEventListener("pointermove",te),(V=n.domElement)==null||V.ownerDocument.removeEventListener("pointerup",he)),n.dispatchEvent(a),u=c.NONE}function xe(H){let de;switch(H.button){case 0:de=n.mouseButtons.LEFT;break;case 1:de=n.mouseButtons.MIDDLE;break;case 2:de=n.mouseButtons.RIGHT;break;default:de=-1}switch(de){case As.DOLLY:if(n.enableZoom===!1)return;Se(H),u=c.DOLLY;break;case As.ROTATE:if(H.ctrlKey||H.metaKey||H.shiftKey){if(n.enablePan===!1)return;Pe(H),u=c.PAN}else{if(n.enableRotate===!1)return;ne(H),u=c.ROTATE}break;case As.PAN:if(H.ctrlKey||H.metaKey||H.shiftKey){if(n.enableRotate===!1)return;ne(H),u=c.ROTATE}else{if(n.enablePan===!1)return;Pe(H),u=c.PAN}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(s)}function pe(H){if(n.enabled!==!1)switch(u){case c.ROTATE:if(n.enableRotate===!1)return;Me(H);break;case c.DOLLY:if(n.enableZoom===!1)return;tt(H);break;case c.PAN:if(n.enablePan===!1)return;lt(H);break}}function Ze(H){n.enabled===!1||n.enableZoom===!1||u!==c.NONE&&u!==c.ROTATE||(H.preventDefault(),n.dispatchEvent(s),it(H),n.dispatchEvent(a))}function Le(H){n.enabled===!1||n.enablePan===!1||pt(H)}function Ge(H){switch(dt(H),A.length){case 1:switch(n.touches.ONE){case Cs.ROTATE:if(n.enableRotate===!1)return;ve(),u=c.TOUCH_ROTATE;break;case Cs.PAN:if(n.enablePan===!1)return;ye(),u=c.TOUCH_PAN;break;default:u=c.NONE}break;case 2:switch(n.touches.TWO){case Cs.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Je(),u=c.TOUCH_DOLLY_PAN;break;case Cs.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;we(),u=c.TOUCH_DOLLY_ROTATE;break;default:u=c.NONE}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(s)}function Mt(H){switch(dt(H),u){case c.TOUCH_ROTATE:if(n.enableRotate===!1)return;He(H),n.update();break;case c.TOUCH_PAN:if(n.enablePan===!1)return;Ce(H),n.update();break;case c.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;De(H),n.update();break;case c.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;B(H),n.update();break;default:u=c.NONE}}function be(H){n.enabled!==!1&&H.preventDefault()}function Xe(H){A.push(H)}function ot(H){delete F[H.pointerId];for(let de=0;de<A.length;de++)if(A[de].pointerId==H.pointerId){A.splice(de,1);return}}function dt(H){let de=F[H.pointerId];de===void 0&&(de=new ue,F[H.pointerId]=de),de.set(H.pageX,H.pageY)}function We(H){const de=H.pointerId===A[0].pointerId?A[1]:A[0];return F[de.pointerId]}this.dollyIn=(H=W())=>{Z(H),n.update()},this.dollyOut=(H=W())=>{X(H),n.update()},this.getScale=()=>m,this.setScale=H=>{Y(H),n.update()},this.getZoomScale=()=>W(),t!==void 0&&this.connect(t),this.update()}};const tP=()=>parseInt(ll.replace(/\D+/g,"")),nP=tP(),pm=_e.forwardRef(({makeDefault:r,camera:e,regress:t,domElement:n,enableDamping:i=!0,keyEvents:s=!1,onChange:a,onStart:c,onEnd:u,...h},f)=>{const p=Ei(R=>R.invalidate),m=Ei(R=>R.camera),g=Ei(R=>R.gl),x=Ei(R=>R.events),M=Ei(R=>R.setEvents),y=Ei(R=>R.set),_=Ei(R=>R.get),E=Ei(R=>R.performance),w=e||m,T=n||x.connected||g.domElement,L=_e.useMemo(()=>new eP(w),[w]);return ns(()=>{L.enabled&&L.update()},-1),_e.useEffect(()=>(s&&L.connect(s===!0?T:s),L.connect(T),()=>void L.dispose()),[s,T,t,L,p]),_e.useEffect(()=>{const R=C=>{p(),t&&E.regress(),a&&a(C)},U=C=>{c&&c(C)},N=C=>{u&&u(C)};return L.addEventListener("change",R),L.addEventListener("start",U),L.addEventListener("end",N),()=>{L.removeEventListener("start",U),L.removeEventListener("end",N),L.removeEventListener("change",R)}},[a,c,u,L,p,M]),_e.useEffect(()=>{if(r){const R=_().controls;return y({controls:L}),()=>y({controls:R})}},[r,L]),_e.createElement("primitive",ah({ref:f,object:L,enableDamping:i},h))});class iP extends ii{constructor(e=new ue){super({uniforms:{inputBuffer:new Dn(null),depthBuffer:new Dn(null),resolution:new Dn(new ue),texelSize:new Dn(new ue),halfTexelSize:new Dn(new ue),kernel:new Dn(0),scale:new Dn(1),cameraNear:new Dn(0),cameraFar:new Dn(1),minDepthThreshold:new Dn(0),maxDepthThreshold:new Dn(1),depthScale:new Dn(0),depthToBlurRatioBias:new Dn(.25)},fragmentShader:`#include <common>
        #include <dithering_pars_fragment>      
        uniform sampler2D inputBuffer;
        uniform sampler2D depthBuffer;
        uniform float cameraNear;
        uniform float cameraFar;
        uniform float minDepthThreshold;
        uniform float maxDepthThreshold;
        uniform float depthScale;
        uniform float depthToBlurRatioBias;
        varying vec2 vUv;
        varying vec2 vUv0;
        varying vec2 vUv1;
        varying vec2 vUv2;
        varying vec2 vUv3;

        void main() {
          float depthFactor = 0.0;
          
          #ifdef USE_DEPTH
            vec4 depth = texture2D(depthBuffer, vUv);
            depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));
            depthFactor *= depthScale;
            depthFactor = max(0.0, min(1.0, depthFactor + 0.25));
          #endif
          
          vec4 sum = texture2D(inputBuffer, mix(vUv0, vUv, depthFactor));
          sum += texture2D(inputBuffer, mix(vUv1, vUv, depthFactor));
          sum += texture2D(inputBuffer, mix(vUv2, vUv, depthFactor));
          sum += texture2D(inputBuffer, mix(vUv3, vUv, depthFactor));
          gl_FragColor = sum * 0.25 ;

          #include <dithering_fragment>
          #include <tonemapping_fragment>
          #include <${nP>=154?"colorspace_fragment":"encodings_fragment"}>
        }`,vertexShader:`uniform vec2 texelSize;
        uniform vec2 halfTexelSize;
        uniform float kernel;
        uniform float scale;
        varying vec2 vUv;
        varying vec2 vUv0;
        varying vec2 vUv1;
        varying vec2 vUv2;
        varying vec2 vUv3;

        void main() {
          vec2 uv = position.xy * 0.5 + 0.5;
          vUv = uv;

          vec2 dUv = (texelSize * vec2(kernel) + halfTexelSize) * scale;
          vUv0 = vec2(uv.x - dUv.x, uv.y + dUv.y);
          vUv1 = vec2(uv.x + dUv.x, uv.y + dUv.y);
          vUv2 = vec2(uv.x + dUv.x, uv.y - dUv.y);
          vUv3 = vec2(uv.x - dUv.x, uv.y - dUv.y);

          gl_Position = vec4(position.xy, 1.0, 1.0);
        }`,blending:Ji,depthWrite:!1,depthTest:!1}),this.toneMapped=!1,this.setTexelSize(e.x,e.y),this.kernel=new Float32Array([0,1,2,2,3])}setTexelSize(e,t){this.uniforms.texelSize.value.set(e,t),this.uniforms.halfTexelSize.value.set(e,t).multiplyScalar(.5)}setResolution(e){this.uniforms.resolution.value.copy(e)}}class rP{constructor({gl:e,resolution:t,width:n=500,height:i=500,minDepthThreshold:s=0,maxDepthThreshold:a=1,depthScale:c=0,depthToBlurRatioBias:u=.25}){this.renderToScreen=!1,this.renderTargetA=new di(t,t,{minFilter:Kt,magFilter:Kt,stencilBuffer:!1,depthBuffer:!1,type:Jr}),this.renderTargetB=this.renderTargetA.clone(),this.convolutionMaterial=new iP,this.convolutionMaterial.setTexelSize(1/n,1/i),this.convolutionMaterial.setResolution(new ue(n,i)),this.scene=new Mh,this.camera=new qo,this.convolutionMaterial.uniforms.minDepthThreshold.value=s,this.convolutionMaterial.uniforms.maxDepthThreshold.value=a,this.convolutionMaterial.uniforms.depthScale.value=c,this.convolutionMaterial.uniforms.depthToBlurRatioBias.value=u,this.convolutionMaterial.defines.USE_DEPTH=c>0;const h=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),f=new Float32Array([0,0,2,0,0,2]),p=new yt;p.setAttribute("position",new Ht(h,3)),p.setAttribute("uv",new Ht(f,2)),this.screen=new sn(p,this.convolutionMaterial),this.screen.frustumCulled=!1,this.scene.add(this.screen)}render(e,t,n){const i=this.scene,s=this.camera,a=this.renderTargetA,c=this.renderTargetB;let u=this.convolutionMaterial,h=u.uniforms;h.depthBuffer.value=t.depthTexture;const f=u.kernel;let p=t,m,g,x;for(g=0,x=f.length-1;g<x;++g)m=g&1?c:a,h.kernel.value=f[g],h.inputBuffer.value=p.texture,e.setRenderTarget(m),e.render(i,s),p=m;h.kernel.value=f[g],h.inputBuffer.value=p.texture,e.setRenderTarget(this.renderToScreen?null:n),e.render(i,s)}}let sP=class extends kh{constructor(e={}){super(e),this._tDepth={value:null},this._distortionMap={value:null},this._tDiffuse={value:null},this._tDiffuseBlur={value:null},this._textureMatrix={value:null},this._hasBlur={value:!1},this._mirror={value:0},this._mixBlur={value:0},this._blurStrength={value:.5},this._minDepthThreshold={value:.9},this._maxDepthThreshold={value:1},this._depthScale={value:0},this._depthToBlurRatioBias={value:.25},this._distortion={value:1},this._mixContrast={value:1},this.setValues(e)}onBeforeCompile(e){var t;(t=e.defines)!=null&&t.USE_UV||(e.defines.USE_UV=""),e.uniforms.hasBlur=this._hasBlur,e.uniforms.tDiffuse=this._tDiffuse,e.uniforms.tDepth=this._tDepth,e.uniforms.distortionMap=this._distortionMap,e.uniforms.tDiffuseBlur=this._tDiffuseBlur,e.uniforms.textureMatrix=this._textureMatrix,e.uniforms.mirror=this._mirror,e.uniforms.mixBlur=this._mixBlur,e.uniforms.mixStrength=this._blurStrength,e.uniforms.minDepthThreshold=this._minDepthThreshold,e.uniforms.maxDepthThreshold=this._maxDepthThreshold,e.uniforms.depthScale=this._depthScale,e.uniforms.depthToBlurRatioBias=this._depthToBlurRatioBias,e.uniforms.distortion=this._distortion,e.uniforms.mixContrast=this._mixContrast,e.vertexShader=`
        uniform mat4 textureMatrix;
        varying vec4 my_vUv;
      ${e.vertexShader}`,e.vertexShader=e.vertexShader.replace("#include <project_vertex>",`#include <project_vertex>
        my_vUv = textureMatrix * vec4( position, 1.0 );
        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );`),e.fragmentShader=`
        uniform sampler2D tDiffuse;
        uniform sampler2D tDiffuseBlur;
        uniform sampler2D tDepth;
        uniform sampler2D distortionMap;
        uniform float distortion;
        uniform float cameraNear;
			  uniform float cameraFar;
        uniform bool hasBlur;
        uniform float mixBlur;
        uniform float mirror;
        uniform float mixStrength;
        uniform float minDepthThreshold;
        uniform float maxDepthThreshold;
        uniform float mixContrast;
        uniform float depthScale;
        uniform float depthToBlurRatioBias;
        varying vec4 my_vUv;
        ${e.fragmentShader}`,e.fragmentShader=e.fragmentShader.replace("#include <emissivemap_fragment>",`#include <emissivemap_fragment>

      float distortionFactor = 0.0;
      #ifdef USE_DISTORTION
        distortionFactor = texture2D(distortionMap, vUv).r * distortion;
      #endif

      vec4 new_vUv = my_vUv;
      new_vUv.x += distortionFactor;
      new_vUv.y += distortionFactor;

      vec4 base = texture2DProj(tDiffuse, new_vUv);
      vec4 blur = texture2DProj(tDiffuseBlur, new_vUv);

      vec4 merge = base;

      #ifdef USE_NORMALMAP
        vec2 normal_uv = vec2(0.0);
        vec4 normalColor = texture2D(normalMap, vUv * normalScale);
        vec3 my_normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );
        vec3 coord = new_vUv.xyz / new_vUv.w;
        normal_uv = coord.xy + coord.z * my_normal.xz * 0.05;
        vec4 base_normal = texture2D(tDiffuse, normal_uv);
        vec4 blur_normal = texture2D(tDiffuseBlur, normal_uv);
        merge = base_normal;
        blur = blur_normal;
      #endif

      float depthFactor = 0.0001;
      float blurFactor = 0.0;

      #ifdef USE_DEPTH
        vec4 depth = texture2DProj(tDepth, new_vUv);
        depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));
        depthFactor *= depthScale;
        depthFactor = max(0.0001, min(1.0, depthFactor));

        #ifdef USE_BLUR
          blur = blur * min(1.0, depthFactor + depthToBlurRatioBias);
          merge = merge * min(1.0, depthFactor + 0.5);
        #else
          merge = merge * depthFactor;
        #endif

      #endif

      float reflectorRoughnessFactor = roughness;
      #ifdef USE_ROUGHNESSMAP
        vec4 reflectorTexelRoughness = texture2D( roughnessMap, vUv );
        reflectorRoughnessFactor *= reflectorTexelRoughness.g;
      #endif

      #ifdef USE_BLUR
        blurFactor = min(1.0, mixBlur * reflectorRoughnessFactor);
        merge = mix(merge, blur, blurFactor);
      #endif

      vec4 newMerge = vec4(0.0, 0.0, 0.0, 1.0);
      newMerge.r = (merge.r - 0.5) * mixContrast + 0.5;
      newMerge.g = (merge.g - 0.5) * mixContrast + 0.5;
      newMerge.b = (merge.b - 0.5) * mixContrast + 0.5;

      diffuseColor.rgb = diffuseColor.rgb * ((1.0 - min(1.0, mirror)) + newMerge.rgb * mixStrength);
      `)}get tDiffuse(){return this._tDiffuse.value}set tDiffuse(e){this._tDiffuse.value=e}get tDepth(){return this._tDepth.value}set tDepth(e){this._tDepth.value=e}get distortionMap(){return this._distortionMap.value}set distortionMap(e){this._distortionMap.value=e}get tDiffuseBlur(){return this._tDiffuseBlur.value}set tDiffuseBlur(e){this._tDiffuseBlur.value=e}get textureMatrix(){return this._textureMatrix.value}set textureMatrix(e){this._textureMatrix.value=e}get hasBlur(){return this._hasBlur.value}set hasBlur(e){this._hasBlur.value=e}get mirror(){return this._mirror.value}set mirror(e){this._mirror.value=e}get mixBlur(){return this._mixBlur.value}set mixBlur(e){this._mixBlur.value=e}get mixStrength(){return this._blurStrength.value}set mixStrength(e){this._blurStrength.value=e}get minDepthThreshold(){return this._minDepthThreshold.value}set minDepthThreshold(e){this._minDepthThreshold.value=e}get maxDepthThreshold(){return this._maxDepthThreshold.value}set maxDepthThreshold(e){this._maxDepthThreshold.value=e}get depthScale(){return this._depthScale.value}set depthScale(e){this._depthScale.value=e}get depthToBlurRatioBias(){return this._depthToBlurRatioBias.value}set depthToBlurRatioBias(e){this._depthToBlurRatioBias.value=e}get distortion(){return this._distortion.value}set distortion(e){this._distortion.value=e}get mixContrast(){return this._mixContrast.value}set mixContrast(e){this._mixContrast.value=e}};const oP=_e.forwardRef(({mixBlur:r=0,mixStrength:e=1,resolution:t=256,blur:n=[0,0],minDepthThreshold:i=.9,maxDepthThreshold:s=1,depthScale:a=0,depthToBlurRatioBias:c=.25,mirror:u=0,distortion:h=1,mixContrast:f=1,distortionMap:p,reflectorOffset:m=0,...g},x)=>{my({MeshReflectorMaterialImpl:sP});const M=Ei(({gl:Z})=>Z),y=Ei(({camera:Z})=>Z),_=Ei(({scene:Z})=>Z);n=Array.isArray(n)?n:[n,n];const E=n[0]+n[1]>0,w=_e.useRef(null);_e.useImperativeHandle(x,()=>w.current,[]);const[T]=_e.useState(()=>new Yi),[L]=_e.useState(()=>new I),[R]=_e.useState(()=>new I),[U]=_e.useState(()=>new I),[N]=_e.useState(()=>new ft),[C]=_e.useState(()=>new I(0,0,-1)),[A]=_e.useState(()=>new Dt),[F]=_e.useState(()=>new I),[q]=_e.useState(()=>new I),[W]=_e.useState(()=>new Dt),[$]=_e.useState(()=>new ft),[oe]=_e.useState(()=>new en),ee=_e.useCallback(()=>{var Z;const fe=w.current.parent||((Z=w.current)==null?void 0:Z.__r3f.parent);if(!fe||(R.setFromMatrixPosition(fe.matrixWorld),U.setFromMatrixPosition(y.matrixWorld),N.extractRotation(fe.matrixWorld),L.set(0,0,1),L.applyMatrix4(N),R.addScaledVector(L,m),F.subVectors(R,U),F.dot(L)>0))return;F.reflect(L).negate(),F.add(R),N.extractRotation(y.matrixWorld),C.set(0,0,-1),C.applyMatrix4(N),C.add(U),q.subVectors(R,C),q.reflect(L).negate(),q.add(R),oe.position.copy(F),oe.up.set(0,1,0),oe.up.applyMatrix4(N),oe.up.reflect(L),oe.lookAt(q),oe.far=y.far,oe.updateMatrixWorld(),oe.projectionMatrix.copy(y.projectionMatrix),$.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),$.multiply(oe.projectionMatrix),$.multiply(oe.matrixWorldInverse),$.multiply(fe.matrixWorld),T.setFromNormalAndCoplanarPoint(L,R),T.applyMatrix4(oe.matrixWorldInverse),A.set(T.normal.x,T.normal.y,T.normal.z,T.constant);const Ee=oe.projectionMatrix;W.x=(Math.sign(A.x)+Ee.elements[8])/Ee.elements[0],W.y=(Math.sign(A.y)+Ee.elements[9])/Ee.elements[5],W.z=-1,W.w=(1+Ee.elements[10])/Ee.elements[14],A.multiplyScalar(2/A.dot(W)),Ee.elements[2]=A.x,Ee.elements[6]=A.y,Ee.elements[10]=A.z+1,Ee.elements[14]=A.w},[y,m]),[ge,O,Y,X]=_e.useMemo(()=>{const Z={minFilter:Kt,magFilter:Kt,type:Jr},fe=new di(t,t,Z);fe.depthBuffer=!0,fe.depthTexture=new bh(t,t),fe.depthTexture.format=jr,fe.depthTexture.type=Hs;const Ee=new di(t,t,Z),ne=new rP({gl:M,resolution:t,width:n[0],height:n[1],minDepthThreshold:i,maxDepthThreshold:s,depthScale:a,depthToBlurRatioBias:c}),Se={mirror:u,textureMatrix:$,mixBlur:r,tDiffuse:fe.texture,tDepth:fe.depthTexture,tDiffuseBlur:Ee.texture,hasBlur:E,mixStrength:e,minDepthThreshold:i,maxDepthThreshold:s,depthScale:a,depthToBlurRatioBias:c,distortion:h,distortionMap:p,mixContrast:f,"defines-USE_BLUR":E?"":void 0,"defines-USE_DEPTH":a>0?"":void 0,"defines-USE_DISTORTION":p?"":void 0};return[fe,Ee,ne,Se]},[M,n,$,t,u,E,r,e,i,s,a,c,h,p,f]);return ns(()=>{var Z;const fe=w.current.parent||((Z=w.current)==null?void 0:Z.__r3f.parent);if(!fe)return;fe.visible=!1;const Ee=M.xr.enabled,ne=M.shadowMap.autoUpdate;ee(),M.xr.enabled=!1,M.shadowMap.autoUpdate=!1,M.setRenderTarget(ge),M.state.buffers.depth.setMask(!0),M.autoClear||M.clear(),M.render(_,oe),E&&Y.render(M,ge,O),M.xr.enabled=Ee,M.shadowMap.autoUpdate=ne,fe.visible=!0,M.setRenderTarget(null)}),_e.createElement("meshReflectorMaterialImpl",ah({attach:"material",key:"key"+X["defines-USE_BLUR"]+X["defines-USE_DEPTH"]+X["defines-USE_DISTORTION"],ref:w},X,g))}),aP=r=>{const e=[],t=[];for(let n=0;n<r;n++)e.push(new I(-100,-100,-100)),t.push(0);return{mouseClicksArray:e,clickMagnitudesArray:t}},Dy=({render:r=!0})=>{const e=_e.useRef(null),t=_e.useRef(null),n=_e.useRef(null),[i,s]=En(Fn,["/water/pattern-1-optimized.jpg","/water/pattern-2-optimized.jpg"]),a=80,{mouseClicksArray:c,clickMagnitudesArray:u}=aP(80),h=200,f={numberOfWaves:{value:a},texture1Resolution:{value:new ue(2034,2106)},texture2Resolution:{value:new ue(2034,2106)},time:{value:1},texture1:{value:i},texture2:{value:s},clickMagnitudes:{value:u},mouseClicks:{value:c}};let p=0,m=new Date().getTime();const g=125,x={vertexShader:`
      uniform int numberOfWaves;
      uniform vec3 mouseClicks[80];
      uniform float clickMagnitudes[80];
      uniform float time;
      varying vec2 vUv;
      varying float positionDiff;
  
      void main() {
        vUv = uv;
        vec3 clickPositionModifier = vec3(0.0, 0.0, 0.0);
        positionDiff = 0.0;

        for (int i = 0; i < numberOfWaves; i++) {
          if(clickMagnitudes[i] >= 0.0) {
            float distanceFromMouseClick = distance(position, mouseClicks[i]);

            float waveWidth = 1.0;  // Width of a single wave crest
            float damping = 2.5;  // Damping factor to smooth out the ripples

            float normalizedDistance = (distanceFromMouseClick - clickMagnitudes[i]) / waveWidth;

            if(abs(normalizedDistance) <= waveWidth) {
              float waveAmplitude = (10.0 - clickMagnitudes[i]) * 0.125;
              float decay = exp(-damping * abs(normalizedDistance));
              clickPositionModifier.z += sin(3.141592 * normalizedDistance) * waveAmplitude * decay;
              positionDiff += clickPositionModifier.z;
            }
          }
        }
        vec3 finalPos = vec3(0.0, 0.0, 0.0);
        finalPos.x = sin(position.y * 0.5 + time) * .25;
        finalPos.y = sin(position.z * 0.5 + time) * .15;
        finalPos.z = sin(position.x * 0.5 + time) * .25;

        gl_Position = projectionMatrix * modelViewMatrix * vec4(position + finalPos + clickPositionModifier, 1.0);
      }
    `,fragmentShader:`
      uniform float time;
      uniform sampler2D texture1;
      uniform sampler2D texture2;
      varying vec2 vUv;
      varying float positionDiff;
      void main() {
        float angleRadians = radians((positionDiff * .0125) * 360.0);
        vec2 uv = vUv - vec2(0.5, 0.5);
        mat2 rotation = mat2(
          cos(angleRadians), -sin(angleRadians),
          sin(angleRadians), cos(angleRadians)
        );
        uv = rotation * uv + vec2(0.5, 0.5);
        vec4 color1 = texture2D(texture1, uv);
        vec4 color2 = texture2D(texture2, uv);
        vec4 mixColor = mix(color2, color1, abs(sin(time/6.0)));
        
        float distanceColor = (distance(vUv, vec2( 0.5, 0.5)) * 2.0);
        if(distanceColor > .5) {
          mixColor = vec4( mixColor.rgb, ( (1.0 - distanceColor) - ((distanceColor - .95) * 10.0) ));
        }

        float saturation = 2.25;
        float avg = (mixColor.r + mixColor.g + mixColor.b) / 3.0;
        vec3 gray = vec3(avg, avg, avg);
        gl_FragColor = vec4(mix(gray, mixColor.rgb, saturation), mixColor.a);
      }
    `};_e.useEffect(()=>{const w=setInterval(()=>{f.mouseClicks.value[p%a]=new I(Math.random()*60-30,Math.random()*60-30,0),f.clickMagnitudes.value[p%a]=.1,p++},g);return()=>{clearInterval(w)}},[]);const M=new Yt(0,0,0);ns(({clock:w})=>{if(r!==!1){if(e.current){e.current.uniforms.time.value=w.getElapsedTime();for(let T=0;T<e.current.uniforms.clickMagnitudes.value.length;T++)e.current.uniforms.clickMagnitudes.value[T]>0&&(e.current.uniforms.clickMagnitudes.value[T]+=.05),e.current.uniforms.clickMagnitudes.value[T]>10&&(e.current.uniforms.clickMagnitudes.value[T]=-10)}t.current&&n.current&&(t.current.rotation.z+=.001,n.current.rotation.z+=.001)}});const y=w=>{if(w.intersections.length>0){const T=w.intersections[0];f.mouseClicks.value[p%a]=T.object.worldToLocal(T.point),f.clickMagnitudes.value[p%a]=.1,p++}},_=w=>{new Date().getTime()-m<h||(y(w),m=new Date().getTime())},E=w=>{new Date().getTime()-m<h||w.buttons>0&&(y(w),m=new Date().getTime())};return G.jsxs(G.Fragment,{children:[G.jsxs("mesh",{ref:t,position:[0,0,0],rotation:M,children:[G.jsx("planeGeometry",{args:[60,60,500,500]}),G.jsx("shaderMaterial",{ref:e,attach:"material",uniforms:f,fragmentShader:x.fragmentShader,vertexShader:x.vertexShader,side:Vt,transparent:!0,alphaTest:.5})]}),G.jsxs("mesh",{ref:n,rotation:M,visible:!1,onPointerDown:w=>{_(w)},onPointerMove:w=>{E(w)},position:[0,0,0],children:[G.jsx("planeGeometry",{args:[60,60,1,1]}),G.jsx("meshStandardMaterial",{color:new Ie(16711680),transparent:!0,opacity:.5})]})]})},lP=({classNames:r=""})=>G.jsxs(Gh,{camera:{position:new I(0,0,15)},className:r,children:[G.jsx(Dy,{render:r===""}),G.jsx(pm,{enableDamping:!0,dampingFactor:.05,screenSpacePanning:!1,zoomSpeed:.1,panSpeed:.1,rotateSpeed:.1})]});Dy.__docgenInfo={description:"",methods:[],displayName:"WaterShader",props:{render:{defaultValue:{value:"true",computed:!1},required:!1}}};lP.__docgenInfo={description:"",methods:[],displayName:"WaterShaderCanvas",props:{classNames:{defaultValue:{value:"''",computed:!1},required:!1}}};const Uy=new Ie(16777215),Ny=new Ie(15924222),cP=new dl(Ny,5,50),Fy=({count:r=1e4,scale:e=100})=>{const t=_e.useRef(null),n=_e.useMemo(()=>{const i=new Float32Array(r*3);for(let s=0;s<r;s++)i[s*3]=Math.random()*e-Math.random()*e,i[s*3+1]=Math.random()*20,i[s*3+2]=Math.random()*e-Math.random()*e;return i},[r,e]);return ns(()=>{if(t.current){const i=t.current.array;for(let s=0;s<r;s++)i[s*3+1]<0?i[s*3+1]=20:i[s*3+1]-=.05;t.current.needsUpdate=!0}}),G.jsxs("points",{children:[G.jsx("bufferGeometry",{attach:"geometry",children:G.jsx("bufferAttribute",{ref:t,attach:"attributes-position",array:n,count:r,itemSize:3})}),G.jsx("pointsMaterial",{attach:"material",color:Uy,size:.25,sizeAttenuation:!0})]})};Fy.__docgenInfo={description:"",methods:[],displayName:"Snowflakes",props:{count:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"10000",computed:!1}},scale:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"100",computed:!1}}}};const Oy=()=>{const r=En(Fn,"./sprites/ground.png");r.magFilter=on,r.minFilter=on;const e=100;return G.jsxs("mesh",{position:[0,r.image.height/400/2,0],rotation:[Math.PI/2,0,Math.PI/2],children:[G.jsx("planeGeometry",{args:[e,e,e,e]}),G.jsx("meshBasicMaterial",{color:Uy,side:Vt,map:r})]})};Oy.__docgenInfo={description:"",methods:[],displayName:"SnowGroundPlane"};const uP=["sprites/tree-000.png","sprites/tree-001.png","sprites/tree-002.png","sprites/tree-003.png","sprites/tree-004.png","sprites/tree-005.png","sprites/tree-006.png","sprites/tree-007.png","sprites/tree-008.png","sprites/tree-009.png","sprites/tree-010.png","sprites/tree-011.png","sprites/tree-012.png","sprites/tree-013.png","sprites/tree-014.png","sprites/tree-015.png","sprites/tree-016.png","sprites/tree-017.png","sprites/tree-018.png","sprites/tree-019.png","sprites/tree-020.png","sprites/tree-021.png","sprites/tree-022.png","sprites/tree-023.png","sprites/tree-024.png","sprites/tree-025.png","sprites/tree-026.png","sprites/tree-027.png","sprites/tree-028.png","sprites/tree-029.png","sprites/tree-030.png","sprites/tree-031.png","sprites/tree-032.png","sprites/tree-033.png","sprites/tree-034.png","sprites/tree-035.png","sprites/tree-036.png","sprites/tree-037.png","sprites/tree-038.png","sprites/tree-039.png","sprites/tree-040.png","sprites/tree-041.png","sprites/tree-042.png","sprites/tree-043.png"],By=()=>{let r=[];const n=_e.useMemo(()=>uP,[]),i=En(Fn,n);if(r.length===0){const s=new Pt;r=i.map(c=>{c.magFilter=on,c.minFilter=on;const u=new es(1,1),h=new er({side:Vt,map:c,transparent:!0,alphaTest:.5}),f=25+Math.round(Math.random()*75),p=new Yo(u,h,f);for(let m=0;m<f;m++){const g=.5+Math.random()*2,x=.5+Math.random()*2;s.position.set(Math.random()*50-Math.random()*50,0,Math.random()*50-Math.random()*50),s.position.y=c.image.height/400*x/2+.05,s.rotation.y=Math.random()*2*Math.PI,s.scale.set(c.image.width/400*g,c.image.height/400*x,1),s.updateMatrix(),p.setMatrixAt(m,s.matrix)}return p})}return G.jsx(G.Fragment,{children:r.map((s,a)=>G.jsx("primitive",{object:s},a))})},hP=({sceneFog:r=cP,backgroundColor:e=Ny,classNames:t=""})=>G.jsxs(Gh,{camera:{position:new I(25,10,0)},gl:{antialias:!0,toneMapping:bi},linear:!0,scene:{fog:r,background:e},className:t,children:[G.jsx(Fy,{}),G.jsx(Oy,{}),G.jsx(By,{}),G.jsx(pm,{enableDamping:!0,dampingFactor:.05,screenSpacePanning:!1,autoRotate:!0,autoRotateSpeed:.5,zoomSpeed:.1,panSpeed:.1,rotateSpeed:.1})]});By.__docgenInfo={description:"",methods:[],displayName:"SnowShader"};hP.__docgenInfo={description:"",methods:[],displayName:"SnowShaderCanvas",props:{sceneFog:{defaultValue:{value:"new Fog(defaultFogColor, 5, 50)",computed:!1},required:!1},backgroundColor:{defaultValue:{value:"new Color(0xf2fbfe)",computed:!1},required:!1},classNames:{defaultValue:{value:"''",computed:!1},required:!1}}};const fP=new Ie(0),is=new Ie(16777215),Kv=new Ie(16438909),dP=new Ie(3932786),Qv=()=>{const r=En(Fn,"/rome/wall-0-50-compressed.png");return G.jsx("meshStandardMaterial",{color:is,map:r,transparent:!0,alphaTest:.5,side:Vt})},$v=()=>{const r=En(Fn,"/rome/wall-1-50-compressed.png");return G.jsx("meshStandardMaterial",{color:is,map:r,transparent:!0,alphaTest:.5,side:Vt})},zy=()=>G.jsxs(G.Fragment,{children:[G.jsxs("mesh",{castShadow:!0,position:[-.56,.12,.15],rotation:[0,Math.PI*.25,0],children:[G.jsx("planeGeometry",{args:[.5,.25,1,1]}),G.jsx(Qv,{})]}),G.jsxs("mesh",{castShadow:!0,position:[-1.215,.12,.325],children:[G.jsx("planeGeometry",{args:[1,.25,1,1]}),G.jsx($v,{})]}),G.jsxs("mesh",{castShadow:!0,position:[.56,.12,.15],rotation:[0,Math.PI*-.25,0],children:[G.jsx("planeGeometry",{args:[.5,.25,1,1]}),G.jsx($v,{})]}),G.jsxs("mesh",{castShadow:!0,position:[1.215,.12,.325],children:[G.jsx("planeGeometry",{args:[1,.25,1,1]}),G.jsx(Qv,{})]})]});zy.__docgenInfo={description:"",methods:[],displayName:"RomeWalls"};const ky=()=>{const r=En(Fn,"/rome/arch-50-compressed.png");return G.jsxs("mesh",{castShadow:!0,position:[0,.66,0],children:[G.jsx("planeGeometry",{args:[1,1.35,1,1]}),G.jsx("meshStandardMaterial",{color:is,map:r,transparent:!0,alphaTest:.5,side:Vt})]})};ky.__docgenInfo={description:"",methods:[],displayName:"RomeArch"};const Vy=()=>{const r=En(Fn,"/rome/ground-inverse-compressed.jpg");return G.jsxs("mesh",{position:[0,0,0],rotation:[-Math.PI*.5,0,0],children:[G.jsx("planeGeometry",{args:[5,5,1,1]}),G.jsx(oP,{blur:[0,0],mixBlur:0,mixStrength:10,mixContrast:1,resolution:256,mirror:1,depthScale:0,minDepthThreshold:.9,maxDepthThreshold:1,depthToBlurRatioBias:.25,distortion:1,distortionMap:r})]})};Vy.__docgenInfo={description:"",methods:[],displayName:"RomeGround"};const e_=()=>{const r=En(Fn,"/rome/tree-0-inverse-mix-1-50-compressed.png");return G.jsx("meshStandardMaterial",{color:is,map:r,transparent:!0,alphaTest:.5,side:Vt})},t_=()=>{const r=En(Fn,"/rome/tree-0-inverse-mix-2-50-compressed.png");return G.jsx("meshStandardMaterial",{color:is,map:r,transparent:!0,alphaTest:.5,side:Vt})},Hy=()=>G.jsxs(G.Fragment,{children:[G.jsxs("mesh",{position:[-.75,.66,.2],children:[G.jsx("planeGeometry",{args:[1,1.35,1,1]}),G.jsx(e_,{})]}),G.jsxs("mesh",{position:[-1.25,.8,-.2],rotation:[0,Math.PI,0],children:[G.jsx("planeGeometry",{args:[1.25,1.75,1,1]}),G.jsx(t_,{})]}),G.jsxs("mesh",{position:[.75,.9,.15],children:[G.jsx("planeGeometry",{args:[1,1.75,1,1]}),G.jsx(e_,{})]}),G.jsxs("mesh",{position:[1.25,.8,-.2],rotation:[0,Math.PI,0],children:[G.jsx("planeGeometry",{args:[1.25,1.75,1,1]}),G.jsx(t_,{})]})]});Hy.__docgenInfo={description:"",methods:[],displayName:"RomeTrees"};const pP=()=>{const r=En(Fn,"/rome/bush-0-50-compressed.png");return G.jsx("meshStandardMaterial",{color:is,map:r,transparent:!0,alphaTest:.5,side:Vt})},du=({position:r=new I(0,0,0),planeArgs:e=[1,1,1,1],rotation:t=new Yt(0,0,0)})=>G.jsxs("mesh",{position:r,rotation:t,children:[G.jsx("planeGeometry",{args:e}),G.jsx(pP,{})]}),yu=({groupPosition:r=new I(0,0,0),groupRotation:e=new Yt(0,0,0)})=>G.jsxs("group",{position:r,rotation:e,children:[G.jsx(du,{position:new I(-.75,-.125,.2),planeArgs:[1,.35,1,1]}),G.jsx(du,{position:new I(-1.25,0,-.2),planeArgs:[1.25,.75,1,1],rotation:new Yt(0,Math.PI,0)}),G.jsx(du,{position:new I(.75,-.125,.2),planeArgs:[1,.35,1,1]}),G.jsx(du,{position:new I(1.25,0,-.2),planeArgs:[1.25,.75,1,1],rotation:new Yt(0,Math.PI,0)})]});yu.__docgenInfo={description:"",methods:[],displayName:"RomeBushes",props:{groupPosition:{defaultValue:{value:"new Vector3(0, 0, 0)",computed:!1},required:!1},groupRotation:{defaultValue:{value:"new Euler(0, 0, 0)",computed:!1},required:!1}}};const mP=()=>{const r=En(Fn,"/rome/light-post-0-50-compressed.png");return G.jsx("meshStandardMaterial",{color:is,map:r,transparent:!0,alphaTest:.5,side:Vt})},Lo=({position:r=new I(0,0,0),backLight:e=!1,castShadow:t=!1})=>{const n=new I().copy(r).add(new I(0,.5,.01)),i=new I().copy(r).add(new I(0,.5,-.01));return G.jsxs(G.Fragment,{children:[G.jsx("pointLight",{color:Kv,position:n,intensity:.2,castShadow:t}),e===!0?G.jsx("pointLight",{color:Kv,position:i,intensity:.125,castShadow:t}):"",G.jsxs("mesh",{position:r,children:[G.jsx("planeGeometry",{args:[.125,1,1,1]}),G.jsx(mP,{})]})]})},Gy=()=>G.jsxs(G.Fragment,{children:[G.jsx(Lo,{position:new I(-.75,.5,.5),backLight:!0,castShadow:!0}),G.jsx(Lo,{position:new I(.75,.5,.5),backLight:!0,castShadow:!0}),G.jsx(Lo,{position:new I(-.125,.25,-1)}),G.jsx(Lo,{position:new I(.125,.25,-1)}),G.jsx(Lo,{position:new I(-.125,.25,-2)}),G.jsx(Lo,{position:new I(.125,.25,-2)})]});Gy.__docgenInfo={description:"",methods:[],displayName:"RomeLights"};const Wy=()=>{const e=new Pt,t=new er({color:is,transparent:!0,opacity:.25}),n=new Qr(.005,.1,.005),i=.125/2*Math.PI,s=new I(Math.sin(i),-Math.cos(i),0).multiplyScalar(.05),a=200,c=new Yo(n,t,a);c.position.set(-2.5,0,-2.5);for(let m=0;m<a;m++)e.position.set(Math.random()*5,Math.random()*5,Math.random()*5),e.rotation.z=i,e.updateMatrix(),c.setMatrixAt(m,e.matrix);const u=new ft,h=new I,f=new pn,p=new I;return ns(()=>{for(let m=0;m<a;m++)c.getMatrixAt(m,u),u.decompose(h,f,p),e.position.copy(h).add(s),e.position.y<0&&(e.position.y=3,e.position.x=Math.random()*5,e.position.z=Math.random()*5),e.updateMatrix(),c.setMatrixAt(m,e.matrix);c.instanceMatrix.needsUpdate=!0}),G.jsx("primitive",{object:c})};Wy.__docgenInfo={description:"",methods:[],displayName:"RomeRain"};const Xy=()=>G.jsxs("group",{position:[0,-.5,0],children:[G.jsx("ambientLight",{color:dP,intensity:1}),G.jsx(Wy,{}),G.jsx(ky,{}),G.jsx(zy,{}),G.jsx(Vy,{}),G.jsx(Hy,{}),G.jsx(yu,{groupPosition:new I(0,.25,-1)}),G.jsx(yu,{groupPosition:new I(-1,.25,.1),groupRotation:new Yt(0,Math.PI*.35,0)}),G.jsx(yu,{groupPosition:new I(1,.25,.1),groupRotation:new Yt(0,Math.PI*-.35,0)}),G.jsx(Gy,{})]}),gP=({classNames:r=""})=>G.jsxs(Gh,{scene:{background:fP},shadows:!0,camera:{position:new I(0,.01,2.5)},className:r,children:[G.jsx(Xy,{}),G.jsx(pm,{enableDamping:!0,dampingFactor:.05,screenSpacePanning:!1,zoomSpeed:1,panSpeed:1,rotateSpeed:1})]});Xy.__docgenInfo={description:"",methods:[],displayName:"RomeShader"};gP.__docgenInfo={description:"",methods:[],displayName:"RomeShaderCanvas",props:{classNames:{defaultValue:{value:"''",computed:!1},required:!1}}};const jy=()=>{try{return document.createEvent("TouchEvent"),!0}catch{return!1}},pu=new Ie(65280),Ra=new Ie(16187187),dn=new Ie(9035774),wi=new I(0,5,0),Li=new Yt(0,0,0),n_=new I(0,0,0),i_=new I(0,0,0),r_=new I(0,0,0),s_=new I(0,0,5),rp=new I(0,0,0),o_=new I(0,0,0),sp=new I(0,0,0),vP=new ue(0,0),qi=new ue(0,0),Hr=new ue(0,0),Gr=new ue(0,0),op=.0125,Xr={vertexShader:`
        varying vec2 vUv;
        varying vec3 vPosition;

        void main() {
            vUv = uv;
            vPosition = position;
            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
    `,fragmentShader:`
        uniform vec3 color;
        uniform vec3 skyColorLight;
        uniform sampler2D wingTexture;

        varying vec2 vUv;
        varying vec3 vPosition;

        void main() {
            vec2 uv = vUv - vec2(0.5, 0.5);
            vec4 finalColor = texture2D(wingTexture, vUv);
            if(finalColor.a > 0.001) {
                finalColor = vec4(mix(color, skyColorLight, 1.0 - abs(uv.x) * 2.0), 1.0);
            }
            gl_FragColor = finalColor;
        }
    `},lh={vertexShader:`
        varying vec2 vUv;
        varying vec3 vPosition;

        void main() {
            vUv = uv;
            vPosition = position;
            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
    `,fragmentShader:`
        uniform vec3 color;
        uniform vec3 skyColorLight;

        varying vec2 vUv;
        varying vec3 vPosition;

        void main() {
            vec2 uv = vUv - vec2(0.5, 0.5);
            vec4 finalColor = vec4(mix(color, skyColorLight, abs(vPosition.y)), 1.0);
            gl_FragColor = finalColor;
        }
    `},_P=({sendUpdate:r})=>{const e=En(Fn,"./insects/butterfly-wings.png"),t=En(Fn,"./insects/butterfly-wings-1.png"),[n,i]=_e.useState([0,0]),s=_e.useRef(null),a=_e.useRef(null),c=_e.useRef(null),u=_e.useRef(null),{camera:h}=Ei(),[f,p]=_e.useState(0),[m,g]=_e.useState([wi.x,wi.y,wi.z]),[x,M]=_e.useState([Li.x,Li.y,Li.z]),[y,_]=_e.useState([Li.x,Li.y,Li.z]),[E,w]=_e.useState({a:!1,w:!1,s:!1,d:!1}),T=jy(),[L,R]=_e.useState(0);_e.useEffect(()=>{L%10===0&&r({payload:{insectPosition:m,insectRotation:x}})},[L]),_e.useEffect(()=>{const W=Z=>{const fe=Z.key.toLowerCase();E[fe]!==void 0&&w(Ee=>({...Ee,[fe]:!0}))},$=Z=>{const fe=Z.key.toLowerCase();E[fe]!==void 0&&w(Ee=>({...Ee,[fe]:!1}))},oe=Z=>{if(Z.buttons>0){const fe=Z.clientX-window.innerWidth/2<0&&Math.abs(Z.clientX-window.innerWidth/2)>50,Ee=Z.clientX-window.innerWidth/2>0&&Math.abs(Z.clientX-window.innerWidth/2)>50;E.w===!1?w(ne=>({...ne,a:!1,d:!1})):w(ne=>({...ne,a:fe,d:Ee}))}i([Z.clientX,Z.clientY])},ee=Z=>{i([Z.touches[0].clientX,Z.touches[0].clientY]);const fe=Z.touches[0].clientX-window.innerWidth/2<0&&Math.abs(Z.touches[0].clientX-window.innerWidth/2)>50,Ee=Z.touches[0].clientX-window.innerWidth/2>0&&Math.abs(Z.touches[0].clientX-window.innerWidth/2)>50;w(ne=>({...ne,w:!0,a:fe,d:Ee})),Z.preventDefault()},ge=Z=>{const fe=Z.clientX-window.innerWidth/2<0&&Math.abs(Z.clientX-window.innerWidth/2)>50,Ee=Z.clientX-window.innerWidth/2>0&&Math.abs(Z.clientX-window.innerWidth/2)>50;w(ne=>({...ne,w:!0,a:fe,d:Ee}))},O=()=>{w(Z=>({...Z,w:!1,a:!1,d:!1}))},Y=Z=>{w({a:!1,w:!1,s:!1,d:!1}),Z.preventDefault()},X=document.querySelector(".container-100");if(X!==null)return document.addEventListener("keydown",W),document.addEventListener("keyup",$),X.addEventListener("mousemove",oe),X.addEventListener("touchmove",ee,{passive:!1}),X.addEventListener("touchend",Y,{passive:!1}),T===!1&&(X.addEventListener("mousedown",ge),X.addEventListener("mouseup",O)),()=>{document.removeEventListener("keydown",W),document.removeEventListener("keyup",$),X.removeEventListener("mousemove",oe),X.removeEventListener("touchmove",ee),X.removeEventListener("touchend",Y),T===!1&&(X.removeEventListener("mousedown",ge),X.removeEventListener("mouseup",O))}},[E,T]);const U=T===!0?window.innerHeight-125:window.innerHeight/2,N=.1;ns(({clock:W})=>{R(O=>O+1),vP.set(n[0],n[1]),qi.set((n[0]-window.innerWidth/2)/(window.innerWidth/2),(n[1]-U)/U),Hr.copy(qi),Math.abs(qi.x)<N?Hr.x=0:qi.x>0?Hr.x=qi.x-N:Hr.x=qi.x+N,Math.abs(qi.y)<N?Hr.y=0:qi.y>0?Hr.y=qi.y-N:Hr.y=qi.y+N,Gr.copy(Hr).multiplyScalar(.25),c&&c.current&&a&&a.current&&u&&u.current&&(n_.copy(c.current.position),i_.copy(c.current.localToWorld(n_)),s_.copy(a.current.position),r_.copy(a.current.localToWorld(s_)),h.position.copy(i_),h.position.y<.1&&(h.position.y=.1),o_.copy(u.current.position),rp.copy(u.current.localToWorld(o_)),h.lookAt(rp),sp.copy(rp).sub(r_).normalize().multiplyScalar(op));const ee=Gr.y>0&&T===!0?5:1;E.w&&(wi.add(sp.multiplyScalar(5)),wi.y+=Gr.y*-1*ee),E.s&&(wi.sub(sp.multiplyScalar(2)),wi.y+=Gr.y*ee),E.a&&(Li.y+=op),E.d&&(Li.y-=op);const ge=T===!1?1:-1;_([Gr.y*ge,Gr.x,0]),wi.y<.1&&(wi.y=.1),g([wi.x,wi.y,wi.z]),M([Li.x+Gr.y,Li.y+Gr.x,Li.z]),p(Math.sin(W.elapsedTime*6)/1.5)});const C=new Ie(16777215),A={wingTexture:{value:e},color:{value:C},skyColorLight:{value:dn}},F={wingTexture:{value:t},color:{value:C},skyColorLight:{value:dn}},q={color:{value:C},skyColorLight:{value:dn}};return G.jsx(G.Fragment,{children:G.jsxs("group",{ref:s,rotation:x,position:m,children:[G.jsxs("group",{ref:u,rotation:[-.75,0,0],children:[G.jsxs("mesh",{position:[-.05,.75,.175],rotation:[.5,0,.125],children:[G.jsx("cylinderGeometry",{args:[.02,.02,.75,4,1]}),G.jsx("meshBasicMaterial",{color:dn})]}),G.jsxs("mesh",{position:[.05,.75,.175],rotation:[.5,0,-.125],children:[G.jsx("cylinderGeometry",{args:[.02,.02,.75,4,1]}),G.jsx("meshBasicMaterial",{color:dn})]}),G.jsxs("mesh",{children:[G.jsx("cylinderGeometry",{args:[.05,.05,.85,8,1]}),G.jsx("shaderMaterial",{vertexShader:lh.vertexShader,fragmentShader:lh.fragmentShader,transparent:!0,depthWrite:!1,side:Vt,uniforms:q})]}),G.jsxs("mesh",{rotation:[0,.5+f,0],position:[-.05,0,0],children:[G.jsx("planeGeometry",{args:[1.5,1.5,1,1]}),G.jsx("shaderMaterial",{vertexShader:Xr.vertexShader,fragmentShader:Xr.fragmentShader,transparent:!0,depthWrite:!1,side:Vt,uniforms:A})]}),G.jsxs("mesh",{rotation:[-0,-.5-f,0],position:[.05,0,0],children:[G.jsx("planeGeometry",{args:[1.5,1.5,1,1]}),G.jsx("shaderMaterial",{vertexShader:Xr.vertexShader,fragmentShader:Xr.fragmentShader,transparent:!0,depthWrite:!1,side:Vt,uniforms:F})]})]}),G.jsxs("mesh",{ref:a,position:[0,0,3],children:[G.jsx("boxGeometry",{args:[.05,.05,.01,1,1]}),G.jsx("meshStandardMaterial",{color:65280,transparent:!0,opacity:0})]}),G.jsx("group",{rotation:y,children:G.jsxs("mesh",{ref:c,position:[0,0,3],children:[G.jsx("boxGeometry",{args:[.05,.05,.05,1,1]}),G.jsx("meshStandardMaterial",{color:65280,transparent:!0,opacity:0})]})})]})})},a_=new I,l_=new I,mu=new I,ap=new pn,c_=new pn,u_=new Yt,h_=new Yt,gu=new Yt,xP=({position:r,rotation:e})=>{const t=En(Fn,"./insects/butterfly-wings.png"),n=En(Fn,"./insects/butterfly-wings-1.png"),i=_e.useRef(null),s=_e.useRef(null),a=_e.useRef(null),[c,u]=_e.useState(0),[h,f]=_e.useState(r),[p,m]=_e.useState(e);ns(({clock:_})=>{f(E=>(a_.set(E[0],E[1],E[2]),l_.set(r[0],r[1],r[2]),mu.lerpVectors(a_,l_,.1),[mu.x,mu.y,mu.z])),m(E=>(u_.set(E[0],E[1],E[2]),ap.setFromEuler(u_),h_.set(e[0],e[1],e[2]),c_.setFromEuler(h_),ap.slerp(c_,.1),gu.setFromQuaternion(ap),[gu.x,gu.y,gu.z])),u(Math.sin(_.elapsedTime*6)/1.5)});const g=new Ie(16777215),x={wingTexture:{value:t},color:{value:g},skyColorLight:{value:dn}},M={wingTexture:{value:n},color:{value:g},skyColorLight:{value:dn}},y={color:{value:g},skyColorLight:{value:dn}};return G.jsx(G.Fragment,{children:G.jsxs("group",{ref:i,rotation:p,position:h,children:[G.jsxs("group",{ref:a,rotation:[-.75,0,0],children:[G.jsxs("mesh",{position:[-.05,.75,.175],rotation:[.5,0,.125],children:[G.jsx("cylinderGeometry",{args:[.02,.02,.75,4,1]}),G.jsx("meshBasicMaterial",{color:dn})]}),G.jsxs("mesh",{position:[.05,.75,.175],rotation:[.5,0,-.125],children:[G.jsx("cylinderGeometry",{args:[.02,.02,.75,4,1]}),G.jsx("meshBasicMaterial",{color:dn})]}),G.jsxs("mesh",{children:[G.jsx("cylinderGeometry",{args:[.05,.05,.85,8,1]}),G.jsx("shaderMaterial",{vertexShader:lh.vertexShader,fragmentShader:lh.fragmentShader,transparent:!0,depthWrite:!1,side:Vt,uniforms:y})]}),G.jsxs("mesh",{rotation:[0,.5+c,0],position:[-.05,0,0],children:[G.jsx("planeGeometry",{args:[1.5,1.5,1,1]}),G.jsx("shaderMaterial",{vertexShader:Xr.vertexShader,fragmentShader:Xr.fragmentShader,transparent:!0,depthWrite:!1,side:Vt,uniforms:x})]}),G.jsxs("mesh",{rotation:[-0,-.5-c,0],position:[.05,0,0],children:[G.jsx("planeGeometry",{args:[1.5,1.5,1,1]}),G.jsx("shaderMaterial",{vertexShader:Xr.vertexShader,fragmentShader:Xr.fragmentShader,transparent:!0,depthWrite:!1,side:Vt,uniforms:M})]})]}),G.jsxs("mesh",{ref:s,position:[0,0,3],children:[G.jsx("boxGeometry",{args:[.05,.05,.01,1,1]}),G.jsx("meshStandardMaterial",{color:65280,transparent:!0,opacity:0})]})]})})},f_={vertexShader:`
        varying vec2 vUv;
        varying vec3 vPosition;

        void main() {
            vUv = uv;
            vPosition = position;
            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
    `,fragmentShader:`
        uniform vec3 skyColorLight;
        varying vec2 vUv;
        varying vec3 vPosition;
        
        void main() {
            vec3 skyColorMixWhite = mix(vec3(1.0, 1.0, 1.0), skyColorLight, vPosition.y * 2.0);
            gl_FragColor = vec4(skyColorMixWhite, 1.0);
        }
    `},yP=()=>G.jsxs("mesh",{scale:[100,100,100],children:[G.jsx("sphereGeometry",{}),G.jsx("shaderMaterial",{vertexShader:f_.vertexShader,fragmentShader:f_.fragmentShader,uniforms:{skyColorLight:{value:dn}},side:Vt})]}),d_={vertexShader:`
        varying vec2 vUv;
        varying vec3 vPosition;

        void main() {
            vUv = uv;
            vPosition = position;
            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
    `,fragmentShader:`
        uniform vec3 skyColorLight;
        varying vec2 vUv;
        varying vec3 vPosition;
        
        void main() {
            float distanceFromCenter = distance(vPosition, vec3(0.0,0.0,0.0)) / 100.0;
            vec3 uvModColor = vec3(vPosition) * .25;
            vec3 groundColor = vec3(0.0, 1.0, 0.0);
            vec3 groundColorUvModColorMix = mix(groundColor, uvModColor, .05);
            vec3 groundColorSkyMix = mix(groundColor, vec3(1.0, 1.0, 1.0), distanceFromCenter);
            gl_FragColor = vec4(groundColorSkyMix, 1.0);
        }
    `},ch={vertexShader:`
    varying vec2 vUv;
    uniform float time;
    varying vec3 vPosition;
    
      void main() {
        vUv = uv;      
        vec4 mvPosition = vec4( position, 1.0 );
        #ifdef USE_INSTANCING
            mvPosition = instanceMatrix * mvPosition;
            vPosition = vec3(mvPosition.x, mvPosition.y, mvPosition.z);
        #endif
        float dispPower = 1.0 - cos( uv.y * 3.1416 / 2.0 );
        float displacement = sin( mvPosition.z + time * 7.0 ) * ( 0.1 * dispPower );
        mvPosition.z += displacement;            
        vec4 modelViewPosition = modelViewMatrix * mvPosition;
        gl_Position = projectionMatrix * modelViewPosition;
      }
  `,fragmentShader:`
    varying vec3 vPosition;
    varying vec2 vUv;
    uniform vec3 skyColorLight;
    uniform vec3 baseColor;
    void main() {
        float clarity = ( vUv.y * 0.5 ) + 0.5;
        vec3 mixSkyColorLight = mix(skyColorLight, baseColor, clarity);
        mixSkyColorLight = mix(mixSkyColorLight, vPosition / 10.0, .125);
        gl_FragColor = vec4( mixSkyColorLight, 1 );
    }
  `},Pa=({baseColor:r,skyColor:e,instanceNumber:t,instanceOrigin:n,planeGeometryArgs:i,placementScale:s,instanceScale:a})=>{const c={time:{value:0},skyColorLight:{value:e},baseColor:{value:r}},u=new ii({vertexShader:ch.vertexShader,fragmentShader:ch.fragmentShader,uniforms:c,side:Vt}),h=new Pt,f=new es(i[0],i[1],i[2],i[3]),p=new Yo(f,u,t);for(let m=0;m<t;m++){const g=Math.random()*Math.PI*2,x=Math.sqrt(Math.random())*s,M=x*Math.cos(g),y=x*Math.sin(g);h.position.set(M,0,y),h.scale.setScalar(.5+Math.random()*a),h.rotation.y=Math.random()*Math.PI,h.updateMatrix(),p.setMatrixAt(m,h.matrix)}return p.position.copy(n),ns(({clock:m})=>{u.uniforms.time.value=m.getElapsedTime(),u.uniformsNeedUpdate=!0}),G.jsx("primitive",{object:p})},lp=({baseColor:r,skyColor:e,instanceNumber:t,instanceOrigin:n,circleGeometryArgs:i,placementScale:s,instanceScale:a})=>{const c={time:{value:0},skyColorLight:{value:e},baseColor:{value:r}},u=new ii({vertexShader:ch.vertexShader,fragmentShader:ch.fragmentShader,uniforms:c,side:Vt}),h=new Pt,f=new gl(i[0],i[1]),p=new Yo(f,u,t);for(let m=0;m<t;m++){const g=Math.random()*Math.PI*2,x=Math.sqrt(Math.random())*s,M=x*Math.cos(g),y=x*Math.sin(g);h.position.set(M,Math.random()/5,y),h.scale.setScalar(.1+Math.random()*a),h.rotation.set(Math.PI/Math.random()*2,Math.random()/10,Math.random()/10),h.updateMatrix(),p.setMatrixAt(m,h.matrix)}return p.position.copy(n),G.jsx("primitive",{object:p})},SP=()=>G.jsxs(G.Fragment,{children:[G.jsx(lp,{baseColor:pu,skyColor:dn,instanceNumber:500,instanceOrigin:new I(0,0,-20),circleGeometryArgs:[.5,8],placementScale:16,instanceScale:2}),G.jsx(lp,{baseColor:pu,skyColor:dn,instanceNumber:1500,instanceOrigin:new I(0,0,0),circleGeometryArgs:[.5,8],placementScale:30,instanceScale:1}),G.jsx(lp,{baseColor:Ra,skyColor:dn,instanceNumber:500,instanceOrigin:new I(0,0,0),circleGeometryArgs:[.5,8],placementScale:20,instanceScale:1}),G.jsx(Pa,{baseColor:Ra,skyColor:dn,instanceNumber:500,instanceOrigin:new I(-5,0,-5),planeGeometryArgs:[.05,2,1,4],placementScale:10,instanceScale:1}),G.jsx(Pa,{baseColor:Ra,skyColor:Ra,instanceNumber:500,instanceOrigin:new I(5,0,3),planeGeometryArgs:[.05,2,1,4],placementScale:10,instanceScale:2}),G.jsx(Pa,{baseColor:pu,skyColor:dn,instanceNumber:5e3,instanceOrigin:new I(0,0,0),planeGeometryArgs:[.15,1,1,4],placementScale:40,instanceScale:1.5}),G.jsx(Pa,{baseColor:Ra,skyColor:dn,instanceNumber:2500,instanceOrigin:new I(0,0,0),planeGeometryArgs:[.15,1,1,4],placementScale:50,instanceScale:1.5}),G.jsx(Pa,{baseColor:pu,skyColor:dn,instanceNumber:2500,instanceOrigin:new I(0,0,0),planeGeometryArgs:[.15,1,1,4],placementScale:60,instanceScale:.5}),G.jsxs("mesh",{rotation:[Math.PI/2,0,0],position:[0,-.5,0],children:[G.jsx("planeGeometry",{args:[1e3,1e3,1,1]}),G.jsx("shaderMaterial",{vertexShader:d_.vertexShader,fragmentShader:d_.fragmentShader,uniforms:{skyColorLight:{value:dn}},side:Vt})]})]}),MP="ws://localhost:8080",wP="wss://websocket-service-943494934642.us-central1.run.app",EP=window.location.href.includes("localhost")?MP:wP,TP=()=>{const[r,e]=_e.useState({uuid:"",status:"unconnected",memory:{}}),t=_e.useRef(null);window.clientData=r,_e.useEffect(()=>(t.current=new WebSocket(EP),t.current.onopen=()=>{i({messageType:"connectedFromClient",uuid:r.uuid,timeStamp:new Date().getTime(),payload:{}})},t.current.onmessage=a=>{const c=JSON.parse(a.data);n(c)},t.current.onclose=()=>{console.log("WebSocket connection closed")},t.current.onerror=a=>{console.log("WebSocket Error: ",a)},()=>{var a;(a=t.current)==null||a.close()}),[]);const n=a=>{switch(a.messageType){case"connectedFromServer":e(c=>({...c,uuid:a.payload.uuid}));break;case"disconnectedFromServer":e(c=>({...c,status:a.messageType}));break;case"broadcastUpdateFromServer":{const{uuid:c,updatePayload:u}=a.payload;e(h=>({...h,memory:{...h.memory,[c]:{...h.memory[c],...u.payload}}}))}break;case"broadcastDisconnectedFromServer":{const c=a.payload.uuid;e(u=>{const h={...u.memory};return delete h[c],{...u,memory:h}});break}}},i=a=>{var c;((c=t.current)==null?void 0:c.readyState)===WebSocket.OPEN&&t.current.send(JSON.stringify(a))},s=a=>{i({messageType:"updateFromClient",uuid:r.uuid,payload:a,timeStamp:new Date().getTime()})};return G.jsxs(G.Fragment,{children:[G.jsx(_P,{sendUpdate:s}),Object.keys(r.memory).map((a,c)=>G.jsx(xP,{position:r.memory[a].insectPosition,rotation:r.memory[a].insectRotation},c))]})},bP=({classNames:r=""})=>{const e=jy();return G.jsxs(G.Fragment,{children:[G.jsxs(Gh,{gl:{antialias:!0,toneMapping:bi},linear:!0,className:r,children:[G.jsx(SP,{}),G.jsx(yP,{}),G.jsx("perspectiveCamera",{}),G.jsx(TP,{})]}),e===!0&&G.jsx("div",{className:"mobile-control-circle",children:G.jsx("img",{src:"insects/mobile-control-circle-white.png"})})]})};bP.__docgenInfo={description:"",methods:[],displayName:"InsectsShaderCanvas",props:{classNames:{defaultValue:{value:"''",computed:!1},required:!1}}};export{BS as B,bP as I,gP as R,hP as S,lP as W};
